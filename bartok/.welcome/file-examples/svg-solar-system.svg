<svg
  viewBox='-100 -100 200 200'
  xmlns='http://www.w3.org/2000/svg'
  xmlns:xlink="http://www.w3.org/1999/xlink"
>

<!--

inspired by:
https://www.youtube.com/watch?v=VEgH61FioaY

actual distances between solar bodies:
https://joshworth.com/dev/pixelspace/pixelspace_solarsystem.html

reasonable css starfield in 6 lines:
https://leaverou.github.io/css3patterns/#starry-night


svg z-index / 3d transform (there isn't one):
https://stackoverflow.com/questions/17786618/how-to-use-z-index-in-svg-elements

svg filter blur:
https://stackoverflow.com/questions/25489846/svg-css-filter-to-blur-some-elements

svg filter animate turbulence:
https://blogs.adobe.com/creativecloud/how-to-create-squiggly-text-with-svg-filters/

svg filter animate tubulence seed:
https://redstapler.co/realistic-water-effect-svg-turbulence-filter/

svg animation splines:
http://franzheidl.github.io/keysplines/

svg animate on path:
https://stackoverflow.com/questions/34748303/how-can-i-draw-an-ellipse-as-a-path-in-svg


SVG IRRITATIONS (versus DOM):
  - gradients require markup
  - no 3d transforms / z-index
  - no CSS animation keyframes (?)
  - filter creation unwieldy
  - namespaces, yuck

SVG IS COOL (versus DOM):
  - filters are powerful (can be used in po-CSS)
  - geometry primitives

IDEAS FOR IMPROVEMENT:
  - motion does not seem accurate
  - elliptical orbits
  - more planets
  - illumination on planets
  - twinkline stars (even though this is not accurate)
  - moon(s) for planets
  - rings/patterns on planets
  - performance
  - port to html/css
    - https://danielcwilson.com/blog/2020/01/motion-path-quirks/
    - https://www.the-art-of-web.com/css/css-animation/
    - https://www.the-art-of-web.com/css/3d-transforms/
    - https://css-tricks.com/things-watch-working-css-3d/
  - port to canvas
  - port to webgl
  - port to shader
  - show the temperature of planets based on scale
-->

  <style>
    body {
      display: flex;
      height: 85vh;
    }
    pre {
      margin: auto;
      width: 100vw;
    }
    body, svg {
      background: #13121a;
      background-image:
        radial-gradient(white, rgba(255,255,255,.1) 2px, transparent 10px),
        radial-gradient(white, rgba(255,255,255,.15) 1px, transparent 1px),
        radial-gradient(white, rgba(255,255,255,.05) 1px, transparent 0.5px),
        radial-gradient(rgba(255,255,255,.1), rgba(255,255,255,.1) 2px, transparent 1px);
      background-size: 550px 690px, 350px 500px, 250px 300px, 150px 150px;
      background-position: 0 0, 40px 60px, 130px 270px, 70px 100px;
      background-repeat: repeat;
      filter: grayscale(0) contrast(1.1);
    }
    pre > svg { background: transparent !important; }
    #sun {
      r: 25;
      fill: url(#sun-gradient);
      filter: url(#sun-filter);
    }
    .earth { r: 1; }
    #planet2 { r: 5; }
    #orbit, #orbit2, #orbit3 {
      stroke: #555;
      opacity: 0.9;
      fill: none;
      stroke-width: 0.3;
    }
  </style>

  <defs>
    <radialGradient id="sun-gradient" cx="50%" cy="50%" r="80%" fx="50%" fy="61%">
      <stop offset="20%" style="stop-color:#ff1111;" />
      <stop offset="50%" style="stop-color:#ff7700;" />
      <stop offset="70%" style="stop-color:#ffffff;" />
    </radialGradient>

    <filter id="sun-filter">
      <feTurbulence id="turb-filter" type="fractalNoise" baseFrequency="0.9"
        numOctaves="1" result="turbulence"
      />
      <feDisplacementMap in2="turbulence" in="SourceGraphic"
        scale="10" xChannelSelector="B" yChannelSelector="G"
        result="displace-one"
      />
      <feDisplacementMap in2="turbulence" in="displace-one"
        scale="5" xChannelSelector="B" yChannelSelector="R"
        result="displace"
      />
      <animate
        xlink:href="#turb-filter"
        attributeName="baseFrequency"
        dur="10s"
        keyTimes="0;0.5;1"
        values="1;0.9;1"
        repeatCount="indefinite"
      />
      <feGaussianBlur in="displace" stdDeviation="0.25" result="blur"/>
    </filter>
  </defs>

  <path id="orbit"
        d="M-80 0
           A80,20 0 1,1 80,0
           A80,20 0 1,1 -80,0"
        stroke-width="1"
  />

  <path id="orbit3"
        d="M-110 5
           A110,35 0 1,1 110,10
           A110,35 0 1,1 -110,5"
        stroke-width="1"
  />

  <circle id="earth_back" class="earth">
    <animateMotion
       begin="0s"
       dur="8s"
       repeatCount="indefinite"
     >
       <mpath xlink:href="#orbit"/>
    </animateMotion>
    <animate
       attributeType="CSS"
       attributeName="display"
       from="block" to="none"
       dur="8s"
       repeatCount="indefinite"
     />
     <animate
       attributeType="CSS"
       attributeName="fill"
       from="#2965ff" to="#2965ff"
       values="#2965ff;#f79;#2965ff"
       keyTimes="0;0.5;1"
       dur="4s"
       repeatCount="indefinite"
     />
     <animate
        attributeName="transform"
        attributeType="XML"
        type="scale"
        values="1;0.25;1"
        keyTimes="0;0.5;1"
        dur="4s"
        repeatCount="indefinite"
     />
  </circle>

  <circle id="sun"/>

  <path
    id="orbit2"
    d="M25 18.91
       A 29,2 0,0 1 -25,18.91"
  />

  <circle id="earth_front" class="earth">
    <animateMotion
       begin="0s"
       dur="8s"
       repeatCount="indefinite"
     >
      <mpath xlink:href="#orbit"/>
    </animateMotion>
    <animate
       attributeType="CSS"
       attributeName="display"
       from="none" to="block" dur="8s"
       repeatCount="indefinite"
    />
    <animate
       attributeType="CSS"
       attributeName="fill"
       from="#2965ff" to="#2965ff"
       values="#2965ff;#008;#2965ff"
       keyTimes="0;0.5;1"
       dur="4s"
       repeatCount="indefinite"
    />
    <animateTransform
      attributeName="transform"
      attributeType="XML"
      type="scale"
      values="1;2;1"
      keyTimes="0;0.5;1"
      dur="4s"
      repeatCount="indefinite"
    />
  </circle>

  <circle id="planet2" class="earth">
    <animateMotion
       begin="0s"
       dur="12s"
       repeatCount="indefinite"
     >
      <mpath xlink:href="#orbit3"/>
    </animateMotion>
    <animate
       attributeType="CSS"
       attributeName="fill"
       values="#066;#077;#066;#033;#066;"
       keyTimes="0;0.25;0.5;0.75;1"
       dur="12s"
       repeatCount="indefinite"
    />
    <animateTransform
      attributeName="transform"
      attributeType="XML"
      type="scale"
      values="1;0.25;1;2;1"
      keyTimes="0;0.25;0.5;0.75;1"
      dur="12s"
      repeatCount="indefinite"
    />
  </circle>
</svg>
