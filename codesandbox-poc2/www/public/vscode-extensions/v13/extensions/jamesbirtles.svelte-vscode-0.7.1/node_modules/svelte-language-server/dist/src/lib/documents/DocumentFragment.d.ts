import { Position, Document, FragmentDetails } from '../../api';
export declare class DocumentFragment extends Document {
    private parent;
    details: FragmentDetails;
    /**
     * @param parent The fragment's parent document
     * @param offsets The start and end offset in the parent document
     */
    constructor(parent: Document, details: FragmentDetails);
    /**
     * Get the fragment offset relative to the parent
     * @param offset Offset in fragment
     */
    offsetInParent(offset: number): number;
    /**
     * Get the fragment position relative to the parent
     * @param pos Position in fragment
     */
    positionInParent(pos: Position): Position;
    /**
     * Get the offset relative to the start of the fragment
     * @param offset Offset in parent
     */
    offsetInFragment(offset: number): number;
    /**
     * Get the position relative to the start of the fragment
     * @param pos Position in parent
     */
    positionInFragment(pos: Position): Position;
    /**
     * Returns true if the given parent position is inside of this fragment
     * @param pos Position in parent
     */
    isInFragment(pos: Position): boolean;
    /**
     * Get the fragment text from the parent
     */
    getText(): string;
    /**
     * Update the fragment text in the parent
     */
    setText(text: string): void;
    /**
     * Returns the length of the fragment as calculated from the start and end positon
     */
    getTextLength(): number;
    /**
     * Return the parent file path
     */
    getFilePath(): string | null;
    getURL(): string;
    version: number;
    getAttributes(): Record<string, string>;
}
