"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var DocumentFragment_1 = require("./DocumentFragment");
var utils_1 = require("../../utils");
var api_1 = require("../../api");
/**
 * Represents a text document that contains a svelte component.
 */
var SvelteDocument = /** @class */ (function (_super) {
    __extends(SvelteDocument, _super);
    function SvelteDocument(url, content) {
        var _this = _super.call(this) || this;
        _this.url = url;
        _this.content = content;
        _this.script = _this.addFragment(new DocumentFragment_1.DocumentFragment(_this, new SvelteFragment(_this, 'script')));
        _this.style = _this.addFragment(new DocumentFragment_1.DocumentFragment(_this, new SvelteFragment(_this, 'style')));
        return _this;
    }
    /**
     * Get text content
     */
    SvelteDocument.prototype.getText = function () {
        return this.content;
    };
    /**
     * Set text content and increase the document version
     */
    SvelteDocument.prototype.setText = function (text) {
        this.content = text;
        this.version++;
    };
    /**
     * Returns the file path if the url scheme is file
     */
    SvelteDocument.prototype.getFilePath = function () {
        return utils_1.urlToPath(this.url);
    };
    SvelteDocument.prototype.getURL = function () {
        return this.url;
    };
    SvelteDocument.prototype.getAttributes = function () {
        return {};
    };
    return SvelteDocument;
}(api_1.Document));
exports.SvelteDocument = SvelteDocument;
var SvelteFragment = /** @class */ (function () {
    function SvelteFragment(document, tag) {
        this.document = document;
        this.tag = tag;
        this.version = -1;
        this.update();
    }
    Object.defineProperty(SvelteFragment.prototype, "start", {
        get: function () {
            this.update();
            return this.info.start;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SvelteFragment.prototype, "end", {
        get: function () {
            this.update();
            return this.info.end;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SvelteFragment.prototype, "container", {
        get: function () {
            this.update();
            return this.info.container;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SvelteFragment.prototype, "attributes", {
        get: function () {
            this.update();
            return __assign({}, this.info.attributes, { tag: this.tag });
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Find the tag in the document if we detected a change
     */
    SvelteFragment.prototype.update = function () {
        if (this.document.version === this.version) {
            return;
        }
        this.version = this.document.version;
        var info = extractTag(this.document.getText(), this.tag);
        if (info) {
            this.info = info;
            return;
        }
        var length = this.document.getTextLength();
        this.info = {
            attributes: {},
            start: length,
            end: length,
            container: {
                start: length,
                end: length,
            },
        };
    };
    return SvelteFragment;
}());
exports.SvelteFragment = SvelteFragment;
function parseAttributeValue(value) {
    return /^['"]/.test(value) ? value.slice(1, -1) : value;
}
function parseAttributes(str) {
    var attrs = {};
    str
        .split(/\s+/)
        .filter(Boolean)
        .forEach(function (attr) {
        var _a = attr.split('='), name = _a[0], value = _a[1];
        attrs[name] = value ? parseAttributeValue(value) : name;
    });
    return attrs;
}
function extractTag(source, tag) {
    var exp = new RegExp("(<" + tag + "([\\S\\s]*?)>)([\\S\\s]*?)<\\/" + tag + ">", 'ig');
    var match = exp.exec(source);
    if (!match) {
        return null;
    }
    var attributes = parseAttributes(match[2]);
    var content = match[3];
    var start = match.index + match[1].length;
    var end = start + content.length;
    return {
        content: content,
        attributes: attributes,
        start: start,
        end: end,
        container: { start: match.index, end: match.index + match[0].length },
    };
}
//# sourceMappingURL=SvelteDocument.js.map