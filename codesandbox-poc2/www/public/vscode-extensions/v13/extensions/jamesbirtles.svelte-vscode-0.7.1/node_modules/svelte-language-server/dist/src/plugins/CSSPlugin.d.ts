import { Host, Document, HoverProvider, Position, Hover, CompletionItem, CompletionsProvider, Fragment, DiagnosticsProvider, Diagnostic, TextEdit, Range, FormattingProvider, DocumentColorsProvider, ColorInformation, ColorPresentationsProvider, Color, ColorPresentation, DocumentSymbolsProvider, SymbolInformation } from '../api';
export declare class CSSPlugin implements HoverProvider, CompletionsProvider, DiagnosticsProvider, FormattingProvider, DocumentColorsProvider, ColorPresentationsProvider, DocumentSymbolsProvider {
    static matchFragment(fragment: Fragment): boolean;
    pluginId: string;
    defaultConfig: {
        enable: boolean;
        diagnostics: {
            enable: boolean;
        };
        hover: {
            enable: boolean;
        };
        completions: {
            enable: boolean;
        };
        format: {
            enable: boolean;
        };
        documentColors: {
            enable: boolean;
        };
        colorPresentations: {
            enable: boolean;
        };
        documentSymbols: {
            enable: boolean;
        };
    };
    private host;
    private stylesheets;
    onRegister(host: Host): void;
    getDiagnostics(document: Document): Diagnostic[];
    doHover(document: Document, position: Position): Hover | null;
    getCompletions(document: Document, position: Position): CompletionItem[];
    formatDocument(document: Document): Promise<TextEdit[]>;
    getDocumentColors(document: Document): ColorInformation[];
    getColorPresentations(document: Document, range: Range, color: Color): ColorPresentation[];
    getDocumentSymbols(document: Document): SymbolInformation[];
}
