<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>marko</string>
	</array>
	<key>name</key>
	<string>Marko</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#scriptlet</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#special-js-tags</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#js-code-block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#component-style</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-concise-line</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-concise-block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-html</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comment-html-tag</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#html-block-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#html-line-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#cdata</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#doctype</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-script-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-style-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-concise</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#tag-html</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#placeholder-patterns</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>attr-assignment-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>(?:\s+|[,])(?:(key)|([a-zA-Z][a-zA-Z]*)|([_a-zA-Z0-9][a-zA-Z0-9:_.-]*))\s*([=])\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-attribute</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=([,;]|\s|$))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>attr-assignment-html</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>(?:\s+|[,])(?:(key)|([a-zA-Z][a-zA-Z]*)|([_a-zA-Z0-9][a-zA-Z0-9:_.-]*))\s*([=])\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-attribute</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[,;]|\s|/&gt;|&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-no-gt</string>
				</dict>
			</array>
		</dict>
		<key>attr-js-block</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\s\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>attr-no-value</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.html</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s+(?:([a-zA-Z][a-zA-Z]*)|(data-[a-zA-Z0-9-]*)|([a-zA-Z0-9][a-zA-Z0-9:_.-]+))(?=\s|/&gt;|&gt;|$)</string>
		</dict>
		<key>attr-semicolon</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>([;])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-block</string>
				</dict>
			</array>
		</dict>
		<key>attr-special</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-attribute</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s+(else)\b</string>
		</dict>
		<key>attr-spread-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>(?:\s+|[,])(\.\.\.)\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=([,;]|\s|$))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>attr-spread-html</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>(?:\s+|[,])(\.\.\.)\s*</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.key-value.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=[,;]|\s|/&gt;|&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-no-gt</string>
				</dict>
			</array>
		</dict>
		<key>attr-stuff-concise</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-block</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\s[\[]</string>
					<key>end</key>
					<string>[\]]</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#attr-stuff-concise</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>[,]\s*$</string>
					<key>end</key>
					<string>(?=\s)</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-with-arg</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-assignment-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-spread-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-no-value</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-js-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-semicolon</string>
				</dict>
			</array>
		</dict>
		<key>attr-stuff-html</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-special</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-with-arg</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-assignment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-spread-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-no-value</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-js-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-no-gt</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-semicolon</string>
				</dict>
			</array>
		</dict>
		<key>attr-with-arg</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\s+([_a-zA-Z0-9][a-zA-Z0-9:_.-]+)(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-attribute</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>cdata</key>
		<dict>
			<key>begin</key>
			<string>&lt;!\[CDATA\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.xml</string>
				</dict>
			</dict>
			<key>end</key>
			<string>]]&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.xml</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.unquoted.cdata.xml</string>
		</dict>
		<key>comment-block</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.js</string>
		</dict>
		<key>comment-concise-block</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)/\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/.*</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.js</string>
		</dict>
		<key>comment-concise-line</key>
		<dict>
			<key>begin</key>
			<string>^(\s*)//</string>
			<key>comment</key>
			<string>Single line comment (concise)</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.double-slash.marko</string>
		</dict>
		<key>comment-html</key>
		<dict>
			<key>begin</key>
			<string>\s*&lt;!--</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>--&gt;</string>
			<key>name</key>
			<string>comment.block.html</string>
		</dict>
		<key>comment-html-tag</key>
		<dict>
			<key>begin</key>
			<string>\s*&lt;html-comment&gt;</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&lt;/html-comment&gt;</string>
			<key>name</key>
			<string>comment.block.html</string>
		</dict>
		<key>comment-line</key>
		<dict>
			<key>begin</key>
			<string>(//)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\n)</string>
			<key>name</key>
			<string>comment.line.double-slash.js</string>
		</dict>
		<key>component-style</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#component-style-less</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#component-style-css</string>
				</dict>
			</array>
		</dict>
		<key>component-style-css</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^(style)(?:\.([a-z]+))?\s+(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.marko.css</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.marko.less</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.css</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.css</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>component-style-less</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^(style)\.(less)\s+(\{)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.marko.less</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.marko.less</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.less</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.less</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css.less</string>
				</dict>
			</array>
		</dict>
		<key>doctype</key>
		<dict>
			<key>begin</key>
			<string>&lt;!</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.marko-tag.html</string>
				</dict>
			</dict>
			<key>end</key>
			<string>&gt;</string>
			<key>name</key>
			<string>meta.tag.sgml.html</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i:DOCTYPE)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.tag.doctype.html</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=&gt;)</string>
					<key>name</key>
					<string>meta.tag.sgml.doctype.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>"[^"&gt;]*"</string>
							<key>name</key>
							<string>string.quoted.double.doctype.identifiers-and-DTDs.html</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>comment</key>
			<string>A JavaScript expression</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-common</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operator-gt</string>
				</dict>
			</array>
		</dict>
		<key>expression-common</key>
		<dict>
			<key>comment</key>
			<string>A JavaScript expression</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-string-single</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-string-double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-string-template</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-group-parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-group-brackets</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-group-braces</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-constant</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-hex</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operator-unary</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operator-binary</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-operator-special</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[.]([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(out)[.](global)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.language.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(this)[.](input|state)\b</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(input|state|component|JSON|out)\b</string>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(let|var|const)\b</string>
					<key>name</key>
					<string>storage.type.var.js</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.type</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(require)[.](resolve)\b</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(console|JSON|event|window|setTimeout|setInterval|require)\b</string>
					<key>name</key>
					<string>entity.name.type</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(this|arguments)\b</string>
					<key>name</key>
					<string>variable.language.js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-special-class</string>
				</dict>
			</array>
		</dict>
		<key>expression-constant</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.true.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.false.js</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.language.infinity.js</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.language.nan.js</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.language.null.js</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.language.undefined.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(true)|(false)|(Infinity)|(NaN)|(null)|(undefined)</string>
		</dict>
		<key>expression-group-braces</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\{</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\}</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.scope.end.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>expression-group-brackets</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\[</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.square.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>expression-group-parens</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.brace.round.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>expression-hex</key>
		<dict>
			<key>match</key>
			<string>\b0[xX][0-9A-Fa-f]+\b</string>
			<key>name</key>
			<string>constant.numeric.hex.js</string>
		</dict>
		<key>expression-no-gt</key>
		<dict>
			<key>comment</key>
			<string>A JavaScript expression</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-common</string>
				</dict>
			</array>
		</dict>
		<key>expression-numeric</key>
		<dict>
			<key>match</key>
			<string>(?x)
				(?&lt;!\w)									# Ensure word boundry
				(?&gt;
					(
						(0|[1-9][0-9]*)(\.[0-9]*)?		# 0 or 1 or 1. or 1.0
					  | \.[0-9]+						# .1
					)
					([eE][+-]?[0-9]+)?					# Exponent
				)
				(?!\w)									# Ensure word boundry
			</string>
			<key>name</key>
			<string>constant.numeric.js</string>
		</dict>
		<key>expression-operator-binary</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\s+|\b)(===|==|!==|!=|&lt;=|&lt;&lt;|&amp;&amp;|\|\||&lt;|\+=|-=|\*=|/=|%=|[=+*/%|&amp;~^:])(\s+|\b)</string>
		</dict>
		<key>expression-operator-gt</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.js</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\s+|\b)(&gt;=|&gt;&gt;|&gt;)(\s+|\b)</string>
		</dict>
		<key>expression-operator-special</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.|\$)\b(delete|in|instanceof|new|typeof\s*|void|with|from|to|step)\b(?!\$)</string>
			<key>name</key>
			<string>keyword</string>
		</dict>
		<key>expression-operator-unary</key>
		<dict>
			<key>match</key>
			<string>\b(!|\+\+)\b|\b\-\-(?&lt;!\s)</string>
			<key>name</key>
			<string>keyword.operator.js</string>
		</dict>
		<key>expression-special-class</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.|\$)\b(Array|Boolean|Date|Error|EvalError|Function|Number|Object|RangeError|ReferenceError|RegExp|String|SyntaxError|TypeError|URIError)\b(?!\$)</string>
			<key>name</key>
			<string>support.class.js</string>
		</dict>
		<key>expression-string-double</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<key>expression-string-escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)</string>
					<key>name</key>
					<string>constant.character.escape.js</string>
				</dict>
			</array>
		</dict>
		<key>expression-string-single</key>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-string-escapes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
			</array>
		</dict>
		<key>expression-string-template</key>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>`</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.js</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.other.template.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression-string-escapes</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\$\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.begin.js</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>source.js</string>
					<key>end</key>
					<string>(\})</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.embedded.end.js</string>
						</dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>source.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.embedded.line.js</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>expression-ternary-if</key>
		<dict>
			<key>begin</key>
			<string>\?</string>
			<key>end</key>
			<string>:</string>
			<key>name</key>
			<string>meta.ternary-if.js</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>html-block-concise</key>
		<dict>
			<key>begin</key>
			<string>(\s*)(-[-]+)\n</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.marko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^(\1\2|(?!(\1)))</string>
			<key>name</key>
			<string>meta.section.marko-html-block</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#js-code-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#js-code-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
			</array>
		</dict>
		<key>html-line-block-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>\s*([-][-]+)\n</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.marko.blah</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?!\2)|(\2\1)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
			</array>
		</dict>
		<key>html-line-concise</key>
		<dict>
			<key>begin</key>
			<string>\s*([-][-]+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.marko</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
			</array>
		</dict>
		<key>js</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-block</string>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>\{</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.end.js</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.end.js</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>\[</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\]</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.section.scope.end.js</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#js</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>[.]([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)\b</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(break|case|catch|continue|default|do|else|export|finally|for|if|return|switch|throw|try|while|with|import|from|await|async)\b</string>
					<key>name</key>
					<string>keyword.control.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\s+|\b)(\=\&gt;)(\s+|\b)</string>
					<key>name</key>
					<string>storage.type.function.arrow.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\;</string>
					<key>name</key>
					<string>punctuation.terminator.statement.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(function)\b</string>
					<key>name</key>
					<string>storage.type.function.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(class)\b</string>
					<key>name</key>
					<string>entity.name.type.class.js</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bextends\b</string>
					<key>name</key>
					<string>entity.other.inherited-class.js</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>([\p{L}\p{Nl}$_][\p{L}\p{Nl}$\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*)\s*(\()(?=(?:[^\(\)]*)?\)\s*\{)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.js</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.js</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.END.js</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.method.js</string>
				</dict>
			</array>
		</dict>
		<key>js-code-block</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^\s*([$])\s</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.embedded.js</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.js.embedded</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>open-tag-end</key>
		<dict>
			<key>begin</key>
			<string>(&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#cdata</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment-html-tag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scriptlet</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#js-code-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
			</array>
		</dict>
		<key>open-tag-end-script</key>
		<dict>
			<key>begin</key>
			<string>(&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>open-tag-end-style</key>
		<dict>
			<key>begin</key>
			<string>(&gt;)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Concise style tag with CSS code.</string>
			<key>end</key>
			<string>(?=&lt;/)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder-patterns</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>placeholder</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>[$][!]?\{</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.marko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>${ } placeholder note: should be punctuation.section.embedded.js</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.section.marko-placeholder</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>placeholder-escaped</key>
		<dict>
			<key>comment</key>
			<string>\${</string>
			<key>match</key>
			<string>\\[$][!]?[{]</string>
		</dict>
		<key>placeholder-escaped-escaped</key>
		<dict>
			<key>comment</key>
			<string>\\${</string>
			<key>match</key>
			<string>\\\\(?=[$][!]?[{])</string>
		</dict>
		<key>placeholder-patterns</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder-escaped-escaped</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder-escaped</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
			</array>
		</dict>
		<key>scriptlet</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>&lt;%</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.scriptlet.marko</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Scriptlet block</string>
			<key>end</key>
			<string>%&gt;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>special-js-tags</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^\s*(?:(class)|(static)|(import))\s</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.js</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.marko</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>storage.modifier.marko</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>source.js.embedded</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>tag-concise</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-name-custom-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-dynamic-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-concise</string>
				</dict>
			</array>
		</dict>
		<key>tag-html</key>
		<dict>
			<key>comment</key>
			<string>HTML tag within the non-concise syntax</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-name-open-tag-only-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-script-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-style-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-shorthand-no-tag-name-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-shorthand-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-custom-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-dynamic-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-name-html</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^\s*(([a-zA-Z0-9_-]+)([.#][a-zA-Z0-9_.#-]*)?)(?=(\s+(?![=])|$|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.concise</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.shorthand</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>A concise tag name</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#html-line-block-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#html-line-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-concise</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-custom-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^\s*(for|if|unless|while|else-if|else|var|assign|macro|invoke|include|await|[a-zA-Z0-9_]+([:])[a-zA-Z0-9_:-]*|[@][a-zA-Z0-9_-]+)(?=(\s+(?![=])|$|[(]|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag.concise</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>A concise custom tag name</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#html-line-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-concise</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-custom-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)(for|if|unless|while|else-if|else|var|assign|macro|invoke|include|await|[a-zA-Z0-9_]+[:][a-zA-Z0-9\-_:]*|[@][a-zA-Z0-9_-]+)(?=(&gt;|/&gt;|\s|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>The beginning of a custom/special HTML tag</string>
			<key>end</key>
			<string>(&lt;/)(\2)?(&gt;)|(/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-dynamic-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^\s*(?=\$\{.*\})</string>
			<key>comment</key>
			<string>A concise custom tag name</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#html-line-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-concise</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-dynamic-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)(?=\$\{.*\})</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>The beginning of a regular HTML tag in non-concise mode</string>
			<key>end</key>
			<string>(&lt;/)(\2)?(&gt;)|(/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.function.marko-tag.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#placeholder</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)([a-zA-Z0-9-]+)(?=(&gt;|/&gt;|\s|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>The beginning of a regular HTML tag in non-concise mode</string>
			<key>end</key>
			<string>(&lt;/)(\2)?(&gt;)|(/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-open-tag-only-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)(base|br|col|hr|embed|img|input|keygen|link|meta|param|source|track|wbr|lasso-img)(?=(&gt;|/&gt;|\s|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML tags that are open tag only</string>
			<key>end</key>
			<string>(&gt;|/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-script-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)(script)(?=(&gt;|/&gt;|\s|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.script.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>(&lt;/)(script)?(&gt;)|/&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.script.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end-script</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-shorthand-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)(([a-zA-Z0-9_-]+)([#.][a-zA-Z0-9_#.:-]+))(?=(&gt;|/&gt;|\s+(?![=])|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.open.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.shorthand</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML tag with shorthand ID/class parts</string>
			<key>end</key>
			<string>(&lt;/)((\3)(\4)?)?(&gt;)|(/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.shorthand</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-shorthand-no-tag-name-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)([#.][a-zA-Z0-9_#.:-]+)(?=(&gt;|/&gt;|\s|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.attribute-name.shorthand</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>(&lt;/)(\2|div)(&gt;)|(/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end</string>
				</dict>
			</array>
		</dict>
		<key>tag-name-style-html</key>
		<dict>
			<key>begin</key>
			<string>(&lt;)(style)(?=(&gt;|/&gt;|\s|\(|\|))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.open.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.style.open.html</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML style tag</string>
			<key>end</key>
			<string>(&lt;/)(style)?(&gt;)|(/&gt;)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.begin.close.html</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.style.close.html</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.close.html</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tag.end.self-close.html</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#tag-params</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#attr-stuff-html</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#open-tag-end-style</string>
				</dict>
			</array>
		</dict>
		<key>tag-params</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>0</integer>
			<key>begin</key>
			<string>\|</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.pipe.js</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\|</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>meta.pipe.js</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>tag-script-body-block</key>
		<dict>
			<key>begin</key>
			<string>(\s*-[-]+)</string>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>(\1)[.]*$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>tag-script-body-line</key>
		<dict>
			<key>begin</key>
			<string>\s+-[-]+\s</string>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#js</string>
				</dict>
			</array>
		</dict>
		<key>tag-script-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^(\s*)(script)(?=(\s|$|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.script.marko.concise</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>HTML script tag with nested JavaScript code</string>
			<key>end</key>
			<string>^(?!(\1\s)|\s*$)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-script-body-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-script-body-block</string>
				</dict>
			</array>
		</dict>
		<key>tag-style-body-block</key>
		<dict>
			<key>begin</key>
			<string>(\s*[-][-]+)</string>
			<key>comment</key>
			<string>HTML script tag with nested CSS code</string>
			<key>end</key>
			<string>(\1)[.]*$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>tag-style-body-line</key>
		<dict>
			<key>begin</key>
			<string>\s[-][-]+\s</string>
			<key>comment</key>
			<string>HTML style tag with nested CSS code</string>
			<key>end</key>
			<string>(?=\n)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.css</string>
				</dict>
			</array>
		</dict>
		<key>tag-style-concise</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>^(\s*)(style)(?=(\s|$|\())</string>
			<key>beginCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag.style.marko.concise</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>style tag with CSS code.</string>
			<key>end</key>
			<string>^(?!(\1\s)|\s*$)</string>
			<key>name</key>
			<string>meta.tag.other.style</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#attr-stuff-concise</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-style-body-line</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#tag-style-body-block</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.marko</string>
	<key>uuid</key>
	<string>BC8F1816-9AB4-4571-97E8-787F6C925E07</string>
</dict>
</plist>
