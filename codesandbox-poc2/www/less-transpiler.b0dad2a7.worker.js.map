{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/sandbox/eval/transpilers/utils/worker-error-handler.js","webpack:///./src/sandbox/eval/transpilers/less/file-manager.js","webpack:///./src/sandbox/eval/transpilers/less/less-worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","buildWorkerError","error","message","fileName","lineNumber","columnNumber","loaderContext","files","install","less","pluginManager","CSBFileManager","FileManager","constructor","supports","filename","resolve","Promise","reject","addDependency","e","loadFile","this","then","code","contents","addFileManager","self","env","window","document","currentScript","async","createElement","appendChild","createTextNode","getElementsByTagName","head","removeChild","importScripts","process","postMessage","addEventListener","event","data","path","context","depPath","type","split","pop","cleanCode","replace","render","plugins","css","transpiledCode","err"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,qBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,0BAIjBlC,EAAoBA,EAAoBmC,EAAI,8I,4KCxE9C,SAASC,EAAiBC,GAC/B,MAAO,CACL1B,KAAM0B,EAAM1B,KACZ2B,QAASD,EAAMC,QACfC,SAAUF,EAAME,SAChBC,WAAYH,EAAMG,WAClBC,aAAcJ,EAAMI,c,OCdT,eAASC,EAAeC,GACrC,MAAO,CACLC,QADK,SACGC,EAAMC,GACZ,SAASC,KAETA,EAAef,UAAY,IAAIa,EAAKG,YACpCD,EAAef,UAAUiB,YAAcF,EACvCA,EAAef,UAAUkB,SAAW,SAASC,GAC3C,OAAO,GAGTJ,EAAef,UAAUoB,QAAU,SAASD,GAC1C,OAAO,IAAIE,SAAQ,SAACD,EAASE,GAC3B,IACEZ,EAAca,cAAcJ,GAG5BC,EADeT,EAAMQ,IAErB,MAAOK,GACPF,EAAOE,QAKbT,EAAef,UAAUyB,SAAW,SAASN,GAC3C,OAAOO,KAAKN,QAAQD,GAAUQ,MAAK,SAAAC,GAAI,MAAK,CAC1CC,SAAUD,EACVT,gBAIJL,EAAcgB,eAAe,IAAIf,MC5BvCgB,KAAKlB,KAAO,CACVmB,IAAK,eAIPD,KAAKE,OAASF,KACdA,KAAKE,OAAOC,SAAW,CACrBC,cAAe,CAAEC,OAAO,GACxBC,cAAe,iBAAO,CAAEC,YAAa,eACrCC,eAAgB,iBAAO,IACvBC,qBAAsB,iBAAM,IAC5BC,KAAM,CAAEH,YAAa,aAAUI,YAAa,eAG9CX,KAAKY,cAAL,UACKC,yBADL,2BAIAb,KAAKc,YAAY,SAMjBd,KAAKe,iBAAiB,WAAW,SAAAC,GAAU,IAAD,EACVA,EAAMC,KAA5BpB,EADgC,EAChCA,KAAMqB,EAD0B,EAC1BA,KAAMtC,EADoB,EACpBA,MAEduC,EAAU,CACd3B,cAAe,SAAA4B,GACbpB,KAAKc,YAAY,CAAEO,KAAM,+BAAgCH,KAAME,MAI7DhC,EAAW8B,EAAKI,MAAM,KAAKC,MAG3BC,EAAY3B,EAAK4B,QAAQ,SAAU,IAEzC,IAEE3C,KACG4C,OAAOF,EAAW,CAAEpC,WAAUuC,QAAS,CAAC1C,EAAYkC,EAASvC,MAC7DgB,MAAK,gBAAGgC,EAAH,EAAGA,IAAH,OACJ5B,KAAKc,YAAY,CACfO,KAAM,SACNQ,eAAgBD,OALtB,OAQS,SAAAE,GAAG,OACR9B,KAAKc,YAAY,CACfO,KAAM,QACN/C,MAAOD,EAAiByD,QAG9B,MAAOrC,GACPO,KAAKc,YAAY,CACfO,KAAM,QACN/C,MAAOD,EAAiBoB","file":"less-transpiler.b0dad2a7.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://codesandbox.io/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"../../node_modules/thread-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js?!./src/sandbox/eval/transpilers/less/less-worker.js\");\n","// @flow\n\ntype WorkerError = {\n  name: string,\n  message: string,\n  fileName: ?string,\n  lineNumber: ?number,\n  columnNumber: ?number,\n};\n\nexport function buildWorkerError(error: Error): WorkerError {\n  return {\n    name: error.name,\n    message: error.message,\n    fileName: error.fileName,\n    lineNumber: error.lineNumber,\n    columnNumber: error.columnNumber,\n  };\n}\n\nexport function parseWorkerError(error: WorkerError): Error {\n  const reconstructedError = new Error(error.message);\n  reconstructedError.name = error.name;\n  reconstructedError.columnNumber = error.columnNumber;\n  reconstructedError.fileName = error.columnNumber;\n  reconstructedError.lineNumber = error.lineNumber;\n\n  return reconstructedError;\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable func-names */\nexport default function(loaderContext, files) {\n  return {\n    install(less, pluginManager) {\n      function CSBFileManager() {}\n\n      CSBFileManager.prototype = new less.FileManager();\n      CSBFileManager.prototype.constructor = CSBFileManager;\n      CSBFileManager.prototype.supports = function(filename) {\n        return true;\n      };\n\n      CSBFileManager.prototype.resolve = function(filename) {\n        return new Promise((resolve, reject) => {\n          try {\n            loaderContext.addDependency(filename);\n\n            const module = files[filename];\n            resolve(module);\n          } catch (e) {\n            reject(e);\n          }\n        });\n      };\n\n      CSBFileManager.prototype.loadFile = function(filename) {\n        return this.resolve(filename).then(code => ({\n          contents: code,\n          filename,\n        }));\n      };\n\n      pluginManager.addFileManager(new CSBFileManager());\n    },\n  };\n}\n","import { buildWorkerError } from '../utils/worker-error-handler';\n\n// This is a less plugin to resolve paths\nimport FileManager from './file-manager';\n\nself.less = {\n  env: 'development',\n};\n\n// Stub window for less....\nself.window = self;\nself.window.document = {\n  currentScript: { async: true },\n  createElement: () => ({ appendChild: () => {} }),\n  createTextNode: () => ({}),\n  getElementsByTagName: () => [],\n  head: { appendChild: () => {}, removeChild: () => {} },\n};\n\nself.importScripts(\n  `${process.env.CODESANDBOX_HOST || ''}/static/js/less.min.js`\n);\n\nself.postMessage('ready');\n\ndeclare var less: {\n  render: (code: string) => Promise<string>,\n};\n\nself.addEventListener('message', event => {\n  const { code, path, files } = event.data;\n\n  const context = {\n    addDependency: depPath => {\n      self.postMessage({ type: 'add-transpilation-dependency', path: depPath });\n    },\n  };\n\n  const filename = path.split('/').pop();\n\n  // Remove the linebreaks at the beginning of the file, it confuses less.\n  const cleanCode = code.replace(/^\\n$/gm, '');\n\n  try {\n    // register a custom importer callback\n    less\n      .render(cleanCode, { filename, plugins: [FileManager(context, files)] })\n      .then(({ css }) =>\n        self.postMessage({\n          type: 'result',\n          transpiledCode: css,\n        })\n      )\n      .catch(err =>\n        self.postMessage({\n          type: 'error',\n          error: buildWorkerError(err),\n        })\n      );\n  } catch (e) {\n    self.postMessage({\n      type: 'error',\n      error: buildWorkerError(e),\n    });\n  }\n});\n"],"sourceRoot":""}