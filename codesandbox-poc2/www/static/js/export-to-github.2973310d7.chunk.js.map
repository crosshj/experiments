{"version":3,"sources":["webpack:///./src/app/overmind/effects/git/export-to-github.ts"],"names":["deploy","sandbox","a","createZip","modules","directories","zipFile","JSZip","loadAsync","contents","apiData","filePaths","Object","keys","files","i","length","filePath","file","dir","async","content","isBinary","startsWith","BLOB_ID","replace","push","path"],"mappings":"wbAUe,SAAeA,EAA9B,kC,oCAAe,WAAsBC,GAAtB,+BAAAC,EAAA,sEAGSC,oBACpBF,EACAA,EAAQG,QACRH,EAAQI,aACR,GACA,GARW,UAGPC,EAHO,gDAYJ,MAZI,uBAeUC,IAAMC,UAAUF,GAf1B,OAePG,EAfO,OAiBPC,EAAqC,CAAET,QAAS,IAChDU,EAAYC,OAAOC,KAAKJ,EAASK,OAC9BC,EAAI,EAnBA,aAmBGA,EAAIJ,EAAUK,QAnBjB,oBAoBLC,EAAWN,EAAUI,IACrBG,EAAOT,EAASK,MAAMG,IAElBE,IAvBC,kCAwBmBD,EAAKE,MAAM,QAxB9B,QAwBLC,EAxBK,OAyBLC,GAAW,EAGXD,EAAQE,WAAWC,aACrBF,GAAW,EACXD,EAAUA,EAAQI,QAAQD,UAAS,KAGrCd,EAAQT,QAAQyB,KAAK,CACnBL,UACAC,WACAK,KAAMV,IApCC,QAmByBF,GAAK,EAnB9B,iDAyCNL,GAzCM,6C","file":"static/js/export-to-github.2973310d7.chunk.js","sourcesContent":["import { Sandbox } from '@codesandbox/common/lib/types';\nimport JSZip from 'jszip';\nimport { createZip, BLOB_ID } from '../zip/create-zip';\n\ninterface IAPIModule {\n  content: string;\n  isBinary: boolean;\n  path: string;\n}\n\nexport default async function deploy(sandbox: Sandbox) {\n  // We first get the zip file, this is what we essentially need to have deployed.\n  // So we convert it to an API request that Vercel will understand\n  const zipFile = await createZip(\n    sandbox,\n    sandbox.modules,\n    sandbox.directories,\n    false,\n    true\n  );\n\n  if (!zipFile) {\n    return null;\n  }\n\n  const contents = await JSZip.loadAsync(zipFile);\n\n  const apiData: { sandbox: IAPIModule[] } = { sandbox: [] };\n  const filePaths = Object.keys(contents.files);\n  for (let i = 0; i < filePaths.length; i += 1) {\n    const filePath = filePaths[i];\n    const file = contents.files[filePath];\n\n    if (!file.dir) {\n      let content: string = await file.async('text'); // eslint-disable-line no-await-in-loop\n      let isBinary = false;\n\n      // It's marked as a binary\n      if (content.startsWith(BLOB_ID)) {\n        isBinary = true;\n        content = content.replace(BLOB_ID, '');\n      }\n\n      apiData.sandbox.push({\n        content,\n        isBinary,\n        path: filePath,\n      });\n    }\n  }\n\n  return apiData;\n}\n"],"sourceRoot":""}