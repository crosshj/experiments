{"version":3,"sources":["webpack:///./src/app/overmind/utils/pushToAirtable.ts","webpack:///./src/app/overmind/utils/pushToFront.ts","webpack:///./src/app/pages/common/Modals/FeedbackModal/getBrowser.ts","webpack:///./src/app/pages/common/Modals/FeedbackModal/Feedback.tsx"],"names":["a","feedback","emoji","sandboxId","username","email","version","browser","Airtable","base","Promise","resolve","reject","create","url","window","location","pathname","err","console","error","fetch","method","body","JSON","stringify","name","headers","Accept","agent","navigator","userAgent","toLowerCase","includes","opr","chrome","Feedback","id","user","useOvermind","actions","notificationAdded","modalClosed","useState","setEmail","setEmoji","setFeedback","loading","setLoading","listenForEsc","e","keyCode","ESC","useEffect","addEventListener","removeEventListener","onChange","target","value","onSubmit","evt","preventDefault","data","VERSION","pushToAirtable","pushToFront","notificationType","title","Alert","marginTop","autosize","minRows","placeholder","required","marginBottom","type","gap","align","variant","onClick","css","width","size","as","aria-label","role","justify","disabled","trim"],"mappings":"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","file":"static/js/feedback.912eae920.chunk.js","sourcesContent":["export default async ({\n  feedback,\n  emoji,\n  sandboxId,\n  username,\n  email,\n  version,\n  browser,\n}: {\n  [key: string]: string;\n}) => {\n  const Airtable = await import(\n    /* webpackChunkName: 'airtable' */ './setAirtable'\n  );\n  const base = Airtable.default.base('appzdQFPct2p9gFZi');\n\n  return new Promise((resolve, reject) => {\n    base('feedback').create(\n      {\n        feedback,\n        emoji,\n        sandboxId,\n        username,\n        email,\n        url: window.location.pathname,\n        version,\n        browser,\n      },\n      err => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n\n        resolve();\n      }\n    );\n  });\n};\n","export default ({\n  feedback,\n  sandboxId,\n  username,\n  email,\n  version,\n  browser,\n}: {\n  [key: string]: string;\n}) =>\n  fetch('https://s2973.sse.codesandbox.io/inbound-message', {\n    method: 'POST',\n    body: JSON.stringify({\n      name: username,\n      email,\n      body:\n        feedback +\n        '\\n\\nSandbox: https://codesandbox.io/s/' +\n        sandboxId +\n        '\\nVersion: ' +\n        version +\n        '\\nBrowser: ' +\n        browser,\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: '*/*',\n    },\n  });\n","export const browser = () => {\n  const agent = window.navigator.userAgent.toLowerCase();\n  switch (true) {\n    case agent.includes('edge'):\n      return 'edge';\n    case agent.includes('edg'):\n      return 'chromium based edge (dev or canary)';\n    // @ts-ignore\n    case agent.includes('opr') && !!window.opr:\n      return 'opera';\n    // @ts-ignore\n    case agent.includes('chrome') && !!window.chrome:\n      return 'chrome';\n    case agent.includes('trident'):\n      return 'ie';\n    case agent.includes('firefox'):\n      return 'firefox';\n    case agent.includes('brave'):\n      return 'brave';\n    case agent.includes('safari'):\n      return 'safari';\n    default:\n      return 'other';\n  }\n};\n","import css from '@styled-system/css';\nimport VERSION from '@codesandbox/common/lib/version';\nimport { CurrentUser } from '@codesandbox/common/lib/types';\nimport { ESC } from '@codesandbox/common/lib/utils/keycodes';\nimport { useOvermind } from 'app/overmind';\nimport pushToAirtable from 'app/overmind/utils/pushToAirtable';\nimport pushToFront from 'app/overmind/utils/pushToFront';\nimport {\n  Element,\n  Input,\n  Stack,\n  Button,\n  Textarea,\n  Text,\n} from '@codesandbox/components';\nimport React, {\n  ChangeEvent,\n  FormEvent,\n  FunctionComponent,\n  useState,\n  useEffect,\n} from 'react';\nimport { browser } from './getBrowser';\nimport { Alert } from '../Common/Alert';\n\ntype Props = {\n  id?: string;\n  user?: CurrentUser;\n};\n\nexport const Feedback: FunctionComponent<Props> = ({ id, user }) => {\n  const {\n    actions: { notificationAdded, modalClosed },\n  } = useOvermind();\n  const [email, setEmail] = useState((user || {}).email);\n  const [emoji, setEmoji] = useState(null);\n  const [feedback, setFeedback] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const listenForEsc = e => {\n    if (e.keyCode === ESC) {\n      modalClosed();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', listenForEsc);\n\n    return () => window.removeEventListener('keydown', listenForEsc);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const noop = () => undefined;\n    const settersByInputName = {\n      email: setEmail,\n      feedback: setFeedback,\n    };\n\n    (settersByInputName[e.target.name] || noop)(e.target.value);\n  };\n\n  const onSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const data = {\n      sandboxId: id || '',\n      feedback,\n      emoji,\n      username: (user || {}).username,\n      email,\n      version: VERSION,\n      browser: browser(),\n    };\n\n    setLoading(true);\n    try {\n      await pushToAirtable(data);\n      await pushToFront(data);\n      setEmoji(null);\n      setFeedback('');\n      setLoading(false);\n\n      modalClosed();\n      notificationAdded({\n        notificationType: 'success',\n        title: 'Thanks for your feedback!',\n      });\n    } catch (e) {\n      notificationAdded({\n        notificationType: 'error',\n        title: `Something went wrong while sending feedback`,\n      });\n\n      setLoading(false);\n    }\n  };\n\n  const setHappy = () => setEmoji('happy');\n  const setSad = () => setEmoji('sad');\n\n  return (\n    <Alert title=\"Submit Feedback\">\n      <Element marginTop={4}>\n        <form onSubmit={onSubmit}>\n          <Textarea\n            autosize\n            minRows={3}\n            name=\"feedback\"\n            // @ts-ignore\n            onChange={onChange}\n            placeholder=\"What are your thoughts?\"\n            required\n            value={feedback}\n          />\n\n          {!user && (\n            <Element marginTop={2} marginBottom={4}>\n              <Input\n                name=\"email\"\n                onChange={onChange}\n                placeholder=\"Email if you wish to be contacted\"\n                type=\"email\"\n                value={email}\n              />\n            </Element>\n          )}\n\n          <Stack gap={2} align=\"center\" marginTop={2} marginBottom={4}>\n            <Button\n              css={css({ width: 'auto' })}\n              variant={emoji === 'happy' ? 'primary' : 'secondary'}\n              onClick={setHappy}\n            >\n              {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n              <Text size={4} as=\"span\" aria-label=\"happy\" role=\"img\">\n                ðŸ˜Š\n              </Text>\n            </Button>\n\n            <Button\n              css={css({ width: 'auto' })}\n              variant={emoji === 'sad' ? 'primary' : 'secondary'}\n              onClick={setSad}\n            >\n              {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\n              <Text size={4} as=\"span\" aria-label=\"sad\" role=\"img\">\n                ðŸ˜ž\n              </Text>\n            </Button>\n          </Stack>\n\n          <Stack justify=\"flex-end\">\n            <Button\n              css={css({ width: 'auto' })}\n              type=\"submit\"\n              disabled={loading || !feedback.trim()}\n            >\n              {loading ? 'Sending...' : 'Submit'}\n            </Button>\n          </Stack>\n        </form>\n      </Element>\n    </Alert>\n  );\n};\n"],"sourceRoot":""}