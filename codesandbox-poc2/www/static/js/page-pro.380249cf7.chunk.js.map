{"version":3,"sources":["webpack:///./src/app/pages/Pro/elements.ts","webpack:///./src/app/pages/Pro/checkout-form.tsx","webpack:///./src/app/pages/Pro/subscribe-form.tsx","webpack:///./src/app/pages/Pro/index.tsx"],"names":["Page","styled","div","css","backgroundColor","color","width","minHeight","Content","marginTop","Heading","h1","margin","textAlign","fontSize","SubHeading","span","display","marginBottom","BillText","props","on","DurationChoice","justifyContent","Form","form","input","height","transition","transitionDuration","theme","speeds","opacity","disabled","FormField","Label","label","lineHeight","Input","border","borderColor","boxSizing","paddingX","borderRadius","outline","Button","button","minWidth","textDecoration","cursor","ButtonAsLink","withComponent","HelpText","p","b","a","LinkButton","AppLinkButton","CardContainer","padding","ErrorText","Avatar","img","badgeBackground","pro","patron","Badge","type","paddingY","fontWeight","textTransform","position","top","right","CheckoutFormComponent","errors","name","coupon","loading","e","setState","target","value","preventDefault","state","stripe","createToken","token","error","message","subscribe","id","logError","nextProps","this","isLoading","hasCoupon","stateLoading","stripeError","onSubmit","handleSubmit","htmlFor","onChange","setName","placeholder","style","base","setCoupon","format","Date","React","PureComponent","CheckoutForm","injectStripe","context","window","SubscribeForm","useState","setStripe","useScript","loaded","useEffect","Stripe","STRIPE_API_KEY","Pro","user","modalOpened","cancelSubscriptionClicked","subscriptionDate","subscription","since","horizontal","src","avatarUrl","href","duration","onClick","modal","itemId","Patron","NotPro","createSubscriptionClicked","checkoutDisabled","setDuration","d","isUpdatingSubscription","Expiring","updateSubscriptionClicked","ProPage","useOvermind","hasLoadedApp","isLoggedIn","actions","priceChanged","patronMounted","price","codeSandboxBlackTheme","Navigation","title","Helmet","vertical","plan","cancelAtPeriodEnd"],"mappings":"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","file":"static/js/page-pro.380249cf7.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport css from '@styled-system/css';\nimport { LinkButton as AppLinkButton } from 'app/components/LinkButton';\n\nexport const Page = styled.div(\n  css({\n    backgroundColor: 'grays.900',\n    color: 'white',\n\n    // the following evil exists because we are inserting\n    // a diffrently styled page onto a already (legacy) styled\n    // base.\n    width: '100vw',\n    minHeight: '100vh',\n  })\n);\n\nexport const Content = styled.div(\n  css({\n    marginTop: '100px',\n  })\n);\n\nexport const Heading = styled.h1(\n  css({\n    margin: 0,\n    textAlign: 'center',\n    // marketing pages have a lot of whitespace, more than our scale\n    fontSize: '32px',\n  })\n);\n\nexport const SubHeading = styled.span(\n  css({\n    color: 'grays.300',\n    fontSize: 4,\n    display: 'block',\n    textAlign: 'center',\n    marginBottom: 10,\n  })\n);\n\nexport const BillText = styled.span<{ on: boolean }>(props =>\n  css({\n    color: props.on ? 'white' : 'grays.300',\n    margin: '0 1rem',\n  })\n);\n\nexport const DurationChoice = styled.div(() =>\n  css({\n    display: 'flex',\n    textAlign: 'center',\n    justifyContent: 'center',\n    marginBottom: 8,\n\n    '[data-component=SwitchBackground]': {\n      backgroundColor: 'grays.700',\n    },\n  })\n);\n\nexport const Form = styled.form<{ disabled: boolean }>(props =>\n  css({\n    fontSize: 3,\n    width: 300,\n    margin: 'auto',\n    input: {\n      fontSize: 3,\n      height: 32,\n      width: '100%',\n    },\n    transition: 'opacity',\n    transitionDuration: theme => theme.speeds[2],\n    opacity: props.disabled ? 0.5 : 1,\n  })\n);\n\nexport const FormField = styled.div(\n  css({\n    // we choose to use minHeight to decide height\n    // over margin so that when elements load dynamically\n    // like stripe card input and error messages,\n    // the form fields don't jump around\n    minHeight: '88px',\n    marginBottom: 2,\n  })\n);\n\nexport const Label = styled.label(\n  css({\n    display: 'block',\n    lineHeight: 1.6,\n    marginBottom: 2,\n  })\n);\n\nexport const Input = styled.input(\n  css({\n    backgroundColor: 'grays.700',\n    border: '1px solid',\n    borderColor: 'grays.500',\n    boxSizing: 'border-box',\n    color: 'white',\n\n    paddingX: 4,\n    borderRadius: 'medium',\n    transition: 'border',\n    transitionDuration: theme => theme.speeds[2],\n\n    ':hover': {\n      backgroundColor: 'grays.700',\n      borderColor: 'grays.500',\n    },\n    ':focus': {\n      outline: 'none',\n      backgroundColor: 'grays.900',\n      borderColor: 'grays.300',\n    },\n  })\n);\n\nexport const Button = styled.button(\n  css({\n    display: 'block',\n    fontSize: 4,\n    lineHeight: '32px',\n    width: '100%',\n    minWidth: 200,\n    marginBottom: 10,\n    backgroundColor: 'blues.600',\n    color: 'white',\n\n    textDecoration: 'none',\n    textAlign: 'center',\n\n    border: 'none',\n    borderRadius: 'medium',\n    boxSizing: 'border-box',\n    cursor: 'pointer',\n    transition: 'backgroundColor',\n    transitionDuration: theme => theme.speeds[2],\n\n    ':hover': {\n      backgroundColor: 'blues.500',\n    },\n    ':disabled': {\n      backgroundColor: 'blues.600',\n      opacity: 0.5,\n    },\n  })\n);\n\n/* this component exists only to make typecheck happy\n  the alternate <Button as=\"a\"> isn't strictly typed\n  and typescript doesn't like that\n\n  \"deep sigh\"\n        — Sara Vieira\n\n*/\n\nexport const ButtonAsLink = Button.withComponent('a');\n\nexport const HelpText = styled.p(\n  css({\n    color: 'grays.400',\n    textAlign: 'center',\n    b: {\n      color: 'white',\n    },\n    a: {\n      color: 'grays.300',\n    },\n  })\n);\n\nexport const LinkButton = styled(AppLinkButton)(\n  css({\n    color: 'grays.200',\n  })\n);\n\nexport const CardContainer = styled.div(\n  css({\n    '.StripeElement': {\n      backgroundColor: 'grays.700',\n      border: '1px solid',\n      borderColor: 'grays.500',\n      padding: 2,\n      boxSizing: 'border-box',\n      borderRadius: 'medium',\n      minHeight: 32,\n\n      ':hover': {\n        backgroundColor: 'grays.700',\n        borderColor: 'grays.500',\n      },\n\n      '&.StripeElement--focus': {\n        backgroundColor: 'grays.900',\n        borderColor: 'grays.300',\n      },\n    },\n  })\n);\n\nexport const ErrorText = styled.div(\n  css({\n    color: 'reds.500',\n    marginTop: 2,\n  })\n);\n\nexport const Avatar = styled.img(\n  css({\n    width: 100,\n    height: 100,\n    border: '1px solid',\n    borderColor: 'grays.500',\n    borderRadius: 'medium',\n  })\n);\n\nconst badgeBackground = {\n  pro: 'blues.700',\n  patron: 'green',\n};\n\nexport const Badge = styled.span<{ type: string }>(props =>\n  css({\n    backgroundColor: badgeBackground[props.type],\n    color: props.type === 'pro' ? 'white' : 'grays.900',\n    paddingY: 1,\n    paddingX: 2,\n    fontWeight: 'bold',\n    fontSize: 3,\n    textTransform: 'capitalize',\n    position: 'relative',\n    top: -20,\n    right: props.type === 'pro' ? -40 : -30,\n    border: '1px solid',\n    borderColor: 'grays.500',\n    borderRadius: 'medium',\n  })\n);\n","/**\n * Adapted from app/components/CheckoutForm\n * that used to be used in Patron page\n */\n\nimport React from 'react';\nimport { format } from 'date-fns';\nimport {\n  injectStripe,\n  CardElement,\n  ReactStripeElements,\n} from 'react-stripe-elements';\n\nimport { logError } from '@codesandbox/common/lib/utils/analytics';\n\nimport {\n  CardContainer,\n  Form,\n  FormField,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n  HelpText,\n} from './elements';\n\ninterface Props {\n  name: string;\n  isLoading: boolean;\n  subscribe: (params: { token: string; coupon: string }) => void;\n  stripe?: ReactStripeElements.StripeProps;\n  error?: Error | string;\n  hasCoupon?: boolean;\n  disabled?: boolean;\n}\n\ninterface State {\n  errors: {\n    name?: string;\n    stripe?: string;\n  };\n  name: string;\n  coupon: string;\n  loading: boolean;\n}\n\nclass CheckoutFormComponent extends React.PureComponent<Props, State> {\n  state: State = {\n    errors: {},\n    name: this.props.name || '',\n    coupon: '',\n    loading: false,\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.name !== this.props.name) {\n      this.setState({ errors: {}, name: nextProps.name });\n    }\n  }\n\n  setName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e) {\n      this.setState({ errors: {}, name: e.target.value });\n    }\n  };\n\n  setCoupon = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e) {\n      this.setState({ errors: {}, coupon: e.target.value });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!this.state.name) {\n      return this.setState({ errors: { name: 'Please provide a name ' } });\n    }\n\n    this.setState({ loading: true, errors: {} });\n\n    // Within the context of `Elements`, this call to createToken knows which Element to\n    // tokenize, since there's only one in this group.\n    const { token, error } = await this.props.stripe.createToken({\n      name: this.state.name,\n    });\n    if (error) {\n      return this.setState({\n        loading: false,\n        errors: {\n          stripe: error.message,\n        },\n      });\n    }\n\n    try {\n      await this.props.subscribe({\n        token: token.id,\n        coupon: this.state.coupon,\n      });\n    } catch (err) {\n      logError(err);\n\n      return this.setState({\n        loading: false,\n        errors: {\n          stripe: err.message,\n        },\n      });\n    }\n\n    return this.setState({\n      loading: false,\n    });\n  };\n\n  render() {\n    const { isLoading, error, hasCoupon = false, disabled } = this.props;\n    const { errors, loading: stateLoading } = this.state;\n\n    const loading = isLoading || stateLoading;\n\n    const stripeError = errors.stripe || error;\n\n    return (\n      <Form onSubmit={this.handleSubmit} disabled={disabled}>\n        <FormField>\n          <Label htmlFor=\"cardholder-name\">Cardholder Name</Label>\n          <Input\n            id=\"cardholder-name\"\n            value={this.state.name}\n            onChange={this.setName}\n            placeholder=\"Please enter your name\"\n            disabled={disabled}\n          />\n          {errors.name != null && <ErrorText>{errors.name}</ErrorText>}\n        </FormField>\n\n        <FormField>\n          <Label htmlFor=\"card-number\">Card</Label>\n\n          <CardContainer>\n            <CardElement\n              id=\"card-number\"\n              style={{ base: { color: 'white', fontWeight: '500' } }}\n              disabled={disabled}\n            />\n          </CardContainer>\n          {stripeError != null && <ErrorText>{stripeError}</ErrorText>}\n        </FormField>\n\n        {hasCoupon && (\n          <FormField>\n            <Label htmlFor=\"coupon\">Coupon</Label>\n            <div>\n              <Input\n                id=\"coupon\"\n                value={this.state.coupon}\n                onChange={this.setCoupon}\n                placeholder=\"Coupon or Discount Code\"\n                disabled={disabled}\n              />\n            </div>\n          </FormField>\n        )}\n\n        <Button\n          type=\"submit\"\n          disabled={loading || disabled}\n          style={{ marginTop: '1rem', width: 300 }}\n        >\n          {loading ? 'Creating Subscription...' : 'Subscribe to Pro'}\n        </Button>\n\n        <HelpText>\n          You will be billed now and on the <b>{format(new Date(), 'do')}</b> of\n          each month thereafter. You can cancel or change your subscription at\n          any time.\n        </HelpText>\n      </Form>\n    );\n  }\n}\n\nexport const CheckoutForm = injectStripe(CheckoutFormComponent);\n","/**\n * Adapted from app/components/Subscrie\n * that used to be used in Patron page\n */\n\nimport React from 'react';\nimport { StripeProvider, Elements } from 'react-stripe-elements';\nimport { STRIPE_API_KEY } from '@codesandbox/common/lib/utils/config';\nimport { useScript } from 'app/hooks';\nimport { CheckoutForm } from './checkout-form';\n\ninterface ISubscribeFormProps {\n  name: string;\n  subscribe: (params: { token: string; coupon: string }) => void;\n  isLoading?: boolean;\n  error?: string;\n  hasCoupon?: boolean;\n  disabled?: boolean;\n}\n\nconst context = window as any;\n\nexport const SubscribeForm: React.FC<ISubscribeFormProps> = ({\n  name,\n  subscribe,\n  isLoading = false,\n  error,\n  hasCoupon,\n  disabled = false,\n}) => {\n  const [stripe, setStripe] = React.useState(null);\n  const [loaded] = useScript('https://js.stripe.com/v3/');\n\n  React.useEffect(() => {\n    if (context.Stripe) {\n      setStripe(context.Stripe(STRIPE_API_KEY));\n    }\n  }, [loaded]);\n\n  return (\n    <StripeProvider stripe={stripe}>\n      <Elements>\n        <CheckoutForm\n          subscribe={subscribe}\n          name={name}\n          isLoading={isLoading}\n          error={error}\n          hasCoupon={hasCoupon}\n          disabled={disabled}\n        />\n      </Elements>\n    </StripeProvider>\n  );\n};\n","import { format } from 'date-fns';\nimport { Helmet } from 'react-helmet';\nimport React, { useEffect } from 'react';\n\nimport MaxWidth from '@codesandbox/common/lib/components/flex/MaxWidth';\nimport Margin from '@codesandbox/common/lib/components/spacing/Margin';\nimport Centered from '@codesandbox/common/lib/components/flex/Centered';\nimport codeSandboxBlackTheme from '@codesandbox/common/lib/themes/codesandbox-black';\nimport { ThemeProvider, Switch } from '@codesandbox/components';\n\nimport { useOvermind } from 'app/overmind';\nimport { Navigation } from 'app/pages/common/Navigation';\n\nimport { SubscribeForm } from './subscribe-form';\nimport {\n  Page,\n  Content,\n  Avatar,\n  Badge,\n  Button,\n  ButtonAsLink,\n  Heading,\n  HelpText,\n  LinkButton,\n  SubHeading,\n  DurationChoice,\n  BillText,\n} from './elements';\nimport { SignInModalElement } from '../SignIn/Modal';\n\nconst ProPage: React.FC = () => {\n  const {\n    state: { hasLoadedApp, isLoggedIn, user, patron },\n    actions: {\n      modalOpened,\n      patron: {\n        priceChanged,\n        createSubscriptionClicked,\n        cancelSubscriptionClicked,\n        updateSubscriptionClicked,\n        patronMounted,\n      },\n    },\n  } = useOvermind();\n\n  const checkoutDisabled = !hasLoadedApp || !isLoggedIn;\n\n  // silly hack to allow cached versions to keep working\n  priceChanged({ price: 12 });\n\n  useEffect(() => {\n    patronMounted();\n  }, [patronMounted]);\n\n  const getContent = () => {\n    /**\n     * Proceed with caution\n     * There is logic baked in the order of\n     * the conditions.\n     */\n    if (!hasLoadedApp) return null;\n\n    if (!isLoggedIn) return <SignInModalElement />;\n\n    if (!user.subscription) {\n      return (\n        <NotPro\n          createSubscriptionClicked={createSubscriptionClicked}\n          user={user}\n          patron={patron}\n          checkoutDisabled={checkoutDisabled}\n        />\n      );\n    }\n\n    if (user.subscription.plan === 'patron') return <Patron user={user} />;\n\n    /** Pro subscriptions land ⬇️ */\n\n    if (user.subscription.cancelAtPeriodEnd) {\n      return (\n        <Expiring\n          user={user}\n          updateSubscriptionClicked={updateSubscriptionClicked}\n          isUpdatingSubscription={patron.isUpdatingSubscription}\n        />\n      );\n    }\n\n    if (user.subscription.plan === 'pro') {\n      return (\n        <Pro\n          user={user}\n          modalOpened={modalOpened}\n          cancelSubscriptionClicked={cancelSubscriptionClicked}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <ThemeProvider theme={codeSandboxBlackTheme}>\n      <Page>\n        <Navigation title=\"CodeSandbox Pro\" />\n\n        <Helmet>\n          <title>Pro - CodeSandbox</title>\n        </Helmet>\n\n        <Margin vertical={1.5} horizontal={1.5}>\n          <MaxWidth width={1024}>\n            <Content>{getContent()}</Content>\n          </MaxWidth>\n        </Margin>\n      </Page>\n    </ThemeProvider>\n  );\n};\n\nconst Pro = ({ user, modalOpened, cancelSubscriptionClicked }) => {\n  const subscriptionDate = new Date(user.subscription.since);\n  return (\n    <MaxWidth width={400}>\n      <Centered horizontal>\n        <Avatar src={user.avatarUrl} />\n        <Badge type=\"pro\">Pro</Badge>\n        <Heading>You&apos;re a Pro!</Heading>\n\n        <ButtonAsLink href=\"/s/\" style={{ marginTop: 30 }}>\n          Create a sandbox\n        </ButtonAsLink>\n\n        <HelpText>\n          You will be billed{' '}\n          {user.subscription.duration === 'yearly' ? (\n            <>\n              and charged{' '}\n              <b>annually on {format(subscriptionDate, 'MMM dd')}</b>\n            </>\n          ) : (\n            <>\n              on the <b>{format(subscriptionDate, 'do')} of each month</b>\n            </>\n          )}\n          . You can{' '}\n          <LinkButton\n            onClick={e => {\n              e.preventDefault();\n              modalOpened({\n                modal: 'preferences',\n                itemId: 'paymentInfo',\n              });\n            }}\n          >\n            update your payment details\n          </LinkButton>{' '}\n          or{' '}\n          <LinkButton\n            onClick={e => {\n              e.preventDefault();\n              cancelSubscriptionClicked();\n            }}\n          >\n            cancel your subscription\n          </LinkButton>{' '}\n          at any time.\n        </HelpText>\n      </Centered>\n    </MaxWidth>\n  );\n};\n\nconst Patron = ({ user }) => (\n  <MaxWidth width={400}>\n    <Centered horizontal>\n      <Avatar src={user.avatarUrl} />\n      <Badge type=\"patron\">Patron</Badge>\n      <Heading>You&apos;re a Pro!</Heading>\n\n      <SubHeading>\n        Thank you for being an early supporter of CodeSandbox. As a patron, you\n        can access all Pro features.\n      </SubHeading>\n      <ButtonAsLink href=\"/s/\">Create a sandbox</ButtonAsLink>\n\n      <HelpText>\n        You will be billed on the{' '}\n        <b>{format(new Date(user.subscription.since), 'do')}</b> of each month.\n        You can <a href=\"/patron\">modify your contribution</a> at any time.\n      </HelpText>\n    </Centered>\n  </MaxWidth>\n);\n\nconst NotPro = ({\n  createSubscriptionClicked,\n  user,\n  patron,\n  checkoutDisabled,\n}) => {\n  const [duration, setDuration] = React.useState('yearly');\n\n  return (\n    <>\n      <Heading>CodeSandbox Pro</Heading>\n      <SubHeading>\n        {duration === 'yearly' ? '$9/month billed annually' : '12$/month'}\n      </SubHeading>\n      <DurationChoice>\n        <BillText on={duration === 'monthly'}>Bill monthly</BillText>\n        <Switch\n          onChange={() =>\n            setDuration(d => (d === 'yearly' ? 'monthly' : 'yearly'))\n          }\n          on={duration === 'yearly'}\n        />\n        <BillText on={duration === 'yearly'}>Bill annually</BillText>\n      </DurationChoice>\n      <Centered horizontal>\n        <SubscribeForm\n          subscribe={({ token, coupon }) =>\n            createSubscriptionClicked({ token, coupon, duration })\n          }\n          isLoading={patron.isUpdatingSubscription}\n          hasCoupon\n          name={user && user.name}\n          error={patron.error}\n          disabled={checkoutDisabled}\n        />\n      </Centered>\n    </>\n  );\n};\n\nconst Expiring = ({\n  user,\n  updateSubscriptionClicked,\n  isUpdatingSubscription,\n}) => (\n  <MaxWidth width={500}>\n    <Centered horizontal>\n      <Avatar src={user.avatarUrl} />\n      <Badge type=\"pro\" style={{ opacity: 0.8 }}>\n        Pro\n      </Badge>\n      <Heading>Your subscription is expiring</Heading>\n\n      <HelpText>\n        Your subscription will be automatically cancelled on your next billing\n        date ({format(new Date(user.subscription.since), 'do MMM')}). All your\n        private sandboxes will remain available and private.\n      </HelpText>\n\n      {isUpdatingSubscription ? (\n        <Button disabled style={{ marginTop: 30 }}>\n          Creating subscription...\n        </Button>\n      ) : (\n        <Button\n          onClick={() => updateSubscriptionClicked({ coupon: '' })}\n          style={{ marginTop: 30 }}\n        >\n          Reactivate subscription\n        </Button>\n      )}\n    </Centered>\n  </MaxWidth>\n);\n\nexport default ProPage;\n"],"sourceRoot":""}