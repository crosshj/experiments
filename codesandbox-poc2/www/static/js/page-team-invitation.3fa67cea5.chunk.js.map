{"version":3,"sources":["webpack:///./src/app/pages/TeamInvitation/elements.ts","webpack:///./src/app/pages/TeamInvitation/queries.ts","webpack:///./src/app/pages/TeamInvitation/TeamInvitation.tsx","webpack:///./src/app/pages/TeamInvitation/index.ts"],"names":["PageContainer","styled","main","props","theme","colors","grays","ContentContainer","div","teamByToken","joinTeamMutation","textAlign","color","InfoDialog","title","description","action","paddingX","paddingTop","paddingBottom","css","borderRadius","backgroundColor","gap","direction","align","height","width","size","variant","ErrorDialog","error","message","replace","style","as","Link","to","dashboardUrl","textDecoration","flex","onClick","document","location","reload","TeamSignIn","inviteToken","actions","useOvermind","queryRes","useQuery","variables","loading","Helmet","data","name","signInClicked","JoinTeam","effects","React","setLoading","teamId","setTeamId","setError","useMutation","joinTeam","a","track","source","result","team","redeemTeamInviteToken","notificationToast","success","id","join","teamOverviewUrl","TeamInvitation","match","state","params","token","content","hasLogIn","codesandboxBlack"],"mappings":"m7CAEO,IAAMA,EAAgBC,UAAOC,KAAV,8EAAGD,CAAH,KAMJ,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAM,QAG3CC,EAAmBN,UAAOO,IAAV,iFAAGP,CAAH,KCThBQ,EAAW,i6BAQXC,EAAgB,qhC,4UCiChB,CAAEC,UAAW,SAAUC,MAAO,UApBrCC,EAAa,SAAC,GAAD,IACjBC,EADiB,EACjBA,MACAC,EAFiB,EAEjBA,YACAC,EAHiB,EAGjBA,OAHiB,OASjB,mBACEC,SAAU,GACVC,WAAY,EACZC,cAAe,EAHjB,KAIOC,IAAI,CAAEC,aAAc,EAAGC,gBAAiB,eAE7C,gBAAC,QAAD,CAAOC,IAAK,GAAIC,UAAU,WAAWC,MAAM,UACzC,gBAAC,IAAD,CAAUC,OAAQ,GAAIC,MAAO,KAC7B,mBACEJ,IAAK,EACLC,UAAU,YAGV,gBAAC,OAAD,CAAMI,KAAM,EAAGH,MAAM,UAClBX,GAEFC,GACC,gBAAC,OAAD,CAAMc,QAAQ,QAAQD,KAAM,EAAGH,MAAM,UAClCV,IAINC,KAKDc,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,gBAAC,EAAD,CACEjB,MAAM,qDACNC,YAAagB,EAAMC,QAAQC,QAAQ,kBAAmB,IACtDjB,OACE,gBAAC,QAAD,CAAOkB,MAAO,CAAEP,MAAO,QAAUJ,IAAK,GACpC,gBAAC,SAAD,CAEEY,GAAIC,OACJC,GAAIC,yBACJJ,MAAO,CAAEK,eAAgB,OAAQC,KAAM,GACvCX,QAAQ,aALV,aASA,gBAAC,SAAD,CACEY,QAAS,WACPC,SAASC,SAASC,UAEpBV,MAAO,CAAEM,KAAM,IAJjB,eAaFK,EAAa,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,YACZC,EAAYC,cAAZD,QACFE,EAAWC,YAASzC,EAAa,CAAE0C,UAAW,CAAEL,iBAEtD,OAAIG,EAASG,QACJ,gBAAC,OAAD,CAAMxB,KAAM,GAAZ,yBAGLqB,EAASlB,MACJ,gBAAC,EAAD,CAAaA,MAAOkB,EAASlB,QAIpC,gCACE,gBAACsB,EAAA,OAAD,KACE,6BACGJ,EAASK,KAAT,eACWL,EAASK,KAAK7C,YAAY8C,KADrC,mBAEG,6BAIR,gBAAC,EAAD,CACEzC,MACE,wCACO,yBAAImC,EAASK,KAAK7C,YAAY8C,MADrC,mBAIFxC,YAAY,uCACZC,OACE,gBAAC,SAAD,CAAQyB,QAAS,kBAAMM,EAAQS,kBAA/B,yBASJC,EAAW,SAAC,GAA8C,IAA5CX,EAA2C,EAA3CA,YACVY,EAAYV,cAAZU,QADqD,EAE/BC,YAAe,GAFgB,WAEtDP,EAFsD,KAE7CQ,EAF6C,OAGjCD,WAA8B,MAHG,WAGtDE,EAHsD,KAG9CC,EAH8C,OAInCH,WAA6B,MAJM,WAItD5B,EAJsD,KAI/CgC,EAJ+C,OAM1CC,YAAYtD,GAAxBuD,EANsD,YA8B7D,OAtBAN,aAAgB,YACJ,+BAAG,8BAAAO,EAAA,sEAETC,IAAM,mBAAoB,CAAEC,OAAQ,QAF3B,SAIYH,EAAS,CAAEd,UAAW,CAAEL,iBAJpC,OAIHuB,EAJG,OAKHC,EAAOD,EAAOf,KAAKiB,sBACzBb,EAAQc,kBAAkBC,QACxB,uBAAyBH,EAAKf,KAAO,KAGvCO,EAAUQ,EAAKI,IAVN,kDAYTX,EAAS,EAAD,IAZC,yBAcTH,GAAW,GAdF,6EAAH,qDAkBVe,KACC,CAACV,EAAUnB,EAAaY,EAAQc,oBAE/BzC,EACK,gBAAC,EAAD,CAAaA,MAAOA,IAGzBqB,IAAYS,EACP,gBAAC,OAAD,CAAMjC,KAAM,GAAZ,mBAGF,gBAAC,IAAD,CAAUS,GAAIuC,0BAAgBf,MAG1BgB,EAER,SAAC,GAAe,IAAD,EAAZC,EAAY,EAAZA,MACEC,EAAU/B,cAAV+B,MACFjC,EAAW,OAAGgC,QAAH,IAAGA,GAAH,UAAGA,EAAOE,cAAV,aAAG,EAAeC,MAE7BC,EACCH,EAAMI,SAIJ,gBAAC,EAAD,CAAUrC,YAAaA,IAHrB,gBAAC,EAAD,CAAYA,YAAaA,IAMpC,OACE,gBAAC,gBAAD,CAAe1C,MAAOgF,KACpB,gBAACpF,EAAD,KACE,gBAACO,EAAD,KAAmB2E,MCxL3B","file":"static/js/page-team-invitation.3fa67cea5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const PageContainer = styled.main`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.theme.colors.grays[700]};\n`;\n\nexport const ContentContainer = styled.div`\n  max-width: 750px;\n  min-width: 450px;\n  text-align: center;\n`;\n","import gql from 'graphql-tag';\n\nexport const teamByToken = gql`\n  query TeamByToken($inviteToken: String!) {\n    teamByToken(inviteToken: $inviteToken) {\n      name\n    }\n  }\n`;\n\nexport const joinTeamMutation = gql`\n  mutation JoinTeamByToken($inviteToken: String!) {\n    redeemTeamInviteToken(inviteToken: $inviteToken) {\n      id\n      name\n    }\n  }\n`;\n","import * as React from 'react';\nimport css from '@styled-system/css';\nimport { Link, Redirect } from 'react-router-dom';\nimport {\n  ThemeProvider,\n  Text,\n  Stack,\n  Element,\n  Button,\n} from '@codesandbox/components';\nimport codesandboxBlack from '@codesandbox/components/lib/themes/codesandbox-black';\nimport LogoIcon from '@codesandbox/common/lib/components/Logo';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useOvermind } from 'app/overmind';\nimport { Helmet } from 'react-helmet';\nimport {\n  teamOverviewUrl,\n  dashboardUrl,\n} from '@codesandbox/common/lib/utils/url-generator';\nimport track from '@codesandbox/common/lib/utils/analytics';\nimport { PageContainer, ContentContainer } from './elements';\nimport { teamByToken, joinTeamMutation } from './queries';\n\nconst InfoDialog = ({\n  title,\n  description,\n  action,\n}: {\n  title: React.ReactNode | string;\n  description?: string;\n  action: React.ReactNode;\n}) => (\n  <Element\n    paddingX={14}\n    paddingTop={8}\n    paddingBottom={8}\n    css={css({ borderRadius: 8, backgroundColor: 'grays.900' })}\n  >\n    <Stack gap={12} direction=\"vertical\" align=\"center\">\n      <LogoIcon height={56} width={56} />\n      <Stack\n        gap={3}\n        direction=\"vertical\"\n        css={{ textAlign: 'center', color: 'white' }}\n      >\n        <Text size={5} align=\"center\">\n          {title}\n        </Text>\n        {description && (\n          <Text variant=\"muted\" size={4} align=\"center\">\n            {description}\n          </Text>\n        )}\n      </Stack>\n      {action}\n    </Stack>\n  </Element>\n);\n\nconst ErrorDialog = ({ error }: { error: Error }) => (\n  <InfoDialog\n    title=\"Something went wrong while fetching the invitation\"\n    description={error.message.replace('GraphQL error: ', '')}\n    action={\n      <Stack style={{ width: '100%' }} gap={2}>\n        <Button\n          // @ts-ignore\n          as={Link}\n          to={dashboardUrl()}\n          style={{ textDecoration: 'none', flex: 1 }}\n          variant=\"secondary\"\n        >\n          Dashboard\n        </Button>\n        <Button\n          onClick={() => {\n            document.location.reload();\n          }}\n          style={{ flex: 1 }}\n        >\n          Refresh\n        </Button>\n      </Stack>\n    }\n  />\n);\n\nconst TeamSignIn = ({ inviteToken }: { inviteToken: string }) => {\n  const { actions } = useOvermind();\n  const queryRes = useQuery(teamByToken, { variables: { inviteToken } });\n\n  if (queryRes.loading) {\n    return <Text size={6}>Loading Invitation...</Text>;\n  }\n\n  if (queryRes.error) {\n    return <ErrorDialog error={queryRes.error} />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {queryRes.data\n            ? `Join ${queryRes.data.teamByToken.name} on CodeSandbox`\n            : 'Join team on CodeSandbox'}\n        </title>\n      </Helmet>\n\n      <InfoDialog\n        title={\n          <>\n            Join <b>{queryRes.data.teamByToken.name}</b> on CodeSandbox\n          </>\n        }\n        description=\"Please sign in to GitHub to continue\"\n        action={\n          <Button onClick={() => actions.signInClicked()}>\n            Sign in to GitHub\n          </Button>\n        }\n      />\n    </>\n  );\n};\n\nconst JoinTeam = ({ inviteToken }: { inviteToken: string }) => {\n  const { effects } = useOvermind();\n  const [loading, setLoading] = React.useState(true);\n  const [teamId, setTeamId] = React.useState<string | null>(null);\n  const [error, setError] = React.useState<Error | null>(null);\n\n  const [joinTeam] = useMutation(joinTeamMutation);\n\n  React.useEffect(() => {\n    const join = async () => {\n      try {\n        track('Team - Join Team', { source: 'url' });\n\n        const result = await joinTeam({ variables: { inviteToken } });\n        const team = result.data.redeemTeamInviteToken;\n        effects.notificationToast.success(\n          'Successfully joined ' + team.name + '!'\n        );\n\n        setTeamId(team.id);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    join();\n  }, [joinTeam, inviteToken, effects.notificationToast]);\n\n  if (error) {\n    return <ErrorDialog error={error} />;\n  }\n\n  if (loading || !teamId) {\n    return <Text size={6}>Joining Team...</Text>;\n  }\n\n  return <Redirect to={teamOverviewUrl(teamId)} />;\n};\n\nexport const TeamInvitation: React.FC<{\n  match: { params: { token: string } };\n}> = ({ match }) => {\n  const { state } = useOvermind();\n  const inviteToken = match?.params?.token;\n\n  const content = (() => {\n    if (!state.hasLogIn) {\n      return <TeamSignIn inviteToken={inviteToken} />;\n    }\n\n    return <JoinTeam inviteToken={inviteToken} />;\n  })();\n\n  return (\n    <ThemeProvider theme={codesandboxBlack}>\n      <PageContainer>\n        <ContentContainer>{content}</ContentContainer>\n      </PageContainer>\n    </ThemeProvider>\n  );\n};\n","export { TeamInvitation } from './TeamInvitation';\n"],"sourceRoot":""}