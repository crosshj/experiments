{"version":3,"sources":["webpack:///C:/repos/codesandbox-client/node_modules/codemirror/mode/markdown/markdown.js","webpack:///C:/repos/codesandbox-client/node_modules/codemirror/mode/meta.js"],"names":["CodeMirror","defineMode","cmCfg","modeCfg","htmlMode","getMode","htmlModeMissing","name","undefined","highlightFormatting","maxBlockquoteDepth","taskLists","strikethrough","emoji","fencedCodeBlockHighlighting","xml","tokenTypeOverrides","tokenTypes","header","code","quote","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hasOwnProperty","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","switchInline","stream","state","f","inline","switchBlock","block","blankLine","linkTitle","indentedCode","htmlBlock","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","line","firstTokenOnLine","column","indentation","prevLineLineIsEmpty","test","string","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","list","maxNonCodeIndentation","listStack","length","lineIndentation","indentationDiff","pop","allowsInlineContinuation","fencedCodeEnd","isHr","match","skipToEnd","eatSpace","getType","eat","setext","listType","current","push","taskList","fencedEndRE","RegExp","localMode","findModeByName","found","mime","mimes","mode","localState","startState","local","lookAhead","charAt","peek","footnoteLink","style","token","htmlState","inner","innerMode","tagStart","context","tokenize","isInText","md_inside","indexOf","returnType","currListInd","hasExitedList","maxFencedEndInd","styles","i","taskOpen","join","taskClosed","listMod","handleText","text","ch","next","matchCh","regex","replace","previousFormatting","eatWhile","count","t","type","formattingEscape","end","pos","atts","substring","start","backUp","len","before","after","leftFlanking","rightFlanking","setEm","setStrong","retType","endChar","returnState","linkRE","footnoteLinkInside","footnoteUrl","copyState","s","slice","indent","textAfter","Pass","closeBrackets","fold","defineMIME","mod","modeInfo","ext","file","alias","info","findModeByMIME","toLowerCase","j","findModeByExtension","findModeByFileName","filename","dot","lastIndexOf"],"mappings":"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","file":"static/js/vendors~codemirror-markdown.a12282ed1.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ *(?:\\={1,}|-{1,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\\\"#$%&\\'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~—]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      state.f = inlineNormal;\n      state.block = blockNormal;\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        // Reset inline styles which shouldn't propagate aross list items\n        state.em = false;\n        state.strong = false;\n        state.code = false;\n        state.strikethrough = false;\n\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2]);\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*>)/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^[a-z_\\d+-]+:/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [\n    {name: \"APL\", mime: \"text/apl\", mode: \"apl\", ext: [\"dyalog\", \"apl\"]},\n    {name: \"PGP\", mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"], mode: \"asciiarmor\", ext: [\"asc\", \"pgp\", \"sig\"]},\n    {name: \"ASN.1\", mime: \"text/x-ttcn-asn\", mode: \"asn.1\", ext: [\"asn\", \"asn1\"]},\n    {name: \"Asterisk\", mime: \"text/x-asterisk\", mode: \"asterisk\", file: /^extensions\\.conf$/i},\n    {name: \"Brainfuck\", mime: \"text/x-brainfuck\", mode: \"brainfuck\", ext: [\"b\", \"bf\"]},\n    {name: \"C\", mime: \"text/x-csrc\", mode: \"clike\", ext: [\"c\", \"h\", \"ino\"]},\n    {name: \"C++\", mime: \"text/x-c++src\", mode: \"clike\", ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"], alias: [\"cpp\"]},\n    {name: \"Cobol\", mime: \"text/x-cobol\", mode: \"cobol\", ext: [\"cob\", \"cpy\"]},\n    {name: \"C#\", mime: \"text/x-csharp\", mode: \"clike\", ext: [\"cs\"], alias: [\"csharp\"]},\n    {name: \"Clojure\", mime: \"text/x-clojure\", mode: \"clojure\", ext: [\"clj\", \"cljc\", \"cljx\"]},\n    {name: \"ClojureScript\", mime: \"text/x-clojurescript\", mode: \"clojure\", ext: [\"cljs\"]},\n    {name: \"Closure Stylesheets (GSS)\", mime: \"text/x-gss\", mode: \"css\", ext: [\"gss\"]},\n    {name: \"CMake\", mime: \"text/x-cmake\", mode: \"cmake\", ext: [\"cmake\", \"cmake.in\"], file: /^CMakeLists.txt$/},\n    {name: \"CoffeeScript\", mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"], mode: \"coffeescript\", ext: [\"coffee\"], alias: [\"coffee\", \"coffee-script\"]},\n    {name: \"Common Lisp\", mime: \"text/x-common-lisp\", mode: \"commonlisp\", ext: [\"cl\", \"lisp\", \"el\"], alias: [\"lisp\"]},\n    {name: \"Cypher\", mime: \"application/x-cypher-query\", mode: \"cypher\", ext: [\"cyp\", \"cypher\"]},\n    {name: \"Cython\", mime: \"text/x-cython\", mode: \"python\", ext: [\"pyx\", \"pxd\", \"pxi\"]},\n    {name: \"Crystal\", mime: \"text/x-crystal\", mode: \"crystal\", ext: [\"cr\"]},\n    {name: \"CSS\", mime: \"text/css\", mode: \"css\", ext: [\"css\"]},\n    {name: \"CQL\", mime: \"text/x-cassandra\", mode: \"sql\", ext: [\"cql\"]},\n    {name: \"D\", mime: \"text/x-d\", mode: \"d\", ext: [\"d\"]},\n    {name: \"Dart\", mimes: [\"application/dart\", \"text/x-dart\"], mode: \"dart\", ext: [\"dart\"]},\n    {name: \"diff\", mime: \"text/x-diff\", mode: \"diff\", ext: [\"diff\", \"patch\"]},\n    {name: \"Django\", mime: \"text/x-django\", mode: \"django\"},\n    {name: \"Dockerfile\", mime: \"text/x-dockerfile\", mode: \"dockerfile\", file: /^Dockerfile$/},\n    {name: \"DTD\", mime: \"application/xml-dtd\", mode: \"dtd\", ext: [\"dtd\"]},\n    {name: \"Dylan\", mime: \"text/x-dylan\", mode: \"dylan\", ext: [\"dylan\", \"dyl\", \"intr\"]},\n    {name: \"EBNF\", mime: \"text/x-ebnf\", mode: \"ebnf\"},\n    {name: \"ECL\", mime: \"text/x-ecl\", mode: \"ecl\", ext: [\"ecl\"]},\n    {name: \"edn\", mime: \"application/edn\", mode: \"clojure\", ext: [\"edn\"]},\n    {name: \"Eiffel\", mime: \"text/x-eiffel\", mode: \"eiffel\", ext: [\"e\"]},\n    {name: \"Elm\", mime: \"text/x-elm\", mode: \"elm\", ext: [\"elm\"]},\n    {name: \"Embedded Javascript\", mime: \"application/x-ejs\", mode: \"htmlembedded\", ext: [\"ejs\"]},\n    {name: \"Embedded Ruby\", mime: \"application/x-erb\", mode: \"htmlembedded\", ext: [\"erb\"]},\n    {name: \"Erlang\", mime: \"text/x-erlang\", mode: \"erlang\", ext: [\"erl\"]},\n    {name: \"Esper\", mime: \"text/x-esper\", mode: \"sql\"},\n    {name: \"Factor\", mime: \"text/x-factor\", mode: \"factor\", ext: [\"factor\"]},\n    {name: \"FCL\", mime: \"text/x-fcl\", mode: \"fcl\"},\n    {name: \"Forth\", mime: \"text/x-forth\", mode: \"forth\", ext: [\"forth\", \"fth\", \"4th\"]},\n    {name: \"Fortran\", mime: \"text/x-fortran\", mode: \"fortran\", ext: [\"f\", \"for\", \"f77\", \"f90\"]},\n    {name: \"F#\", mime: \"text/x-fsharp\", mode: \"mllike\", ext: [\"fs\"], alias: [\"fsharp\"]},\n    {name: \"Gas\", mime: \"text/x-gas\", mode: \"gas\", ext: [\"s\"]},\n    {name: \"Gherkin\", mime: \"text/x-feature\", mode: \"gherkin\", ext: [\"feature\"]},\n    {name: \"GitHub Flavored Markdown\", mime: \"text/x-gfm\", mode: \"gfm\", file: /^(readme|contributing|history).md$/i},\n    {name: \"Go\", mime: \"text/x-go\", mode: \"go\", ext: [\"go\"]},\n    {name: \"Groovy\", mime: \"text/x-groovy\", mode: \"groovy\", ext: [\"groovy\", \"gradle\"], file: /^Jenkinsfile$/},\n    {name: \"HAML\", mime: \"text/x-haml\", mode: \"haml\", ext: [\"haml\"]},\n    {name: \"Haskell\", mime: \"text/x-haskell\", mode: \"haskell\", ext: [\"hs\"]},\n    {name: \"Haskell (Literate)\", mime: \"text/x-literate-haskell\", mode: \"haskell-literate\", ext: [\"lhs\"]},\n    {name: \"Haxe\", mime: \"text/x-haxe\", mode: \"haxe\", ext: [\"hx\"]},\n    {name: \"HXML\", mime: \"text/x-hxml\", mode: \"haxe\", ext: [\"hxml\"]},\n    {name: \"ASP.NET\", mime: \"application/x-aspx\", mode: \"htmlembedded\", ext: [\"aspx\"], alias: [\"asp\", \"aspx\"]},\n    {name: \"HTML\", mime: \"text/html\", mode: \"htmlmixed\", ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"], alias: [\"xhtml\"]},\n    {name: \"HTTP\", mime: \"message/http\", mode: \"http\"},\n    {name: \"IDL\", mime: \"text/x-idl\", mode: \"idl\", ext: [\"pro\"]},\n    {name: \"Pug\", mime: \"text/x-pug\", mode: \"pug\", ext: [\"jade\", \"pug\"], alias: [\"jade\"]},\n    {name: \"Java\", mime: \"text/x-java\", mode: \"clike\", ext: [\"java\"]},\n    {name: \"Java Server Pages\", mime: \"application/x-jsp\", mode: \"htmlembedded\", ext: [\"jsp\"], alias: [\"jsp\"]},\n    {name: \"JavaScript\", mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n     mode: \"javascript\", ext: [\"js\"], alias: [\"ecmascript\", \"js\", \"node\"]},\n    {name: \"JSON\", mimes: [\"application/json\", \"application/x-json\"], mode: \"javascript\", ext: [\"json\", \"map\"], alias: [\"json5\"]},\n    {name: \"JSON-LD\", mime: \"application/ld+json\", mode: \"javascript\", ext: [\"jsonld\"], alias: [\"jsonld\"]},\n    {name: \"JSX\", mime: \"text/jsx\", mode: \"jsx\", ext: [\"jsx\"]},\n    {name: \"Jinja2\", mime: \"null\", mode: \"jinja2\"},\n    {name: \"Julia\", mime: \"text/x-julia\", mode: \"julia\", ext: [\"jl\"]},\n    {name: \"Kotlin\", mime: \"text/x-kotlin\", mode: \"clike\", ext: [\"kt\"]},\n    {name: \"LESS\", mime: \"text/x-less\", mode: \"css\", ext: [\"less\"]},\n    {name: \"LiveScript\", mime: \"text/x-livescript\", mode: \"livescript\", ext: [\"ls\"], alias: [\"ls\"]},\n    {name: \"Lua\", mime: \"text/x-lua\", mode: \"lua\", ext: [\"lua\"]},\n    {name: \"Markdown\", mime: \"text/x-markdown\", mode: \"markdown\", ext: [\"markdown\", \"md\", \"mkd\"]},\n    {name: \"mIRC\", mime: \"text/mirc\", mode: \"mirc\"},\n    {name: \"MariaDB SQL\", mime: \"text/x-mariadb\", mode: \"sql\"},\n    {name: \"Mathematica\", mime: \"text/x-mathematica\", mode: \"mathematica\", ext: [\"m\", \"nb\"]},\n    {name: \"Modelica\", mime: \"text/x-modelica\", mode: \"modelica\", ext: [\"mo\"]},\n    {name: \"MUMPS\", mime: \"text/x-mumps\", mode: \"mumps\", ext: [\"mps\"]},\n    {name: \"MS SQL\", mime: \"text/x-mssql\", mode: \"sql\"},\n    {name: \"mbox\", mime: \"application/mbox\", mode: \"mbox\", ext: [\"mbox\"]},\n    {name: \"MySQL\", mime: \"text/x-mysql\", mode: \"sql\"},\n    {name: \"Nginx\", mime: \"text/x-nginx-conf\", mode: \"nginx\", file: /nginx.*\\.conf$/i},\n    {name: \"NSIS\", mime: \"text/x-nsis\", mode: \"nsis\", ext: [\"nsh\", \"nsi\"]},\n    {name: \"NTriples\", mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n     mode: \"ntriples\", ext: [\"nt\", \"nq\"]},\n    {name: \"Objective-C\", mime: \"text/x-objectivec\", mode: \"clike\", ext: [\"m\", \"mm\"], alias: [\"objective-c\", \"objc\"]},\n    {name: \"OCaml\", mime: \"text/x-ocaml\", mode: \"mllike\", ext: [\"ml\", \"mli\", \"mll\", \"mly\"]},\n    {name: \"Octave\", mime: \"text/x-octave\", mode: \"octave\", ext: [\"m\"]},\n    {name: \"Oz\", mime: \"text/x-oz\", mode: \"oz\", ext: [\"oz\"]},\n    {name: \"Pascal\", mime: \"text/x-pascal\", mode: \"pascal\", ext: [\"p\", \"pas\"]},\n    {name: \"PEG.js\", mime: \"null\", mode: \"pegjs\", ext: [\"jsonld\"]},\n    {name: \"Perl\", mime: \"text/x-perl\", mode: \"perl\", ext: [\"pl\", \"pm\"]},\n    {name: \"PHP\", mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"], mode: \"php\", ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]},\n    {name: \"Pig\", mime: \"text/x-pig\", mode: \"pig\", ext: [\"pig\"]},\n    {name: \"Plain Text\", mime: \"text/plain\", mode: \"null\", ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]},\n    {name: \"PLSQL\", mime: \"text/x-plsql\", mode: \"sql\", ext: [\"pls\"]},\n    {name: \"PowerShell\", mime: \"application/x-powershell\", mode: \"powershell\", ext: [\"ps1\", \"psd1\", \"psm1\"]},\n    {name: \"Properties files\", mime: \"text/x-properties\", mode: \"properties\", ext: [\"properties\", \"ini\", \"in\"], alias: [\"ini\", \"properties\"]},\n    {name: \"ProtoBuf\", mime: \"text/x-protobuf\", mode: \"protobuf\", ext: [\"proto\"]},\n    {name: \"Python\", mime: \"text/x-python\", mode: \"python\", ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"], file: /^(BUCK|BUILD)$/},\n    {name: \"Puppet\", mime: \"text/x-puppet\", mode: \"puppet\", ext: [\"pp\"]},\n    {name: \"Q\", mime: \"text/x-q\", mode: \"q\", ext: [\"q\"]},\n    {name: \"R\", mime: \"text/x-rsrc\", mode: \"r\", ext: [\"r\", \"R\"], alias: [\"rscript\"]},\n    {name: \"reStructuredText\", mime: \"text/x-rst\", mode: \"rst\", ext: [\"rst\"], alias: [\"rst\"]},\n    {name: \"RPM Changes\", mime: \"text/x-rpm-changes\", mode: \"rpm\"},\n    {name: \"RPM Spec\", mime: \"text/x-rpm-spec\", mode: \"rpm\", ext: [\"spec\"]},\n    {name: \"Ruby\", mime: \"text/x-ruby\", mode: \"ruby\", ext: [\"rb\"], alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]},\n    {name: \"Rust\", mime: \"text/x-rustsrc\", mode: \"rust\", ext: [\"rs\"]},\n    {name: \"SAS\", mime: \"text/x-sas\", mode: \"sas\", ext: [\"sas\"]},\n    {name: \"Sass\", mime: \"text/x-sass\", mode: \"sass\", ext: [\"sass\"]},\n    {name: \"Scala\", mime: \"text/x-scala\", mode: \"clike\", ext: [\"scala\"]},\n    {name: \"Scheme\", mime: \"text/x-scheme\", mode: \"scheme\", ext: [\"scm\", \"ss\"]},\n    {name: \"SCSS\", mime: \"text/x-scss\", mode: \"css\", ext: [\"scss\"]},\n    {name: \"Shell\", mimes: [\"text/x-sh\", \"application/x-sh\"], mode: \"shell\", ext: [\"sh\", \"ksh\", \"bash\"], alias: [\"bash\", \"sh\", \"zsh\"], file: /^PKGBUILD$/},\n    {name: \"Sieve\", mime: \"application/sieve\", mode: \"sieve\", ext: [\"siv\", \"sieve\"]},\n    {name: \"Slim\", mimes: [\"text/x-slim\", \"application/x-slim\"], mode: \"slim\", ext: [\"slim\"]},\n    {name: \"Smalltalk\", mime: \"text/x-stsrc\", mode: \"smalltalk\", ext: [\"st\"]},\n    {name: \"Smarty\", mime: \"text/x-smarty\", mode: \"smarty\", ext: [\"tpl\"]},\n    {name: \"Solr\", mime: \"text/x-solr\", mode: \"solr\"},\n    {name: \"SML\", mime: \"text/x-sml\", mode: \"mllike\", ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]},\n    {name: \"Soy\", mime: \"text/x-soy\", mode: \"soy\", ext: [\"soy\"], alias: [\"closure template\"]},\n    {name: \"SPARQL\", mime: \"application/sparql-query\", mode: \"sparql\", ext: [\"rq\", \"sparql\"], alias: [\"sparul\"]},\n    {name: \"Spreadsheet\", mime: \"text/x-spreadsheet\", mode: \"spreadsheet\", alias: [\"excel\", \"formula\"]},\n    {name: \"SQL\", mime: \"text/x-sql\", mode: \"sql\", ext: [\"sql\"]},\n    {name: \"SQLite\", mime: \"text/x-sqlite\", mode: \"sql\"},\n    {name: \"Squirrel\", mime: \"text/x-squirrel\", mode: \"clike\", ext: [\"nut\"]},\n    {name: \"Stylus\", mime: \"text/x-styl\", mode: \"stylus\", ext: [\"styl\"]},\n    {name: \"Swift\", mime: \"text/x-swift\", mode: \"swift\", ext: [\"swift\"]},\n    {name: \"sTeX\", mime: \"text/x-stex\", mode: \"stex\"},\n    {name: \"LaTeX\", mime: \"text/x-latex\", mode: \"stex\", ext: [\"text\", \"ltx\", \"tex\"], alias: [\"tex\"]},\n    {name: \"SystemVerilog\", mime: \"text/x-systemverilog\", mode: \"verilog\", ext: [\"v\", \"sv\", \"svh\"]},\n    {name: \"Tcl\", mime: \"text/x-tcl\", mode: \"tcl\", ext: [\"tcl\"]},\n    {name: \"Textile\", mime: \"text/x-textile\", mode: \"textile\", ext: [\"textile\"]},\n    {name: \"TiddlyWiki \", mime: \"text/x-tiddlywiki\", mode: \"tiddlywiki\"},\n    {name: \"Tiki wiki\", mime: \"text/tiki\", mode: \"tiki\"},\n    {name: \"TOML\", mime: \"text/x-toml\", mode: \"toml\", ext: [\"toml\"]},\n    {name: \"Tornado\", mime: \"text/x-tornado\", mode: \"tornado\"},\n    {name: \"troff\", mime: \"text/troff\", mode: \"troff\", ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]},\n    {name: \"TTCN\", mime: \"text/x-ttcn\", mode: \"ttcn\", ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]},\n    {name: \"TTCN_CFG\", mime: \"text/x-ttcn-cfg\", mode: \"ttcn-cfg\", ext: [\"cfg\"]},\n    {name: \"Turtle\", mime: \"text/turtle\", mode: \"turtle\", ext: [\"ttl\"]},\n    {name: \"TypeScript\", mime: \"application/typescript\", mode: \"javascript\", ext: [\"ts\"], alias: [\"ts\"]},\n    {name: \"TypeScript-JSX\", mime: \"text/typescript-jsx\", mode: \"jsx\", ext: [\"tsx\"], alias: [\"tsx\"]},\n    {name: \"Twig\", mime: \"text/x-twig\", mode: \"twig\"},\n    {name: \"Web IDL\", mime: \"text/x-webidl\", mode: \"webidl\", ext: [\"webidl\"]},\n    {name: \"VB.NET\", mime: \"text/x-vb\", mode: \"vb\", ext: [\"vb\"]},\n    {name: \"VBScript\", mime: \"text/vbscript\", mode: \"vbscript\", ext: [\"vbs\"]},\n    {name: \"Velocity\", mime: \"text/velocity\", mode: \"velocity\", ext: [\"vtl\"]},\n    {name: \"Verilog\", mime: \"text/x-verilog\", mode: \"verilog\", ext: [\"v\"]},\n    {name: \"VHDL\", mime: \"text/x-vhdl\", mode: \"vhdl\", ext: [\"vhd\", \"vhdl\"]},\n    {name: \"Vue.js Component\", mimes: [\"script/x-vue\", \"text/x-vue\"], mode: \"vue\", ext: [\"vue\"]},\n    {name: \"XML\", mimes: [\"application/xml\", \"text/xml\"], mode: \"xml\", ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"], alias: [\"rss\", \"wsdl\", \"xsd\"]},\n    {name: \"XQuery\", mime: \"application/xquery\", mode: \"xquery\", ext: [\"xy\", \"xquery\"]},\n    {name: \"Yacas\", mime: \"text/x-yacas\", mode: \"yacas\", ext: [\"ys\"]},\n    {name: \"YAML\", mimes: [\"text/x-yaml\", \"text/yaml\"], mode: \"yaml\", ext: [\"yaml\", \"yml\"], alias: [\"yml\"]},\n    {name: \"Z80\", mime: \"text/x-z80\", mode: \"z80\", ext: [\"z80\"]},\n    {name: \"mscgen\", mime: \"text/x-mscgen\", mode: \"mscgen\", ext: [\"mscgen\", \"mscin\", \"msc\"]},\n    {name: \"xu\", mime: \"text/x-xu\", mode: \"mscgen\", ext: [\"xu\"]},\n    {name: \"msgenny\", mime: \"text/x-msgenny\", mode: \"mscgen\", ext: [\"msgenny\"]}\n  ];\n  // Ensure all modes have a mime property for backwards compatibility\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function(mime) {\n    mime = mime.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\n        if (info.mimes[j] == mime) return info;\n    }\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\")\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\")\n  };\n\n  CodeMirror.findModeByExtension = function(ext) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\n        if (info.ext[j] == ext) return info;\n    }\n  };\n\n  CodeMirror.findModeByFileName = function(filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function(name) {\n    name = name.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\n        if (info.alias[j].toLowerCase() == name) return info;\n    }\n  };\n});\n"],"sourceRoot":""}