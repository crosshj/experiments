{"version":3,"sources":["webpack:///C:/repos/codesandbox-client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///C:/repos/codesandbox-client/node_modules/compute-scroll-into-view/es/index.js","webpack:///C:/repos/codesandbox-client/node_modules/downshift/dist/downshift.esm.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_arrayAggregator.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_baseAggregator.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_createAggregator.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_isIterateeCall.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_apply.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_overRest.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/constant.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_baseSetToString.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_shortOut.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_setToString.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/_baseRest.js","webpack:///C:/repos/codesandbox-client/node_modules/lodash-es/sortBy.js"],"names":["_assertThisInitialized","self","ReferenceError","isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","style","getComputedStyle","overflowY","overflowX","frame","ownerDocument","defaultView","frameElement","getFrameElement","isHiddenByFrame","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","idCounter","cbToCb","cb","noop","node","menuNode","scrollMode","options","block","inline","boundary","checkBoundary","target","TypeError","scrollingElement","document","documentElement","frames","cursor","parentNode","push","body","viewportWidth","window","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","_target$getBoundingCl","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","length","_frame$getBoundingCli","frameStyle","borderLeft","parseInt","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","Math","max","scrollLeft","scrollTop","min","forEach","_ref","isOrContainsNode","parent","child","contains","debounce","fn","time","timeoutId","cancel","clearTimeout","wrapper","_len","arguments","args","Array","_key","setTimeout","apply","callAllEventHandlers","_len2","fns","_key2","event","_len3","_key3","some","concat","preventDownshiftDefault","hasOwnProperty","nativeEvent","handleRefs","_len4","refs","_key4","ref","current","generateId","String","_ref2","isOpen","resultCount","unwrapArray","arg","defaultValue","isArray","isDOMElement","element","type","getElementProps","props","stateKeys","pickState","state","result","k","getState","Object","keys","reduce","prevState","key","isControlledProp","undefined","normalizeArrowKey","keyCode","indexOf","getNextWrappingIndex","moveAmount","baseIndex","itemCount","getItemNodeFromIndex","circular","itemsLastIndex","newIndex","nonDisabledNewIndex","getNextNonDisabledIndex","currentElementNode","hasAttribute","_index","targetWithinDownshift","downshiftElements","checkActiveElement","contextNode","activeElement","cleanupStatus","getStatusDiv","textContent","setStatus","status","documentProp","div","statusDiv","getElementById","createElement","setAttribute","assign","border","clip","margin","padding","position","appendChild","stateChangeTypes","freeze","__proto__","unknown","mouseUp","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","keyDownHome","keyDownEnd","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","controlledPropUpdatedSelectedItem","touchEnd","Downshift","_Component","_props","_this","call","this","id","menuId","labelId","inputId","getItemId","input","items","previousResultCount","timeoutIds","internalSetTimeout","filter","i","setItemCount","count","unsetItemCount","setHighlightedIndex","highlightedIndex","otherStateToSet","defaultHighlightedIndex","internalSetState","clearSelection","selectedItem","inputValue","defaultIsOpen","selectItem","item","itemToString","selectItemAtIndex","itemIndex","selectHighlightedItem","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","newStateToSet","stateReducer","nextState","nextFullState","onStateChange","onSelect","onChange","onUserAction","rootRef","_rootNode","getRootProps","_temp","_extends2","_ref2$suppressRefErro","suppressRefError","_ref3","_ref3$refKey","refKey","rest","called","role","keyDownHandlers","ArrowDown","_this2","preventDefault","amount","shiftKey","moveHighlightedIndex","getItemCount","nextHighlightedIndex","ArrowUp","_this3","Enter","_this$getState2","itemNode","Escape","reset","buttonKeyDownHandlers","toggleMenu","inputKeyDownHandlers","Home","_this4","newHighlightedIndex","End","_this5","getToggleButtonProps","_ref4","_ref5","onClick","onKeyDown","onPress","onKeyUp","onBlur","enabledEventHandlers","buttonHandleClick","buttonHandleKeyDown","buttonHandleKeyUp","buttonHandleBlur","eventHandlers","disabled","environment","focus","blurTarget","isMouseDown","getLabelProps","htmlFor","getInputProps","_ref6","_ref7","onInput","onChangeText","_eventHandlers","_this$getState6","inputHandleChange","inputHandleKeyDown","inputHandleBlur","autoComplete","value","downshiftButtonIsActive","dataset","toggle","menuRef","_menuNode","getMenuProps","_ref8","_temp2","_extends3","_ref9$suppressRefErro","_ref10","_ref10$refKey","getItemProps","_ref11","_enabledEventHandlers","_ref12","onMouseMove","onMouseDown","_ref12$item","customClickHandler","avoidScrolling","clearItems","_ref13","_ref14","_this$getState7","openMenu","closeMenu","updateStatus","getA11yStatusMessage","highlightedItem","_this$props","_this$props$initialHi","initialHighlightedIndex","_highlightedIndex","_this$props$initialIs","initialIsOpen","_isOpen","_this$props$initialIn","initialInputValue","_inputValue","_this$props$initialSe","initialSelectedItem","_selectedItem","_state","_proto","prototype","internalClearTimeouts","stateToMerge","scrollHighlightedItemIntoView","scrollIntoView","_this6","_this$getState9","componentDidMount","_this7","onMouseUp","onOuterClick","onTouchStart","isTouchMove","onTouchMove","onTouchEnd","contextWithinDownshift","addEventListener","cleanup","removeEventListener","shouldScroll","prevProps","currentHighlightedIndex","prevHighlightedIndex","componentDidUpdate","selectedItemChanged","componentWillUnmount","render","children","defaultProps","prevItem","s","a","changes","getA11ySelectionMessage","selectionParameters","itemToStringLocal","circularNavigation","array","isRequired","func","bool","number","any","string","shape","setter","iteratee","accumulator","collection","initializer","object","thisArg","nativeMax","start","transform","otherArgs","identity","nativeNow","Date","now","setToString","lastCalled","stamp","remaining","sortBy","iteratees"],"mappings":"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","file":"static/js/vendors~app~codemirror-editor~monaco-editor.2ed235b5b.chunk.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function isElement(el) {\n  return el != null && typeof el === 'object' && el.nodeType === 1;\n}\n\nfunction canOverflow(overflow, skipOverflowHiddenElements) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false;\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip';\n}\n\nfunction getFrameElement(el) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null;\n  }\n\n  return el.ownerDocument.defaultView.frameElement;\n}\n\nfunction isHiddenByFrame(el) {\n  var frame = getFrameElement(el);\n\n  if (!frame) {\n    return false;\n  }\n\n  return frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth;\n}\n\nfunction isScrollable(el, skipOverflowHiddenElements) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    var style = getComputedStyle(el, null);\n    return canOverflow(style.overflowY, skipOverflowHiddenElements) || canOverflow(style.overflowX, skipOverflowHiddenElements) || isHiddenByFrame(el);\n  }\n\n  return false;\n}\n\nfunction alignNearest(scrollingEdgeStart, scrollingEdgeEnd, scrollingSize, scrollingBorderStart, scrollingBorderEnd, elementEdgeStart, elementEdgeEnd, elementSize) {\n  if (elementEdgeStart < scrollingEdgeStart && elementEdgeEnd > scrollingEdgeEnd || elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd) {\n    return 0;\n  }\n\n  if (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize || elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart;\n  }\n\n  if (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize || elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd;\n  }\n\n  return 0;\n}\n\nexport default (function (target, options) {\n  var scrollMode = options.scrollMode,\n      block = options.block,\n      inline = options.inline,\n      boundary = options.boundary,\n      skipOverflowHiddenElements = options.skipOverflowHiddenElements;\n  var checkBoundary = typeof boundary === 'function' ? boundary : function (node) {\n    return node !== boundary;\n  };\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target');\n  }\n\n  var scrollingElement = document.scrollingElement || document.documentElement;\n  var frames = [];\n  var cursor = target;\n\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    cursor = cursor.parentNode;\n\n    if (cursor === scrollingElement) {\n      frames.push(cursor);\n      break;\n    }\n\n    if (cursor === document.body && isScrollable(cursor) && !isScrollable(document.documentElement)) {\n      continue;\n    }\n\n    if (isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor);\n    }\n  }\n\n  var viewportWidth = window.visualViewport ? visualViewport.width : innerWidth;\n  var viewportHeight = window.visualViewport ? visualViewport.height : innerHeight;\n  var viewportX = window.scrollX || pageXOffset;\n  var viewportY = window.scrollY || pageYOffset;\n\n  var _target$getBoundingCl = target.getBoundingClientRect(),\n      targetHeight = _target$getBoundingCl.height,\n      targetWidth = _target$getBoundingCl.width,\n      targetTop = _target$getBoundingCl.top,\n      targetRight = _target$getBoundingCl.right,\n      targetBottom = _target$getBoundingCl.bottom,\n      targetLeft = _target$getBoundingCl.left;\n\n  var targetBlock = block === 'start' || block === 'nearest' ? targetTop : block === 'end' ? targetBottom : targetTop + targetHeight / 2;\n  var targetInline = inline === 'center' ? targetLeft + targetWidth / 2 : inline === 'end' ? targetRight : targetLeft;\n  var computations = [];\n\n  for (var index = 0; index < frames.length; index++) {\n    var frame = frames[index];\n\n    var _frame$getBoundingCli = frame.getBoundingClientRect(),\n        height = _frame$getBoundingCli.height,\n        width = _frame$getBoundingCli.width,\n        top = _frame$getBoundingCli.top,\n        right = _frame$getBoundingCli.right,\n        bottom = _frame$getBoundingCli.bottom,\n        left = _frame$getBoundingCli.left;\n\n    if (scrollMode === 'if-needed' && targetTop >= 0 && targetLeft >= 0 && targetBottom <= viewportHeight && targetRight <= viewportWidth && targetTop >= top && targetBottom <= bottom && targetLeft >= left && targetRight <= right) {\n      return computations;\n    }\n\n    var frameStyle = getComputedStyle(frame);\n    var borderLeft = parseInt(frameStyle.borderLeftWidth, 10);\n    var borderTop = parseInt(frameStyle.borderTopWidth, 10);\n    var borderRight = parseInt(frameStyle.borderRightWidth, 10);\n    var borderBottom = parseInt(frameStyle.borderBottomWidth, 10);\n    var blockScroll = 0;\n    var inlineScroll = 0;\n    var scrollbarWidth = 'offsetWidth' in frame ? frame.offsetWidth - frame.clientWidth - borderLeft - borderRight : 0;\n    var scrollbarHeight = 'offsetHeight' in frame ? frame.offsetHeight - frame.clientHeight - borderTop - borderBottom : 0;\n\n    if (scrollingElement === frame) {\n      if (block === 'start') {\n        blockScroll = targetBlock;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(viewportY, viewportY + viewportHeight, viewportHeight, borderTop, borderBottom, viewportY + targetBlock, viewportY + targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - viewportHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth;\n      } else {\n        inlineScroll = alignNearest(viewportX, viewportX + viewportWidth, viewportWidth, borderLeft, borderRight, viewportX + targetInline, viewportX + targetInline + targetWidth, targetWidth);\n      }\n\n      blockScroll = Math.max(0, blockScroll + viewportY);\n      inlineScroll = Math.max(0, inlineScroll + viewportX);\n    } else {\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop;\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight;\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(top, bottom, height, borderTop, borderBottom + scrollbarHeight, targetBlock, targetBlock + targetHeight, targetHeight);\n      } else {\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2;\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft;\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2;\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth;\n      } else {\n        inlineScroll = alignNearest(left, right, width, borderLeft, borderRight + scrollbarWidth, targetInline, targetInline + targetWidth, targetWidth);\n      }\n\n      var scrollLeft = frame.scrollLeft,\n          scrollTop = frame.scrollTop;\n      blockScroll = Math.max(0, Math.min(scrollTop + blockScroll, frame.scrollHeight - height + scrollbarHeight));\n      inlineScroll = Math.max(0, Math.min(scrollLeft + inlineScroll, frame.scrollWidth - width + scrollbarWidth));\n      targetBlock += scrollTop - blockScroll;\n      targetInline += scrollLeft - inlineScroll;\n    }\n\n    computations.push({\n      el: frame,\n      top: blockScroll,\n      left: inlineScroll\n    });\n  }\n\n  return computations;\n});","import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport { cloneElement, Component, useCallback, useReducer, useRef, useEffect } from 'react';\nimport { isForwardRef } from 'react-is';\nimport computeScrollIntoView from 'compute-scroll-into-view';\n\nvar idCounter = 0;\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\n\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop;\n}\n\nfunction noop() {}\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node the element that should scroll into view\n * @param {HTMLElement} menuNode the menu element of the component\n */\n\n\nfunction scrollIntoView(node, menuNode) {\n  if (node === null) {\n    return;\n  }\n\n  var actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed'\n  });\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n        top = _ref.top,\n        left = _ref.left;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\n\n\nfunction isOrContainsNode(parent, child) {\n  return parent === child || parent.contains && parent.contains(child);\n}\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\n\n\nfunction debounce(fn, time) {\n  var timeoutId;\n\n  function cancel() {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  function wrapper() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    cancel();\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      fn.apply(void 0, args);\n    }, time);\n  }\n\n  wrapper.cancel = cancel;\n  return wrapper;\n}\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {...Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\n\n\nfunction callAllEventHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return fns.some(function (fn) {\n      if (fn) {\n        fn.apply(void 0, [event].concat(args));\n      }\n\n      return event.preventDownshiftDefault || event.hasOwnProperty('nativeEvent') && event.nativeEvent.preventDownshiftDefault;\n    });\n  };\n}\n\nfunction handleRefs() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return function (node) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\n\n\nfunction generateId() {\n  return String(idCounter++);\n}\n/**\n * Resets idCounter to 0. Used for SSR.\n */\n\n\nfunction resetIdCounter() {\n  idCounter = 0;\n}\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\n\nfunction getA11yStatusMessage(_ref2) {\n  var isOpen = _ref2.isOpen,\n      resultCount = _ref2.resultCount;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter key to select.\";\n}\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\n\n\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ?\n  /* istanbul ignore next (preact) */\n  arg[0] : arg;\n\n  if (!arg && defaultValue) {\n    return defaultValue;\n  } else {\n    return arg;\n  }\n}\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\n\n\nfunction isDOMElement(element) {\n  // then we assume this is react\n  return typeof element.type === 'string';\n}\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\n\n\nfunction getElementProps(element) {\n  return element.props;\n}\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\n\n\nfunction requiredProp(fnName, propName) {\n  // eslint-disable-next-line no-console\n  console.error(\"The property \\\"\" + propName + \"\\\" is required in \\\"\" + fnName + \"\\\"\");\n}\n\nvar stateKeys = ['highlightedIndex', 'inputValue', 'isOpen', 'selectedItem', 'type'];\n/**\n * @param {Object} state the state object\n * @return {Object} state that is relevant to downshift\n */\n\nfunction pickState(state) {\n  if (state === void 0) {\n    state = {};\n  }\n\n  var result = {};\n  stateKeys.forEach(function (k) {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k];\n    }\n  });\n  return result;\n}\n/**\n * This will perform a shallow merge of the given state object\n * with the state coming from props\n * (for the controlled component scenario)\n * This is used in state updater functions so they're referencing\n * the right state regardless of where it comes from.\n *\n * @param {Object} state The state of the component/hook.\n * @param {Object} props The props that may contain controlled values.\n * @returns {Object} The merged controlled state.\n */\n\n\nfunction getState(state, props) {\n  return Object.keys(state).reduce(function (prevState, key) {\n    prevState[key] = isControlledProp(props, key) ? props[key] : state[key];\n    return prevState;\n  }, {});\n}\n/**\n * This determines whether a prop is a \"controlled prop\" meaning it is\n * state which is controlled by the outside of this component rather\n * than within this component.\n *\n * @param {Object} props The props that may contain controlled values.\n * @param {String} key the key to check\n * @return {Boolean} whether it is a controlled controlled prop\n */\n\n\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a keyboardEvent object\n * @return {String} keyboard key\n */\n\n\nfunction normalizeArrowKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  /* istanbul ignore next (ie) */\n\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return \"Arrow\" + key;\n  }\n\n  return key;\n}\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\n\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\n\n\nfunction getNextWrappingIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  if (circular === void 0) {\n    circular = true;\n  }\n\n  var itemsLastIndex = itemCount - 1;\n\n  if (typeof baseIndex !== 'number' || baseIndex < 0 || baseIndex >= itemCount) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  var newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  var nonDisabledNewIndex = getNextNonDisabledIndex(moveAmount, newIndex, itemCount, getItemNodeFromIndex, circular);\n  return nonDisabledNewIndex === -1 ? baseIndex : nonDisabledNewIndex;\n}\n/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\n\n\nfunction getNextNonDisabledIndex(moveAmount, baseIndex, itemCount, getItemNodeFromIndex, circular) {\n  var currentElementNode = getItemNodeFromIndex(baseIndex);\n\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (var index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (var _index = baseIndex - 1; _index >= 0; _index--) {\n      if (!getItemNodeFromIndex(_index).hasAttribute('disabled')) {\n        return _index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0 ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false) : getNextNonDisabledIndex(-1, itemCount - 1, itemCount, getItemNodeFromIndex, false);\n  }\n\n  return -1;\n}\n/**\n * Checks if event target is within the downshift elements.\n *\n * @param {EventTarget} target Target to check.\n * @param {HTMLElement[]} downshiftElements The elements that form downshift (list, toggle button etc).\n * @param {Document} document The document.\n * @param {boolean} checkActiveElement Whether to also check activeElement.\n *\n * @returns {boolean} Whether or not the target is within downshift elements.\n */\n\n\nfunction targetWithinDownshift(target, downshiftElements, document, checkActiveElement) {\n  if (checkActiveElement === void 0) {\n    checkActiveElement = true;\n  }\n\n  return downshiftElements.some(function (contextNode) {\n    return contextNode && (isOrContainsNode(contextNode, target) || checkActiveElement && isOrContainsNode(contextNode, document.activeElement));\n  });\n}\n\nvar cleanupStatus = debounce(function () {\n  getStatusDiv().textContent = '';\n}, 500);\n/**\n * @param {String} status the status message\n * @param {Object} documentProp document passed by the user.\n */\n\nfunction setStatus(status, documentProp) {\n  var div = getStatusDiv(documentProp);\n\n  if (!status) {\n    return;\n  }\n\n  div.textContent = status;\n  cleanupStatus();\n}\n/**\n * Get the status node or create it if it does not already exist.\n * @param {Object} documentProp document passed by the user.\n * @return {HTMLElement} the status node.\n */\n\n\nfunction getStatusDiv(documentProp) {\n  if (documentProp === void 0) {\n    documentProp = document;\n  }\n\n  var statusDiv = documentProp.getElementById('a11y-status-message');\n\n  if (statusDiv) {\n    return statusDiv;\n  }\n\n  statusDiv = documentProp.createElement('div');\n  statusDiv.setAttribute('id', 'a11y-status-message');\n  statusDiv.setAttribute('role', 'status');\n  statusDiv.setAttribute('aria-live', 'polite');\n  statusDiv.setAttribute('aria-relevant', 'additions text');\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px'\n  });\n  documentProp.body.appendChild(statusDiv);\n  return statusDiv;\n}\n\nvar unknown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_unknown__' : 0;\nvar mouseUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_mouseup__' : 1;\nvar itemMouseEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_item_mouseenter__' : 2;\nvar keyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_up__' : 3;\nvar keyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_arrow_down__' : 4;\nvar keyDownEscape = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_escape__' : 5;\nvar keyDownEnter = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_enter__' : 6;\nvar keyDownHome = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_home__' : 7;\nvar keyDownEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_end__' : 8;\nvar clickItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_item__' : 9;\nvar blurInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_input__' : 10;\nvar changeInput = process.env.NODE_ENV !== \"production\" ? '__autocomplete_change_input__' : 11;\nvar keyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_keydown_space_button__' : 12;\nvar clickButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_click_button__' : 13;\nvar blurButton = process.env.NODE_ENV !== \"production\" ? '__autocomplete_blur_button__' : 14;\nvar controlledPropUpdatedSelectedItem = process.env.NODE_ENV !== \"production\" ? '__autocomplete_controlled_prop_updated_selected_item__' : 15;\nvar touchEnd = process.env.NODE_ENV !== \"production\" ? '__autocomplete_touchend__' : 16;\n\nvar stateChangeTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  unknown: unknown,\n  mouseUp: mouseUp,\n  itemMouseEnter: itemMouseEnter,\n  keyDownArrowUp: keyDownArrowUp,\n  keyDownArrowDown: keyDownArrowDown,\n  keyDownEscape: keyDownEscape,\n  keyDownEnter: keyDownEnter,\n  keyDownHome: keyDownHome,\n  keyDownEnd: keyDownEnd,\n  clickItem: clickItem,\n  blurInput: blurInput,\n  changeInput: changeInput,\n  keyDownSpaceButton: keyDownSpaceButton,\n  clickButton: clickButton,\n  blurButton: blurButton,\n  controlledPropUpdatedSelectedItem: controlledPropUpdatedSelectedItem,\n  touchEnd: touchEnd\n});\n\nvar Downshift =\n/*#__PURE__*/\nfunction () {\n  var Downshift =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Downshift, _Component);\n\n    function Downshift(_props) {\n      var _this = _Component.call(this, _props) || this;\n\n      _this.id = _this.props.id || \"downshift-\" + generateId();\n      _this.menuId = _this.props.menuId || _this.id + \"-menu\";\n      _this.labelId = _this.props.labelId || _this.id + \"-label\";\n      _this.inputId = _this.props.inputId || _this.id + \"-input\";\n\n      _this.getItemId = _this.props.getItemId || function (index) {\n        return _this.id + \"-item-\" + index;\n      };\n\n      _this.input = null;\n      _this.items = [];\n      _this.itemCount = null;\n      _this.previousResultCount = 0;\n      _this.timeoutIds = [];\n\n      _this.internalSetTimeout = function (fn, time) {\n        var id = setTimeout(function () {\n          _this.timeoutIds = _this.timeoutIds.filter(function (i) {\n            return i !== id;\n          });\n          fn();\n        }, time);\n\n        _this.timeoutIds.push(id);\n      };\n\n      _this.setItemCount = function (count) {\n        _this.itemCount = count;\n      };\n\n      _this.unsetItemCount = function () {\n        _this.itemCount = null;\n      };\n\n      _this.setHighlightedIndex = function (highlightedIndex, otherStateToSet) {\n        if (highlightedIndex === void 0) {\n          highlightedIndex = _this.props.defaultHighlightedIndex;\n        }\n\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          highlightedIndex: highlightedIndex\n        }, otherStateToSet));\n      };\n\n      _this.clearSelection = function (cb) {\n        _this.internalSetState({\n          selectedItem: null,\n          inputValue: '',\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          isOpen: _this.props.defaultIsOpen\n        }, cb);\n      };\n\n      _this.selectItem = function (item, otherStateToSet, cb) {\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(_extends({\n          isOpen: _this.props.defaultIsOpen,\n          highlightedIndex: _this.props.defaultHighlightedIndex,\n          selectedItem: item,\n          inputValue: _this.props.itemToString(item)\n        }, otherStateToSet), cb);\n      };\n\n      _this.selectItemAtIndex = function (itemIndex, otherStateToSet, cb) {\n        var item = _this.items[itemIndex];\n\n        if (item == null) {\n          return;\n        }\n\n        _this.selectItem(item, otherStateToSet, cb);\n      };\n\n      _this.selectHighlightedItem = function (otherStateToSet, cb) {\n        return _this.selectItemAtIndex(_this.getState().highlightedIndex, otherStateToSet, cb);\n      };\n\n      _this.internalSetState = function (stateToSet, cb) {\n        var isItemSelected, onChangeArg;\n        var onStateChangeArg = {};\n        var isStateToSetFunction = typeof stateToSet === 'function'; // we want to call `onInputValueChange` before the `setState` call\n        // so someone controlling the `inputValue` state gets notified of\n        // the input change as soon as possible. This avoids issues with\n        // preserving the cursor position.\n        // See https://github.com/downshift-js/downshift/issues/217 for more info.\n\n        if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          _this.props.onInputValueChange(stateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), {}, stateToSet));\n        }\n\n        return _this.setState(function (state) {\n          state = _this.getState(state);\n          var newStateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet; // Your own function that could modify the state that will be set.\n\n          newStateToSet = _this.props.stateReducer(state, newStateToSet); // checks if an item is selected, regardless of if it's different from\n          // what was selected before\n          // used to determine if onSelect and onChange callbacks should be called\n\n          isItemSelected = newStateToSet.hasOwnProperty('selectedItem'); // this keeps track of the object we want to call with setState\n\n          var nextState = {}; // this is just used to tell whether the state changed\n\n          var nextFullState = {}; // we need to call on change if the outside world is controlling any of our state\n          // and we're trying to update that state. OR if the selection has changed and we're\n          // trying to update the selection\n\n          if (isItemSelected && newStateToSet.selectedItem !== state.selectedItem) {\n            onChangeArg = newStateToSet.selectedItem;\n          }\n\n          newStateToSet.type = newStateToSet.type || unknown;\n          Object.keys(newStateToSet).forEach(function (key) {\n            // onStateChangeArg should only have the state that is\n            // actually changing\n            if (state[key] !== newStateToSet[key]) {\n              onStateChangeArg[key] = newStateToSet[key];\n            } // the type is useful for the onStateChangeArg\n            // but we don't actually want to set it in internal state.\n            // this is an undocumented feature for now... Not all internalSetState\n            // calls support it and I'm not certain we want them to yet.\n            // But it enables users controlling the isOpen state to know when\n            // the isOpen state changes due to mouseup events which is quite handy.\n\n\n            if (key === 'type') {\n              return;\n            }\n\n            nextFullState[key] = newStateToSet[key]; // if it's coming from props, then we don't care to set it internally\n\n            if (!isControlledProp(_this.props, key)) {\n              nextState[key] = newStateToSet[key];\n            }\n          }); // if stateToSet is a function, then we weren't able to call onInputValueChange\n          // earlier, so we'll call it now that we know what the inputValue state will be.\n\n          if (isStateToSetFunction && newStateToSet.hasOwnProperty('inputValue')) {\n            _this.props.onInputValueChange(newStateToSet.inputValue, _extends({}, _this.getStateAndHelpers(), {}, newStateToSet));\n          }\n\n          return nextState;\n        }, function () {\n          // call the provided callback if it's a function\n          cbToCb(cb)(); // only call the onStateChange and onChange callbacks if\n          // we have relevant information to pass them.\n\n          var hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1;\n\n          if (hasMoreStateThanType) {\n            _this.props.onStateChange(onStateChangeArg, _this.getStateAndHelpers());\n          }\n\n          if (isItemSelected) {\n            _this.props.onSelect(stateToSet.selectedItem, _this.getStateAndHelpers());\n          }\n\n          if (onChangeArg !== undefined) {\n            _this.props.onChange(onChangeArg, _this.getStateAndHelpers());\n          } // this is currently undocumented and therefore subject to change\n          // We'll try to not break it, but just be warned.\n\n\n          _this.props.onUserAction(onStateChangeArg, _this.getStateAndHelpers());\n        });\n      };\n\n      _this.rootRef = function (node) {\n        return _this._rootNode = node;\n      };\n\n      _this.getRootProps = function (_ref, _temp) {\n        var _extends2;\n\n        if (_ref === void 0) {\n          _ref = {};\n        }\n\n        var _ref2 = _temp === void 0 ? {} : _temp,\n            _ref2$suppressRefErro = _ref2.suppressRefError,\n            suppressRefError = _ref2$suppressRefErro === void 0 ? false : _ref2$suppressRefErro;\n\n        var _ref3 = _ref,\n            _ref3$refKey = _ref3.refKey,\n            refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,\n            ref = _ref3.ref,\n            rest = _objectWithoutPropertiesLoose(_ref3, [\"refKey\", \"ref\"]);\n\n        // this is used in the render to know whether the user has called getRootProps.\n        // It uses that to know whether to apply the props automatically\n        _this.getRootProps.called = true;\n        _this.getRootProps.refKey = refKey;\n        _this.getRootProps.suppressRefError = suppressRefError;\n\n        var _this$getState = _this.getState(),\n            isOpen = _this$getState.isOpen;\n\n        return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, _this.rootRef), _extends2.role = 'combobox', _extends2['aria-expanded'] = isOpen, _extends2['aria-haspopup'] = 'listbox', _extends2['aria-owns'] = isOpen ? _this.menuId : null, _extends2['aria-labelledby'] = _this.labelId, _extends2), rest);\n      };\n\n      _this.keyDownHandlers = {\n        ArrowDown: function ArrowDown(event) {\n          var _this2 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? 5 : 1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowDown\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowDown\n            }, function () {\n              var itemCount = _this2.getItemCount();\n\n              if (itemCount > 0) {\n                var _this2$getState = _this2.getState(),\n                    highlightedIndex = _this2$getState.highlightedIndex;\n\n                var nextHighlightedIndex = getNextWrappingIndex(1, highlightedIndex, itemCount, function (index) {\n                  return _this2.getItemNodeFromIndex(index);\n                });\n\n                _this2.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowDown\n                });\n              }\n            });\n          }\n        },\n        ArrowUp: function ArrowUp(event) {\n          var _this3 = this;\n\n          event.preventDefault();\n\n          if (this.getState().isOpen) {\n            var amount = event.shiftKey ? -5 : -1;\n            this.moveHighlightedIndex(amount, {\n              type: keyDownArrowUp\n            });\n          } else {\n            this.internalSetState({\n              isOpen: true,\n              type: keyDownArrowUp\n            }, function () {\n              var itemCount = _this3.getItemCount();\n\n              if (itemCount > 0) {\n                var _this3$getState = _this3.getState(),\n                    highlightedIndex = _this3$getState.highlightedIndex;\n\n                var nextHighlightedIndex = getNextWrappingIndex(-1, highlightedIndex, itemCount, function (index) {\n                  return _this3.getItemNodeFromIndex(index);\n                });\n\n                _this3.setHighlightedIndex(nextHighlightedIndex, {\n                  type: keyDownArrowUp\n                });\n              }\n            });\n          }\n        },\n        Enter: function Enter(event) {\n          var _this$getState2 = this.getState(),\n              isOpen = _this$getState2.isOpen,\n              highlightedIndex = _this$getState2.highlightedIndex;\n\n          if (isOpen && highlightedIndex != null) {\n            event.preventDefault();\n            var item = this.items[highlightedIndex];\n            var itemNode = this.getItemNodeFromIndex(highlightedIndex);\n\n            if (item == null || itemNode && itemNode.hasAttribute('disabled')) {\n              return;\n            }\n\n            this.selectHighlightedItem({\n              type: keyDownEnter\n            });\n          }\n        },\n        Escape: function Escape(event) {\n          event.preventDefault();\n          this.reset({\n            type: keyDownEscape,\n            selectedItem: null,\n            inputValue: ''\n          });\n        }\n      };\n      _this.buttonKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        ' ': function _(event) {\n          event.preventDefault();\n          this.toggleMenu({\n            type: keyDownSpaceButton\n          });\n        }\n      });\n      _this.inputKeyDownHandlers = _extends({}, _this.keyDownHandlers, {\n        Home: function Home(event) {\n          var _this4 = this;\n\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n\n          var _this$getState3 = this.getState(),\n              isOpen = _this$getState3.isOpen;\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting downwards from 0 if that's disabled.\n\n\n          var newHighlightedIndex = getNextNonDisabledIndex(1, 0, itemCount, function (index) {\n            return _this4.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownHome\n          });\n        },\n        End: function End(event) {\n          var _this5 = this;\n\n          event.preventDefault();\n          var itemCount = this.getItemCount();\n\n          var _this$getState4 = this.getState(),\n              isOpen = _this$getState4.isOpen;\n\n          if (itemCount <= 0 || !isOpen) {\n            return;\n          } // get next non-disabled starting upwards from last index if that's disabled.\n\n\n          var newHighlightedIndex = getNextNonDisabledIndex(-1, itemCount - 1, itemCount, function (index) {\n            return _this5.getItemNodeFromIndex(index);\n          }, false);\n          this.setHighlightedIndex(newHighlightedIndex, {\n            type: keyDownEnd\n          });\n        }\n      });\n\n      _this.getToggleButtonProps = function (_ref4) {\n        if (_ref4 === void 0) {\n          _ref4 = {};\n        }\n\n        var _ref5 = _ref4,\n            onClick = _ref5.onClick,\n            onPress = _ref5.onPress,\n            onKeyDown = _ref5.onKeyDown,\n            onKeyUp = _ref5.onKeyUp,\n            onBlur = _ref5.onBlur,\n            rest = _objectWithoutPropertiesLoose(_ref5, [\"onClick\", \"onPress\", \"onKeyDown\", \"onKeyUp\", \"onBlur\"]);\n\n        var _this$getState5 = _this.getState(),\n            isOpen = _this$getState5.isOpen;\n\n        var enabledEventHandlers = {\n          onClick: callAllEventHandlers(onClick, _this.buttonHandleClick),\n          onKeyDown: callAllEventHandlers(onKeyDown, _this.buttonHandleKeyDown),\n          onKeyUp: callAllEventHandlers(onKeyUp, _this.buttonHandleKeyUp),\n          onBlur: callAllEventHandlers(onBlur, _this.buttonHandleBlur)\n        };\n        var eventHandlers = rest.disabled ? {} : enabledEventHandlers;\n        return _extends({\n          type: 'button',\n          role: 'button',\n          'aria-label': isOpen ? 'close menu' : 'open menu',\n          'aria-haspopup': true,\n          'data-toggle': true\n        }, eventHandlers, {}, rest);\n      };\n\n      _this.buttonHandleKeyUp = function (event) {\n        // Prevent click event from emitting in Firefox\n        event.preventDefault();\n      };\n\n      _this.buttonHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (_this.buttonKeyDownHandlers[key]) {\n          _this.buttonKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.buttonHandleClick = function (event) {\n        event.preventDefault(); // handle odd case for Safari and Firefox which\n        // don't give the button the focus properly.\n\n        /* istanbul ignore if (can't reasonably test this) */\n\n        if ( _this.props.environment.document.activeElement === _this.props.environment.document.body) {\n          event.target.focus();\n        } // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n        // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n        // when building for production and should therefore have no impact on production code.\n\n\n        if (process.env.NODE_ENV === 'test') {\n          _this.toggleMenu({\n            type: clickButton\n          });\n        } else {\n          // Ensure that toggle of menu occurs after the potential blur event in iOS\n          _this.internalSetTimeout(function () {\n            return _this.toggleMenu({\n              type: clickButton\n            });\n          });\n        }\n      };\n\n      _this.buttonHandleBlur = function (event) {\n        var blurTarget = event.target; // Save blur target for comparison with activeElement later\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n\n        _this.internalSetTimeout(function () {\n          if (!_this.isMouseDown && (_this.props.environment.document.activeElement == null || _this.props.environment.document.activeElement.id !== _this.inputId) && _this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n          ) {\n              _this.reset({\n                type: blurButton\n              });\n            }\n        });\n      };\n\n      _this.getLabelProps = function (props) {\n        return _extends({\n          htmlFor: _this.inputId,\n          id: _this.labelId\n        }, props);\n      };\n\n      _this.getInputProps = function (_ref6) {\n        if (_ref6 === void 0) {\n          _ref6 = {};\n        }\n\n        var _ref7 = _ref6,\n            onKeyDown = _ref7.onKeyDown,\n            onBlur = _ref7.onBlur,\n            onChange = _ref7.onChange,\n            onInput = _ref7.onInput,\n            onChangeText = _ref7.onChangeText,\n            rest = _objectWithoutPropertiesLoose(_ref7, [\"onKeyDown\", \"onBlur\", \"onChange\", \"onInput\", \"onChangeText\"]);\n\n        var onChangeKey;\n        var eventHandlers = {};\n        /* istanbul ignore next (preact) */\n\n        onChangeKey = 'onChange';\n\n        var _this$getState6 = _this.getState(),\n            inputValue = _this$getState6.inputValue,\n            isOpen = _this$getState6.isOpen,\n            highlightedIndex = _this$getState6.highlightedIndex;\n\n        if (!rest.disabled) {\n          var _eventHandlers;\n\n          eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, _this.inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, _this.inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, _this.inputHandleBlur), _eventHandlers);\n        }\n        /* istanbul ignore if (react-native) */\n\n\n        return _extends({\n          'aria-autocomplete': 'list',\n          'aria-activedescendant': isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0 ? _this.getItemId(highlightedIndex) : null,\n          'aria-controls': isOpen ? _this.menuId : null,\n          'aria-labelledby': _this.labelId,\n          // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n          // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n          autoComplete: 'off',\n          value: inputValue,\n          id: _this.inputId\n        }, eventHandlers, {}, rest);\n      };\n\n      _this.inputHandleKeyDown = function (event) {\n        var key = normalizeArrowKey(event);\n\n        if (key && _this.inputKeyDownHandlers[key]) {\n          _this.inputKeyDownHandlers[key].call(_assertThisInitialized(_this), event);\n        }\n      };\n\n      _this.inputHandleChange = function (event) {\n        _this.internalSetState({\n          type: changeInput,\n          isOpen: true,\n          inputValue: event.target.value,\n          highlightedIndex: _this.props.defaultHighlightedIndex\n        });\n      };\n\n      _this.inputHandleBlur = function () {\n        // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n        _this.internalSetTimeout(function () {\n          var downshiftButtonIsActive = _this.props.environment.document && !!_this.props.environment.document.activeElement && !!_this.props.environment.document.activeElement.dataset && _this.props.environment.document.activeElement.dataset.toggle && _this._rootNode && _this._rootNode.contains(_this.props.environment.document.activeElement);\n\n          if (!_this.isMouseDown && !downshiftButtonIsActive) {\n            _this.reset({\n              type: blurInput\n            });\n          }\n        });\n      };\n\n      _this.menuRef = function (node) {\n        _this._menuNode = node;\n      };\n\n      _this.getMenuProps = function (_ref8, _temp2) {\n        var _extends3;\n\n        if (_ref8 === void 0) {\n          _ref8 = {};\n        }\n\n        var _ref9 = _temp2 === void 0 ? {} : _temp2,\n            _ref9$suppressRefErro = _ref9.suppressRefError,\n            suppressRefError = _ref9$suppressRefErro === void 0 ? false : _ref9$suppressRefErro;\n\n        var _ref10 = _ref8,\n            _ref10$refKey = _ref10.refKey,\n            refKey = _ref10$refKey === void 0 ? 'ref' : _ref10$refKey,\n            ref = _ref10.ref,\n            props = _objectWithoutPropertiesLoose(_ref10, [\"refKey\", \"ref\"]);\n\n        _this.getMenuProps.called = true;\n        _this.getMenuProps.refKey = refKey;\n        _this.getMenuProps.suppressRefError = suppressRefError;\n        return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, _this.menuRef), _extends3.role = 'listbox', _extends3['aria-labelledby'] = props && props['aria-label'] ? null : _this.labelId, _extends3.id = _this.menuId, _extends3), props);\n      };\n\n      _this.getItemProps = function (_ref11) {\n        var _enabledEventHandlers;\n\n        if (_ref11 === void 0) {\n          _ref11 = {};\n        }\n\n        var _ref12 = _ref11,\n            onMouseMove = _ref12.onMouseMove,\n            onMouseDown = _ref12.onMouseDown,\n            onClick = _ref12.onClick,\n            onPress = _ref12.onPress,\n            index = _ref12.index,\n            _ref12$item = _ref12.item,\n            item = _ref12$item === void 0 ? process.env.NODE_ENV === 'production' ?\n        /* istanbul ignore next */\n        undefined : requiredProp('getItemProps', 'item') : _ref12$item,\n            rest = _objectWithoutPropertiesLoose(_ref12, [\"onMouseMove\", \"onMouseDown\", \"onClick\", \"onPress\", \"index\", \"item\"]);\n\n        if (index === undefined) {\n          _this.items.push(item);\n\n          index = _this.items.indexOf(item);\n        } else {\n          _this.items[index] = item;\n        }\n\n        var onSelectKey = 'onClick';\n        var customClickHandler = onClick;\n        var enabledEventHandlers = (_enabledEventHandlers = {\n          // onMouseMove is used over onMouseEnter here. onMouseMove\n          // is only triggered on actual mouse movement while onMouseEnter\n          // can fire on DOM changes, interrupting keyboard navigation\n          onMouseMove: callAllEventHandlers(onMouseMove, function () {\n            if (index === _this.getState().highlightedIndex) {\n              return;\n            }\n\n            _this.setHighlightedIndex(index, {\n              type: itemMouseEnter\n            }); // We never want to manually scroll when changing state based\n            // on `onMouseMove` because we will be moving the element out\n            // from under the user which is currently scrolling/moving the\n            // cursor\n\n\n            _this.avoidScrolling = true;\n\n            _this.internalSetTimeout(function () {\n              return _this.avoidScrolling = false;\n            }, 250);\n          }),\n          onMouseDown: callAllEventHandlers(onMouseDown, function (event) {\n            // This prevents the activeElement from being changed\n            // to the item so it can remain with the current activeElement\n            // which is a more common use case.\n            event.preventDefault();\n          })\n        }, _enabledEventHandlers[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n          _this.selectItemAtIndex(index, {\n            type: clickItem\n          });\n        }), _enabledEventHandlers); // Passing down the onMouseDown handler to prevent redirect\n        // of the activeElement if clicking on disabled items\n\n        var eventHandlers = rest.disabled ? {\n          onMouseDown: enabledEventHandlers.onMouseDown\n        } : enabledEventHandlers;\n        return _extends({\n          id: _this.getItemId(index),\n          role: 'option',\n          'aria-selected': _this.getState().highlightedIndex === index\n        }, eventHandlers, {}, rest);\n      };\n\n      _this.clearItems = function () {\n        _this.items = [];\n      };\n\n      _this.reset = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref13) {\n          var selectedItem = _ref13.selectedItem;\n          return _extends({\n            isOpen: _this.props.defaultIsOpen,\n            highlightedIndex: _this.props.defaultHighlightedIndex,\n            inputValue: _this.props.itemToString(selectedItem)\n          }, otherStateToSet);\n        }, cb);\n      };\n\n      _this.toggleMenu = function (otherStateToSet, cb) {\n        if (otherStateToSet === void 0) {\n          otherStateToSet = {};\n        }\n\n        otherStateToSet = pickState(otherStateToSet);\n\n        _this.internalSetState(function (_ref14) {\n          var isOpen = _ref14.isOpen;\n          return _extends({\n            isOpen: !isOpen\n          }, isOpen && {\n            highlightedIndex: _this.props.defaultHighlightedIndex\n          }, {}, otherStateToSet);\n        }, function () {\n          var _this$getState7 = _this.getState(),\n              isOpen = _this$getState7.isOpen,\n              highlightedIndex = _this$getState7.highlightedIndex;\n\n          if (isOpen) {\n            if (_this.getItemCount() > 0 && typeof highlightedIndex === 'number') {\n              _this.setHighlightedIndex(highlightedIndex, otherStateToSet);\n            }\n          }\n\n          cbToCb(cb)();\n        });\n      };\n\n      _this.openMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: true\n        }, cb);\n      };\n\n      _this.closeMenu = function (cb) {\n        _this.internalSetState({\n          isOpen: false\n        }, cb);\n      };\n\n      _this.updateStatus = debounce(function () {\n        var state = _this.getState();\n\n        var item = _this.items[state.highlightedIndex];\n\n        var resultCount = _this.getItemCount();\n\n        var status = _this.props.getA11yStatusMessage(_extends({\n          itemToString: _this.props.itemToString,\n          previousResultCount: _this.previousResultCount,\n          resultCount: resultCount,\n          highlightedItem: item\n        }, state));\n\n        _this.previousResultCount = resultCount;\n        setStatus(status, _this.props.environment.document);\n      }, 200);\n\n      // fancy destructuring + defaults + aliases\n      // this basically says each value of state should either be set to\n      // the initial value or the default value if the initial value is not provided\n      var _this$props = _this.props,\n          defaultHighlightedIndex = _this$props.defaultHighlightedIndex,\n          _this$props$initialHi = _this$props.initialHighlightedIndex,\n          _highlightedIndex = _this$props$initialHi === void 0 ? defaultHighlightedIndex : _this$props$initialHi,\n          defaultIsOpen = _this$props.defaultIsOpen,\n          _this$props$initialIs = _this$props.initialIsOpen,\n          _isOpen = _this$props$initialIs === void 0 ? defaultIsOpen : _this$props$initialIs,\n          _this$props$initialIn = _this$props.initialInputValue,\n          _inputValue = _this$props$initialIn === void 0 ? '' : _this$props$initialIn,\n          _this$props$initialSe = _this$props.initialSelectedItem,\n          _selectedItem = _this$props$initialSe === void 0 ? null : _this$props$initialSe;\n\n      var _state = _this.getState({\n        highlightedIndex: _highlightedIndex,\n        isOpen: _isOpen,\n        inputValue: _inputValue,\n        selectedItem: _selectedItem\n      });\n\n      if (_state.selectedItem != null && _this.props.initialInputValue === undefined) {\n        _state.inputValue = _this.props.itemToString(_state.selectedItem);\n      }\n\n      _this.state = _state;\n      return _this;\n    }\n\n    var _proto = Downshift.prototype;\n\n    /**\n     * Clear all running timeouts\n     */\n    _proto.internalClearTimeouts = function internalClearTimeouts() {\n      this.timeoutIds.forEach(function (id) {\n        clearTimeout(id);\n      });\n      this.timeoutIds = [];\n    }\n    /**\n     * Gets the state based on internal state or props\n     * If a state value is passed via props, then that\n     * is the value given, otherwise it's retrieved from\n     * stateToMerge\n     *\n     * @param {Object} stateToMerge defaults to this.state\n     * @return {Object} the state\n     */\n    ;\n\n    _proto.getState = function getState$1(stateToMerge) {\n      if (stateToMerge === void 0) {\n        stateToMerge = this.state;\n      }\n\n      return getState(stateToMerge, this.props);\n    };\n\n    _proto.getItemCount = function getItemCount() {\n      // things read better this way. They're in priority order:\n      // 1. `this.itemCount`\n      // 2. `this.props.itemCount`\n      // 3. `this.items.length`\n      var itemCount = this.items.length;\n\n      if (this.itemCount != null) {\n        itemCount = this.itemCount;\n      } else if (this.props.itemCount !== undefined) {\n        itemCount = this.props.itemCount;\n      }\n\n      return itemCount;\n    };\n\n    _proto.getItemNodeFromIndex = function getItemNodeFromIndex(index) {\n      return this.props.environment.document.getElementById(this.getItemId(index));\n    };\n\n    _proto.scrollHighlightedItemIntoView = function scrollHighlightedItemIntoView() {\n      /* istanbul ignore else (react-native) */\n      {\n        var node = this.getItemNodeFromIndex(this.getState().highlightedIndex);\n        this.props.scrollIntoView(node, this._menuNode);\n      }\n    };\n\n    _proto.moveHighlightedIndex = function moveHighlightedIndex(amount, otherStateToSet) {\n      var _this6 = this;\n\n      var itemCount = this.getItemCount();\n\n      var _this$getState8 = this.getState(),\n          highlightedIndex = _this$getState8.highlightedIndex;\n\n      if (itemCount > 0) {\n        var nextHighlightedIndex = getNextWrappingIndex(amount, highlightedIndex, itemCount, function (index) {\n          return _this6.getItemNodeFromIndex(index);\n        });\n        this.setHighlightedIndex(nextHighlightedIndex, otherStateToSet);\n      }\n    };\n\n    _proto.getStateAndHelpers = function getStateAndHelpers() {\n      var _this$getState9 = this.getState(),\n          highlightedIndex = _this$getState9.highlightedIndex,\n          inputValue = _this$getState9.inputValue,\n          selectedItem = _this$getState9.selectedItem,\n          isOpen = _this$getState9.isOpen;\n\n      var itemToString = this.props.itemToString;\n      var id = this.id;\n      var getRootProps = this.getRootProps,\n          getToggleButtonProps = this.getToggleButtonProps,\n          getLabelProps = this.getLabelProps,\n          getMenuProps = this.getMenuProps,\n          getInputProps = this.getInputProps,\n          getItemProps = this.getItemProps,\n          openMenu = this.openMenu,\n          closeMenu = this.closeMenu,\n          toggleMenu = this.toggleMenu,\n          selectItem = this.selectItem,\n          selectItemAtIndex = this.selectItemAtIndex,\n          selectHighlightedItem = this.selectHighlightedItem,\n          setHighlightedIndex = this.setHighlightedIndex,\n          clearSelection = this.clearSelection,\n          clearItems = this.clearItems,\n          reset = this.reset,\n          setItemCount = this.setItemCount,\n          unsetItemCount = this.unsetItemCount,\n          setState = this.internalSetState;\n      return {\n        // prop getters\n        getRootProps: getRootProps,\n        getToggleButtonProps: getToggleButtonProps,\n        getLabelProps: getLabelProps,\n        getMenuProps: getMenuProps,\n        getInputProps: getInputProps,\n        getItemProps: getItemProps,\n        // actions\n        reset: reset,\n        openMenu: openMenu,\n        closeMenu: closeMenu,\n        toggleMenu: toggleMenu,\n        selectItem: selectItem,\n        selectItemAtIndex: selectItemAtIndex,\n        selectHighlightedItem: selectHighlightedItem,\n        setHighlightedIndex: setHighlightedIndex,\n        clearSelection: clearSelection,\n        clearItems: clearItems,\n        setItemCount: setItemCount,\n        unsetItemCount: unsetItemCount,\n        setState: setState,\n        // props\n        itemToString: itemToString,\n        // derived\n        id: id,\n        // state\n        highlightedIndex: highlightedIndex,\n        inputValue: inputValue,\n        isOpen: isOpen,\n        selectedItem: selectedItem\n      };\n    } //////////////////////////// ROOT\n    ;\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this7 = this;\n\n      /* istanbul ignore if (react-native) */\n      if (process.env.NODE_ENV !== 'production' && !false && this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n        validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      {\n        // this.isMouseDown helps us track whether the mouse is currently held down.\n        // This is useful when the user clicks on an item in the list, but holds the mouse\n        // down long enough for the list to disappear (because the blur event fires on the input)\n        // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n        // trigger hiding the menu.\n        var onMouseDown = function () {\n          _this7.isMouseDown = true;\n        };\n\n        var onMouseUp = function (event) {\n          _this7.isMouseDown = false; // if the target element or the activeElement is within a downshift node\n          // then we don't want to reset downshift\n\n          var contextWithinDownshift = targetWithinDownshift(event.target, [_this7._rootNode, _this7._menuNode], _this7.props.environment.document);\n\n          if (!contextWithinDownshift && _this7.getState().isOpen) {\n            _this7.reset({\n              type: mouseUp\n            }, function () {\n              return _this7.props.onOuterClick(_this7.getStateAndHelpers());\n            });\n          }\n        }; // Touching an element in iOS gives focus and hover states, but touching out of\n        // the element will remove hover, and persist the focus state, resulting in the\n        // blur event not being triggered.\n        // this.isTouchMove helps us track whether the user is tapping or swiping on a touch screen.\n        // If the user taps outside of Downshift, the component should be reset,\n        // but not if the user is swiping\n\n\n        var onTouchStart = function () {\n          _this7.isTouchMove = false;\n        };\n\n        var onTouchMove = function () {\n          _this7.isTouchMove = true;\n        };\n\n        var onTouchEnd = function (event) {\n          var contextWithinDownshift = targetWithinDownshift(event.target, [_this7._rootNode, _this7._menuNode], _this7.props.environment.document, false);\n\n          if (!_this7.isTouchMove && !contextWithinDownshift && _this7.getState().isOpen) {\n            _this7.reset({\n              type: touchEnd\n            }, function () {\n              return _this7.props.onOuterClick(_this7.getStateAndHelpers());\n            });\n          }\n        };\n\n        var environment = this.props.environment;\n        environment.addEventListener('mousedown', onMouseDown);\n        environment.addEventListener('mouseup', onMouseUp);\n        environment.addEventListener('touchstart', onTouchStart);\n        environment.addEventListener('touchmove', onTouchMove);\n        environment.addEventListener('touchend', onTouchEnd);\n\n        this.cleanup = function () {\n          _this7.internalClearTimeouts();\n\n          _this7.updateStatus.cancel();\n\n          environment.removeEventListener('mousedown', onMouseDown);\n          environment.removeEventListener('mouseup', onMouseUp);\n          environment.removeEventListener('touchstart', onTouchStart);\n          environment.removeEventListener('touchmove', onTouchMove);\n          environment.removeEventListener('touchend', onTouchEnd);\n        };\n      }\n    };\n\n    _proto.shouldScroll = function shouldScroll(prevState, prevProps) {\n      var _ref15 = this.props.highlightedIndex === undefined ? this.getState() : this.props,\n          currentHighlightedIndex = _ref15.highlightedIndex;\n\n      var _ref16 = prevProps.highlightedIndex === undefined ? prevState : prevProps,\n          prevHighlightedIndex = _ref16.highlightedIndex;\n\n      var scrollWhenOpen = currentHighlightedIndex && this.getState().isOpen && !prevState.isOpen;\n      return scrollWhenOpen || currentHighlightedIndex !== prevHighlightedIndex;\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateControlledUnchanged(prevProps, this.props);\n        /* istanbul ignore if (react-native) */\n\n        if ( this.getMenuProps.called && !this.getMenuProps.suppressRefError) {\n          validateGetMenuPropsCalledCorrectly(this._menuNode, this.getMenuProps);\n        }\n      }\n\n      if (isControlledProp(this.props, 'selectedItem') && this.props.selectedItemChanged(prevProps.selectedItem, this.props.selectedItem)) {\n        this.internalSetState({\n          type: controlledPropUpdatedSelectedItem,\n          inputValue: this.props.itemToString(this.props.selectedItem)\n        });\n      }\n\n      if (!this.avoidScrolling && this.shouldScroll(prevState, prevProps)) {\n        this.scrollHighlightedItemIntoView();\n      }\n      /* istanbul ignore else (react-native) */\n\n\n      this.updateStatus();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      this.cleanup(); // avoids memory leak\n    };\n\n    _proto.render = function render() {\n      var children = unwrapArray(this.props.children, noop); // because the items are rerendered every time we call the children\n      // we clear this out each render and it will be populated again as\n      // getItemProps is called.\n\n      this.clearItems(); // we reset this so we know whether the user calls getRootProps during\n      // this render. If they do then we don't need to do anything,\n      // if they don't then we need to clone the element they return and\n      // apply the props for them.\n\n      this.getRootProps.called = false;\n      this.getRootProps.refKey = undefined;\n      this.getRootProps.suppressRefError = undefined; // we do something similar for getMenuProps\n\n      this.getMenuProps.called = false;\n      this.getMenuProps.refKey = undefined;\n      this.getMenuProps.suppressRefError = undefined; // we do something similar for getLabelProps\n\n      this.getLabelProps.called = false; // and something similar for getInputProps\n\n      this.getInputProps.called = false;\n      var element = unwrapArray(children(this.getStateAndHelpers()));\n\n      if (!element) {\n        return null;\n      }\n\n      if (this.getRootProps.called || this.props.suppressRefError) {\n        if (process.env.NODE_ENV !== 'production' && !this.getRootProps.suppressRefError && !this.props.suppressRefError) {\n          validateGetRootPropsCalledCorrectly(element, this.getRootProps);\n        }\n\n        return element;\n      } else if (isDOMElement(element)) {\n        // they didn't apply the root props, but we can clone\n        // this and apply the props ourselves\n        return cloneElement(element, this.getRootProps(getElementProps(element)));\n      }\n      /* istanbul ignore else */\n\n\n      if (process.env.NODE_ENV !== 'production') {\n        // they didn't apply the root props, but they need to\n        // otherwise we can't query around the autocomplete\n        throw new Error('downshift: If you return a non-DOM element, you must apply the getRootProps function');\n      }\n      /* istanbul ignore next */\n\n\n      return undefined;\n    };\n\n    return Downshift;\n  }(Component);\n\n  Downshift.defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultIsOpen: false,\n    getA11yStatusMessage: getA11yStatusMessage,\n    itemToString: function itemToString(i) {\n      if (i == null) {\n        return '';\n      }\n\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i) && !i.hasOwnProperty('toString')) {\n        // eslint-disable-next-line no-console\n        console.warn('downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.', 'The object that was passed:', i);\n      }\n\n      return String(i);\n    },\n    onStateChange: noop,\n    onInputValueChange: noop,\n    onUserAction: noop,\n    onChange: noop,\n    onSelect: noop,\n    onOuterClick: noop,\n    selectedItemChanged: function selectedItemChanged(prevItem, item) {\n      return prevItem !== item;\n    },\n    environment: typeof window === 'undefined'\n    /* istanbul ignore next (ssr) */\n    ? {} : window,\n    stateReducer: function stateReducer(state, stateToSet) {\n      return stateToSet;\n    },\n    suppressRefError: false,\n    scrollIntoView: scrollIntoView\n  };\n  Downshift.stateChangeTypes = stateChangeTypes;\n  return Downshift;\n}();\n\nprocess.env.NODE_ENV !== \"production\" ? Downshift.propTypes = {\n  children: PropTypes.func,\n  defaultHighlightedIndex: PropTypes.number,\n  defaultIsOpen: PropTypes.bool,\n  initialHighlightedIndex: PropTypes.number,\n  initialSelectedItem: PropTypes.any,\n  initialInputValue: PropTypes.string,\n  initialIsOpen: PropTypes.bool,\n  getA11yStatusMessage: PropTypes.func,\n  itemToString: PropTypes.func,\n  onChange: PropTypes.func,\n  onSelect: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  onUserAction: PropTypes.func,\n  onOuterClick: PropTypes.func,\n  selectedItemChanged: PropTypes.func,\n  stateReducer: PropTypes.func,\n  itemCount: PropTypes.number,\n  id: PropTypes.string,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  }),\n  suppressRefError: PropTypes.bool,\n  scrollIntoView: PropTypes.func,\n  // things we keep in state for uncontrolled components\n  // but can accept as props for controlled components\n\n  /* eslint-disable react/no-unused-prop-types */\n  selectedItem: PropTypes.any,\n  isOpen: PropTypes.bool,\n  inputValue: PropTypes.string,\n  highlightedIndex: PropTypes.number,\n  labelId: PropTypes.string,\n  inputId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func\n  /* eslint-enable react/no-unused-prop-types */\n\n} : void 0;\n\nfunction validateGetMenuPropsCalledCorrectly(node, _ref17) {\n  var refKey = _ref17.refKey;\n\n  if (!node) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: The ref prop \\\"\" + refKey + \"\\\" from getMenuProps was not applied correctly on your menu element.\");\n  }\n}\n\nfunction validateGetRootPropsCalledCorrectly(element, _ref18) {\n  var refKey = _ref18.refKey;\n  var refKeySpecified = refKey !== 'ref';\n  var isComposite = !isDOMElement(element);\n\n  if (isComposite && !refKeySpecified && !isForwardRef(element)) {\n    // eslint-disable-next-line no-console\n    console.error('downshift: You returned a non-DOM element. You must specify a refKey in getRootProps');\n  } else if (!isComposite && refKeySpecified) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \\\"\" + refKey + \"\\\"\");\n  }\n\n  if (!isForwardRef(element) && !getElementProps(element)[refKey]) {\n    // eslint-disable-next-line no-console\n    console.error(\"downshift: You must apply the ref prop \\\"\" + refKey + \"\\\" from getRootProps onto your root element.\");\n  }\n}\n\nfunction validateControlledUnchanged(prevProps, nextProps) {\n  var warningDescription = \"This prop should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled Downshift element for the lifetime of the component. More info: https://github.com/downshift-js/downshift#control-props\";\n  ['selectedItem', 'isOpen', 'inputValue', 'highlightedIndex'].forEach(function (propKey) {\n    if (prevProps[propKey] !== undefined && nextProps[propKey] === undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the controlled prop \\\"\" + propKey + \"\\\" to be uncontrolled. \" + warningDescription);\n    } else if (prevProps[propKey] === undefined && nextProps[propKey] !== undefined) {\n      // eslint-disable-next-line no-console\n      console.error(\"downshift: A component has changed the uncontrolled prop \\\"\" + propKey + \"\\\" to be controlled. \" + warningDescription);\n    }\n  });\n}\n\nvar defaultStateValues = {\n  highlightedIndex: -1,\n  isOpen: false,\n  selectedItem: null,\n  inputValue: ''\n};\n\nfunction getElementIds(_ref) {\n  var id = _ref.id,\n      labelId = _ref.labelId,\n      menuId = _ref.menuId,\n      getItemId = _ref.getItemId,\n      toggleButtonId = _ref.toggleButtonId;\n  var uniqueId = id === undefined ? \"downshift-\" + generateId() : id;\n  return {\n    labelId: labelId || uniqueId + \"-label\",\n    menuId: menuId || uniqueId + \"-menu\",\n    getItemId: getItemId || function (index) {\n      return uniqueId + \"-item-\" + index;\n    },\n    toggleButtonId: toggleButtonId || uniqueId + \"-toggle-button\"\n  };\n}\n\nfunction getItemIndex(index, item, items) {\n  if (index !== undefined) {\n    return index;\n  }\n\n  if (items.length === 0) {\n    return -1;\n  }\n\n  return items.indexOf(item);\n}\n\nfunction itemToString(item) {\n  return item ? String(item) : '';\n}\n\nfunction getPropTypesValidator(caller, propTypes) {\n  // istanbul ignore next\n  return function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    Object.entries(propTypes).forEach(function (_ref2) {\n      var key = _ref2[0];\n      PropTypes.checkPropTypes(propTypes, options, key, caller.name);\n    });\n  };\n}\n\nfunction isAcceptedCharacterKey(key) {\n  return /^\\S{1}$/.test(key);\n}\n\nfunction capitalizeString(string) {\n  return \"\" + string.slice(0, 1).toUpperCase() + string.slice(1);\n}\n\nfunction invokeOnChangeHandler(propKey, props, state, changes) {\n  var handler = \"on\" + capitalizeString(propKey) + \"Change\";\n\n  if (props[handler] && changes[propKey] !== undefined && changes[propKey] !== state[propKey]) {\n    props[handler](changes);\n  }\n}\n\nfunction callOnChangeProps(props, state, changes) {\n  Object.keys(state).forEach(function (stateKey) {\n    invokeOnChangeHandler(stateKey, props, state, changes);\n  });\n\n  if (props.onStateChange && changes !== undefined) {\n    props.onStateChange(changes);\n  }\n}\n\nfunction useEnhancedReducer(reducer, initialState, props) {\n  var enhancedReducer = useCallback(function (state, action) {\n    state = getState(state, action.props);\n    var stateReduceLocal = action.props.stateReducer;\n    var changes = reducer(state, action);\n    var newState = stateReduceLocal(state, _extends({}, action, {\n      changes: changes\n    }));\n    callOnChangeProps(action.props, state, newState);\n    return newState;\n  }, [reducer]);\n\n  var _useReducer = useReducer(enhancedReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return [getState(state, props), dispatch];\n}\n/**\n * Default state reducer that returns the changes.\n *\n * @param {Object} s state.\n * @param {Object} a action with changes.\n * @returns {Object} changes.\n */\n\n\nfunction stateReducer(s, a) {\n  return a.changes;\n}\n/**\n * Returns a message to be added to aria-live region when item is selected.\n *\n * @param {Object} selectionParameters Parameters required to build the message.\n * @returns {string} The a11y message.\n */\n\n\nfunction getA11ySelectionMessage(selectionParameters) {\n  var selectedItem = selectionParameters.selectedItem,\n      itemToStringLocal = selectionParameters.itemToString;\n  return itemToStringLocal(selectedItem) + \" has been selected.\";\n}\n\nvar defaultProps = {\n  itemToString: itemToString,\n  stateReducer: stateReducer,\n  getA11ySelectionMessage: getA11ySelectionMessage,\n  scrollIntoView: scrollIntoView,\n  circularNavigation: false,\n  environment: typeof window === 'undefined'\n  /* istanbul ignore next (ssr) */\n  ? {} : window\n};\n\nfunction getDefaultValue(props, propKey) {\n  var defaultPropKey = \"default\" + capitalizeString(propKey);\n\n  if (defaultPropKey in props) {\n    return props[defaultPropKey];\n  }\n\n  return defaultStateValues[propKey];\n}\n\nfunction getInitialValue(props, propKey) {\n  if (propKey in props) {\n    return props[propKey];\n  }\n\n  var initialPropKey = \"initial\" + capitalizeString(propKey);\n\n  if (initialPropKey in props) {\n    return props[initialPropKey];\n  }\n\n  return getDefaultValue(props, propKey);\n}\n\nfunction getInitialState(props) {\n  var selectedItem = getInitialValue(props, 'selectedItem');\n  var isOpen = getInitialValue(props, 'isOpen');\n  var highlightedIndex = getInitialValue(props, 'highlightedIndex');\n  var inputValue = getInitialValue(props, 'inputValue');\n  return {\n    highlightedIndex: highlightedIndex < 0 && selectedItem ? props.items.indexOf(selectedItem) : highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nfunction getHighlightedIndexOnOpen(props, state, offset, getItemNodeFromIndex) {\n  var items = props.items,\n      initialHighlightedIndex = props.initialHighlightedIndex,\n      defaultHighlightedIndex = props.defaultHighlightedIndex;\n  var selectedItem = state.selectedItem,\n      highlightedIndex = state.highlightedIndex; // initialHighlightedIndex will give value to highlightedIndex on initial state only.\n\n  if (initialHighlightedIndex !== undefined && highlightedIndex === initialHighlightedIndex) {\n    return initialHighlightedIndex;\n  }\n\n  if (defaultHighlightedIndex !== undefined) {\n    return defaultHighlightedIndex;\n  }\n\n  if (selectedItem) {\n    if (offset === 0) {\n      return items.indexOf(selectedItem);\n    }\n\n    return getNextWrappingIndex(offset, items.indexOf(selectedItem), items.length, getItemNodeFromIndex, false);\n  }\n\n  if (offset === 0) {\n    return -1;\n  }\n\n  return offset < 0 ? items.length - 1 : 0;\n}\n\nfunction getItemIndexByCharacterKey(keysSoFar, highlightedIndex, items, itemToStringParam, getItemNodeFromIndex) {\n  var lowerCasedItemStrings = items.map(function (item) {\n    return itemToStringParam(item).toLowerCase();\n  });\n  var lowerCasedKeysSoFar = keysSoFar.toLowerCase();\n\n  var isValid = function (itemString, index) {\n    var element = getItemNodeFromIndex(index);\n    return itemString.startsWith(lowerCasedKeysSoFar) && !(element && element.hasAttribute('disabled'));\n  };\n\n  for (var index = highlightedIndex + 1; index < lowerCasedItemStrings.length; index++) {\n    var itemString = lowerCasedItemStrings[index];\n\n    if (isValid(itemString, index)) {\n      return index;\n    }\n  }\n\n  for (var _index = 0; _index < highlightedIndex; _index++) {\n    var _itemString = lowerCasedItemStrings[_index];\n\n    if (isValid(_itemString, _index)) {\n      return _index;\n    }\n  }\n\n  return highlightedIndex;\n}\n\nvar propTypes = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n/**\n * Default implementation for status message. Only added when menu is open.\n * Will specift if there are results in the list, and if so, how many,\n * and what keys are relevant.\n *\n * @param {Object} param the downshift state and other relevant properties\n * @return {String} the a11y status message\n */\n\nfunction getA11yStatusMessage$1(_ref) {\n  var isOpen = _ref.isOpen,\n      resultCount = _ref.resultCount;\n\n  if (!isOpen) {\n    return '';\n  }\n\n  if (!resultCount) {\n    return 'No results are available.';\n  }\n\n  return resultCount + \" result\" + (resultCount === 1 ? ' is' : 's are') + \" available, use up and down arrow keys to navigate. Press Enter or Space Bar keys to select.\";\n}\n\nvar defaultProps$1 = _extends({}, defaultProps, {\n  getA11yStatusMessage: getA11yStatusMessage$1\n});\n\nvar MenuKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_down__' : 0;\nvar MenuKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_arrow_up__' : 1;\nvar MenuKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_escape__' : 2;\nvar MenuKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_home__' : 3;\nvar MenuKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_end__' : 4;\nvar MenuKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_enter__' : 5;\nvar MenuKeyDownSpaceButton = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_space_button__' : 6;\nvar MenuKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__menu_keydown_character__' : 7;\nvar MenuBlur = process.env.NODE_ENV !== \"production\" ? '__menu_blur__' : 8;\nvar MenuMouseLeave = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 9;\nvar ItemMouseMove = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 10;\nvar ItemClick = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 11;\nvar ToggleButtonClick = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 12;\nvar ToggleButtonKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_down__' : 13;\nvar ToggleButtonKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_arrow_up__' : 14;\nvar ToggleButtonKeyDownCharacter = process.env.NODE_ENV !== \"production\" ? '__togglebutton_keydown_character__' : 15;\nvar FunctionToggleMenu = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 16;\nvar FunctionOpenMenu = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 17;\nvar FunctionCloseMenu = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 18;\nvar FunctionSetHighlightedIndex = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 19;\nvar FunctionSelectItem = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 20;\nvar FunctionSetInputValue = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 21;\nvar FunctionReset = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 22;\n\nvar stateChangeTypes$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MenuKeyDownArrowDown: MenuKeyDownArrowDown,\n  MenuKeyDownArrowUp: MenuKeyDownArrowUp,\n  MenuKeyDownEscape: MenuKeyDownEscape,\n  MenuKeyDownHome: MenuKeyDownHome,\n  MenuKeyDownEnd: MenuKeyDownEnd,\n  MenuKeyDownEnter: MenuKeyDownEnter,\n  MenuKeyDownSpaceButton: MenuKeyDownSpaceButton,\n  MenuKeyDownCharacter: MenuKeyDownCharacter,\n  MenuBlur: MenuBlur,\n  MenuMouseLeave: MenuMouseLeave,\n  ItemMouseMove: ItemMouseMove,\n  ItemClick: ItemClick,\n  ToggleButtonClick: ToggleButtonClick,\n  ToggleButtonKeyDownArrowDown: ToggleButtonKeyDownArrowDown,\n  ToggleButtonKeyDownArrowUp: ToggleButtonKeyDownArrowUp,\n  ToggleButtonKeyDownCharacter: ToggleButtonKeyDownCharacter,\n  FunctionToggleMenu: FunctionToggleMenu,\n  FunctionOpenMenu: FunctionOpenMenu,\n  FunctionCloseMenu: FunctionCloseMenu,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex,\n  FunctionSelectItem: FunctionSelectItem,\n  FunctionSetInputValue: FunctionSetInputValue,\n  FunctionReset: FunctionReset\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftSelectReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemMouseMove:\n      changes = {\n        highlightedIndex: action.index\n      };\n      break;\n\n    case ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index]\n      };\n      break;\n\n    case ToggleButtonKeyDownCharacter:\n      {\n        var lowercasedKey = action.key;\n        var inputValue = \"\" + state.inputValue + lowercasedKey;\n        var itemIndex = getItemIndexByCharacterKey(inputValue, state.selectedItem ? props.items.indexOf(state.selectedItem) : -1, props.items, props.itemToString, action.getItemNodeFromIndex);\n        changes = _extends({\n          inputValue: inputValue\n        }, itemIndex >= 0 && {\n          selectedItem: props.items[itemIndex]\n        });\n      }\n      break;\n\n    case ToggleButtonKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case ToggleButtonKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n        isOpen: true\n      };\n      break;\n\n    case MenuKeyDownEnter:\n    case MenuKeyDownSpaceButton:\n      changes = _extends({\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex')\n      }, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex]\n      });\n      break;\n\n    case MenuKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case MenuKeyDownEscape:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuBlur:\n      changes = {\n        isOpen: false,\n        highlightedIndex: -1\n      };\n      break;\n\n    case MenuKeyDownCharacter:\n      {\n        var _lowercasedKey = action.key;\n\n        var _inputValue = \"\" + state.inputValue + _lowercasedKey;\n\n        var highlightedIndex = getItemIndexByCharacterKey(_inputValue, state.highlightedIndex, props.items, props.itemToString, action.getItemNodeFromIndex);\n        changes = _extends({\n          inputValue: _inputValue\n        }, highlightedIndex >= 0 && {\n          highlightedIndex: highlightedIndex\n        });\n      }\n      break;\n\n    case MenuKeyDownArrowDown:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case MenuKeyDownArrowUp:\n      changes = {\n        highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n      };\n      break;\n\n    case MenuMouseLeave:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case ToggleButtonClick:\n    case FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case FunctionSetHighlightedIndex:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    case FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case FunctionReset:\n      changes = {\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, {}, changes);\n}\n/* eslint-enable complexity */\n\nvar validatePropTypes = process.env.NODE_ENV === 'production' ?\n/* istanbul ignore next */\nnull : getPropTypesValidator(useSelect, propTypes);\nuseSelect.stateChangeTypes = stateChangeTypes$1;\n\nfunction useSelect(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    validatePropTypes(userProps);\n  } // Props defaults and destructuring.\n\n\n  var props = _extends({}, defaultProps$1, {}, userProps);\n\n  var items = props.items,\n      itemToString = props.itemToString,\n      getA11yStatusMessage = props.getA11yStatusMessage,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      scrollIntoView = props.scrollIntoView,\n      environment = props.environment,\n      initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen; // Initial state depending on controlled props.\n\n  var initialState = getInitialState(props); // Reducer init.\n\n  var _useEnhancedReducer = useEnhancedReducer(downshiftSelectReducer, initialState, props),\n      _useEnhancedReducer$ = _useEnhancedReducer[0],\n      isOpen = _useEnhancedReducer$.isOpen,\n      highlightedIndex = _useEnhancedReducer$.highlightedIndex,\n      selectedItem = _useEnhancedReducer$.selectedItem,\n      inputValue = _useEnhancedReducer$.inputValue,\n      dispatchWithoutProps = _useEnhancedReducer[1];\n\n  var dispatch = function (action) {\n    return dispatchWithoutProps(_extends({\n      props: props\n    }, action));\n  };\n  /* Refs */\n\n\n  var toggleButtonRef = useRef(null);\n  var menuRef = useRef(null);\n  var isInitialMount = useRef(true);\n  var shouldScroll = useRef(true);\n  var clearTimeout = useRef(null);\n  var mouseAndTouchTrackers = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  var elementIds = useRef(getElementIds(props)); // Some utils.\n\n  var getItemNodeFromIndex = function (index) {\n    return environment.document.getElementById(elementIds.current.getItemId(index));\n  };\n  /* Effects */\n\n  /* Sets a11y status message on changes in isOpen. */\n\n\n  useEffect(function () {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    setStatus(getA11yStatusMessage({\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      isOpen: isOpen,\n      itemToString: itemToString,\n      resultCount: items.length,\n      highlightedItem: items[highlightedIndex],\n      selectedItem: selectedItem\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(function () {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    setStatus(getA11ySelectionMessage({\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      isOpen: isOpen,\n      itemToString: itemToString,\n      resultCount: items.length,\n      highlightedItem: items[highlightedIndex],\n      selectedItem: selectedItem\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItem]);\n  /* Sets cleanup for the keysSoFar after 500ms. */\n\n  useEffect(function () {\n    // init the clean function here as we need access to dispatch.\n    if (isInitialMount.current) {\n      clearTimeout.current = debounce(function (outerDispatch) {\n        outerDispatch({\n          type: FunctionSetInputValue,\n          inputValue: ''\n        });\n      }, 500);\n    }\n\n    if (!inputValue) {\n      return;\n    }\n\n    clearTimeout.current(dispatch); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputValue]);\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(function () {\n    // Don't focus menu on first render.\n    if (isInitialMount.current) {\n      // Unless it was initialised as open.\n      if ((initialIsOpen || defaultIsOpen || isOpen) && menuRef.current) {\n        menuRef.current.focus();\n      }\n\n      return;\n    } // Focus menu on open.\n    // istanbul ignore next\n\n\n    if (isOpen && menuRef.current) {\n      menuRef.current.focus(); // Focus toggleButton on close.\n    } else if (environment.document.activeElement === menuRef.current && toggleButtonRef.current) {\n      toggleButtonRef.current.focus();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  /* Scroll on highlighted item if change comes from keyboard. */\n\n  useEffect(function () {\n    if (highlightedIndex < 0 || !isOpen || !items.length) {\n      return;\n    }\n\n    if (shouldScroll.current === false) {\n      shouldScroll.current = true;\n    } else {\n      scrollIntoView(getItemNodeFromIndex(highlightedIndex), menuRef.current);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  /* Make initial ref false. */\n\n  useEffect(function () {\n    isInitialMount.current = false;\n  }, []);\n  /* Add mouse/touch events to document. */\n\n  useEffect(function () {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    var onMouseDown = function () {\n      mouseAndTouchTrackers.current.isMouseDown = true;\n    };\n\n    var onMouseUp = function (event) {\n      mouseAndTouchTrackers.current.isMouseDown = false;\n\n      if (isOpen && !targetWithinDownshift(event.target, [toggleButtonRef.current, menuRef.current], environment.document)) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n\n    var onTouchStart = function () {\n      mouseAndTouchTrackers.current.isTouchMove = false;\n    };\n\n    var onTouchMove = function () {\n      mouseAndTouchTrackers.current.isTouchMove = true;\n    };\n\n    var onTouchEnd = function (event) {\n      if (isOpen && !mouseAndTouchTrackers.current.isTouchMove && !targetWithinDownshift(event.target, [toggleButtonRef.current, menuRef.current], environment.document, false)) {\n        dispatch({\n          type: MenuBlur\n        });\n      }\n    };\n\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function () {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    };\n  }); // Event handler functions.\n\n  var toggleButtonKeyDownHandlers = {\n    ArrowDown: function ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowDown,\n        getItemNodeFromIndex: getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n    ArrowUp: function ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: ToggleButtonKeyDownArrowUp,\n        getItemNodeFromIndex: getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    }\n  };\n  var menuKeyDownHandlers = {\n    ArrowDown: function ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowDown,\n        getItemNodeFromIndex: getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n    ArrowUp: function ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownArrowUp,\n        getItemNodeFromIndex: getItemNodeFromIndex,\n        shiftKey: event.shiftKey\n      });\n    },\n    Home: function Home(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownHome,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    },\n    End: function End(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnd,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    },\n    Escape: function Escape() {\n      dispatch({\n        type: MenuKeyDownEscape\n      });\n    },\n    Enter: function Enter(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownEnter\n      });\n    },\n    ' ': function _(event) {\n      event.preventDefault();\n      dispatch({\n        type: MenuKeyDownSpaceButton\n      });\n    }\n  }; // Event handlers.\n\n  var menuHandleKeyDown = function (event) {\n    var key = normalizeArrowKey(event);\n\n    if (key && menuKeyDownHandlers[key]) {\n      menuKeyDownHandlers[key](event);\n    } else if (isAcceptedCharacterKey(key)) {\n      dispatch({\n        type: MenuKeyDownCharacter,\n        key: key,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    }\n  };\n\n  var menuHandleBlur = function () {\n    var shouldBlur = !mouseAndTouchTrackers.current.isMouseDown;\n    /* istanbul ignore else */\n\n    if (shouldBlur) {\n      dispatch({\n        type: MenuBlur\n      });\n    }\n  };\n\n  var menuHandleMouseLeave = function () {\n    dispatch({\n      type: MenuMouseLeave\n    });\n  };\n\n  var toggleButtonHandleClick = function () {\n    dispatch({\n      type: ToggleButtonClick\n    });\n  };\n\n  var toggleButtonHandleKeyDown = function (event) {\n    var key = normalizeArrowKey(event);\n\n    if (key && toggleButtonKeyDownHandlers[key]) {\n      toggleButtonKeyDownHandlers[key](event);\n    } else if (isAcceptedCharacterKey(key)) {\n      dispatch({\n        type: ToggleButtonKeyDownCharacter,\n        key: key,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    }\n  };\n\n  var itemHandleMouseMove = function (index) {\n    if (index === highlightedIndex) {\n      return;\n    }\n\n    shouldScroll.current = false;\n    dispatch({\n      type: ItemMouseMove,\n      index: index\n    });\n  };\n\n  var itemHandleClick = function (index) {\n    dispatch({\n      type: ItemClick,\n      index: index\n    });\n  }; // Action functions.\n\n\n  return {\n    // prop getters.\n    getToggleButtonProps: function getToggleButtonProps(_ref3) {\n      var _extends3;\n\n      if (_ref3 === void 0) {\n        _ref3 = {};\n      }\n\n      var _ref4 = _ref3,\n          onClick = _ref4.onClick,\n          onKeyDown = _ref4.onKeyDown,\n          _ref4$refKey = _ref4.refKey,\n          refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n          ref = _ref4.ref,\n          rest = _objectWithoutPropertiesLoose(_ref4, [\"onClick\", \"onKeyDown\", \"refKey\", \"ref\"]);\n\n      var toggleProps = _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (toggleButtonNode) {\n        toggleButtonRef.current = toggleButtonNode;\n      }), _extends3.id = elementIds.current.toggleButtonId, _extends3['aria-haspopup'] = 'listbox', _extends3['aria-expanded'] = isOpen, _extends3['aria-labelledby'] = elementIds.current.labelId + \" \" + elementIds.current.toggleButtonId, _extends3), rest);\n\n      if (!rest.disabled) {\n        toggleProps.onClick = callAllEventHandlers(onClick, toggleButtonHandleClick);\n        toggleProps.onKeyDown = callAllEventHandlers(onKeyDown, toggleButtonHandleKeyDown);\n      }\n\n      return toggleProps;\n    },\n    getLabelProps: function getLabelProps(labelProps) {\n      return _extends({\n        id: elementIds.current.labelId,\n        htmlFor: elementIds.current.toggleButtonId\n      }, labelProps);\n    },\n    getMenuProps: function getMenuProps(_ref) {\n      var _extends2;\n\n      if (_ref === void 0) {\n        _ref = {};\n      }\n\n      var _ref2 = _ref,\n          onMouseLeave = _ref2.onMouseLeave,\n          _ref2$refKey = _ref2.refKey,\n          refKey = _ref2$refKey === void 0 ? 'ref' : _ref2$refKey,\n          onKeyDown = _ref2.onKeyDown,\n          onBlur = _ref2.onBlur,\n          ref = _ref2.ref,\n          rest = _objectWithoutPropertiesLoose(_ref2, [\"onMouseLeave\", \"refKey\", \"onKeyDown\", \"onBlur\", \"ref\"]);\n\n      return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n        menuRef.current = menuNode;\n      }), _extends2.id = elementIds.current.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.current.labelId, _extends2.tabIndex = -1, _extends2), highlightedIndex > -1 && {\n        'aria-activedescendant': elementIds.current.getItemId(highlightedIndex)\n      }, {\n        onMouseLeave: callAllEventHandlers(onMouseLeave, menuHandleMouseLeave),\n        onKeyDown: callAllEventHandlers(onKeyDown, menuHandleKeyDown),\n        onBlur: callAllEventHandlers(onBlur, menuHandleBlur)\n      }, rest);\n    },\n    getItemProps: function getItemProps(_ref5) {\n      if (_ref5 === void 0) {\n        _ref5 = {};\n      }\n\n      var _ref6 = _ref5,\n          item = _ref6.item,\n          index = _ref6.index,\n          onMouseMove = _ref6.onMouseMove,\n          onClick = _ref6.onClick,\n          rest = _objectWithoutPropertiesLoose(_ref6, [\"item\", \"index\", \"onMouseMove\", \"onClick\"]);\n\n      var itemIndex = getItemIndex(index, item, items);\n\n      if (itemIndex < 0) {\n        throw new Error('Pass either item or item index in getItemProps!');\n      }\n\n      var itemProps = _extends({\n        role: 'option',\n        'aria-selected': \"\" + (itemIndex === highlightedIndex),\n        id: elementIds.current.getItemId(itemIndex)\n      }, rest);\n\n      if (!rest.disabled) {\n        itemProps.onMouseMove = callAllEventHandlers(onMouseMove, function () {\n          return itemHandleMouseMove(itemIndex);\n        });\n        itemProps.onClick = callAllEventHandlers(onClick, function () {\n          return itemHandleClick(itemIndex);\n        });\n      }\n\n      return itemProps;\n    },\n    // actions.\n    toggleMenu: function toggleMenu() {\n      dispatch({\n        type: FunctionToggleMenu\n      });\n    },\n    openMenu: function openMenu() {\n      dispatch({\n        type: FunctionOpenMenu\n      });\n    },\n    closeMenu: function closeMenu() {\n      dispatch({\n        type: FunctionCloseMenu\n      });\n    },\n    setHighlightedIndex: function setHighlightedIndex(newHighlightedIndex) {\n      dispatch({\n        type: FunctionSetHighlightedIndex,\n        highlightedIndex: newHighlightedIndex\n      });\n    },\n    selectItem: function selectItem(newSelectedItem) {\n      dispatch({\n        type: FunctionSelectItem,\n        selectedItem: newSelectedItem\n      });\n    },\n    reset: function reset() {\n      dispatch({\n        type: FunctionReset\n      });\n    },\n    setInputValue: function setInputValue(newInputValue) {\n      dispatch({\n        type: FunctionSetInputValue,\n        inputValue: newInputValue\n      });\n    },\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nfunction getElementIds$1(_ref) {\n  var id = _ref.id,\n      inputId = _ref.inputId,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"id\", \"inputId\"]);\n\n  var uniqueId = id === undefined ? \"downshift-\" + generateId() : id;\n  return _extends({\n    inputId: inputId || uniqueId + \"-input\"\n  }, getElementIds(_extends({\n    id: id\n  }, rest)));\n}\n\nfunction getInitialState$1(props) {\n  var initialState = getInitialState(props);\n  var selectedItem = initialState.selectedItem;\n  var inputValue = initialState.inputValue;\n\n  if (inputValue === '' && selectedItem && props.defaultInputValue === undefined && props.initialInputValue === undefined && props.inputValue === undefined) {\n    inputValue = props.itemToString(selectedItem);\n  }\n\n  return _extends({}, initialState, {\n    inputValue: inputValue\n  });\n}\n\nvar propTypes$1 = {\n  items: PropTypes.array.isRequired,\n  itemToString: PropTypes.func,\n  getA11yStatusMessage: PropTypes.func,\n  getA11ySelectionMessage: PropTypes.func,\n  circularNavigation: PropTypes.bool,\n  highlightedIndex: PropTypes.number,\n  defaultHighlightedIndex: PropTypes.number,\n  initialHighlightedIndex: PropTypes.number,\n  isOpen: PropTypes.bool,\n  defaultIsOpen: PropTypes.bool,\n  initialIsOpen: PropTypes.bool,\n  selectedItem: PropTypes.any,\n  initialSelectedItem: PropTypes.any,\n  defaultSelectedItem: PropTypes.any,\n  inputValue: PropTypes.string,\n  defaultInputValue: PropTypes.string,\n  initialInputValue: PropTypes.string,\n  id: PropTypes.string,\n  labelId: PropTypes.string,\n  menuId: PropTypes.string,\n  getItemId: PropTypes.func,\n  inputId: PropTypes.string,\n  toggleButtonId: PropTypes.string,\n  stateReducer: PropTypes.func,\n  onSelectedItemChange: PropTypes.func,\n  onHighlightedIndexChange: PropTypes.func,\n  onStateChange: PropTypes.func,\n  onIsOpenChange: PropTypes.func,\n  onInputValueChange: PropTypes.func,\n  environment: PropTypes.shape({\n    addEventListener: PropTypes.func,\n    removeEventListener: PropTypes.func,\n    document: PropTypes.shape({\n      getElementById: PropTypes.func,\n      activeElement: PropTypes.any,\n      body: PropTypes.any\n    })\n  })\n};\n\nvar defaultProps$2 = _extends({}, defaultProps, {\n  getA11yStatusMessage: getA11yStatusMessage,\n  circularNavigation: true\n});\n\nvar InputKeyDownArrowDown = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_down__' : 0;\nvar InputKeyDownArrowUp = process.env.NODE_ENV !== \"production\" ? '__input_keydown_arrow_up__' : 1;\nvar InputKeyDownEscape = process.env.NODE_ENV !== \"production\" ? '__input_keydown_escape__' : 2;\nvar InputKeyDownHome = process.env.NODE_ENV !== \"production\" ? '__input_keydown_home__' : 3;\nvar InputKeyDownEnd = process.env.NODE_ENV !== \"production\" ? '__input_keydown_end__' : 4;\nvar InputKeyDownEnter = process.env.NODE_ENV !== \"production\" ? '__input_keydown_enter__' : 5;\nvar InputChange = process.env.NODE_ENV !== \"production\" ? '__input_change__' : 6;\nvar InputBlur = process.env.NODE_ENV !== \"production\" ? '__input_blur__' : 7;\nvar MenuMouseLeave$1 = process.env.NODE_ENV !== \"production\" ? '__menu_mouse_leave__' : 8;\nvar ItemMouseMove$1 = process.env.NODE_ENV !== \"production\" ? '__item_mouse_move__' : 9;\nvar ItemClick$1 = process.env.NODE_ENV !== \"production\" ? '__item_click__' : 10;\nvar ToggleButtonClick$1 = process.env.NODE_ENV !== \"production\" ? '__togglebutton_click__' : 11;\nvar FunctionToggleMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_toggle_menu__' : 12;\nvar FunctionOpenMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_open_menu__' : 13;\nvar FunctionCloseMenu$1 = process.env.NODE_ENV !== \"production\" ? '__function_close_menu__' : 14;\nvar FunctionSetHighlightedIndex$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_highlighted_index__' : 15;\nvar FunctionSelectItem$1 = process.env.NODE_ENV !== \"production\" ? '__function_select_item__' : 16;\nvar FunctionSetInputValue$1 = process.env.NODE_ENV !== \"production\" ? '__function_set_input_value__' : 17;\nvar FunctionReset$1 = process.env.NODE_ENV !== \"production\" ? '__function_reset__' : 18;\n\nvar stateChangeTypes$2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  InputKeyDownArrowDown: InputKeyDownArrowDown,\n  InputKeyDownArrowUp: InputKeyDownArrowUp,\n  InputKeyDownEscape: InputKeyDownEscape,\n  InputKeyDownHome: InputKeyDownHome,\n  InputKeyDownEnd: InputKeyDownEnd,\n  InputKeyDownEnter: InputKeyDownEnter,\n  InputChange: InputChange,\n  InputBlur: InputBlur,\n  MenuMouseLeave: MenuMouseLeave$1,\n  ItemMouseMove: ItemMouseMove$1,\n  ItemClick: ItemClick$1,\n  ToggleButtonClick: ToggleButtonClick$1,\n  FunctionToggleMenu: FunctionToggleMenu$1,\n  FunctionOpenMenu: FunctionOpenMenu$1,\n  FunctionCloseMenu: FunctionCloseMenu$1,\n  FunctionSetHighlightedIndex: FunctionSetHighlightedIndex$1,\n  FunctionSelectItem: FunctionSelectItem$1,\n  FunctionSetInputValue: FunctionSetInputValue$1,\n  FunctionReset: FunctionReset$1\n});\n\n/* eslint-disable complexity */\n\nfunction downshiftUseComboboxReducer(state, action) {\n  var type = action.type,\n      props = action.props,\n      shiftKey = action.shiftKey;\n  var changes;\n\n  switch (type) {\n    case ItemMouseMove$1:\n      changes = {\n        highlightedIndex: action.index\n      };\n      break;\n\n    case ItemClick$1:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case InputKeyDownArrowDown:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? 5 : 1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, 1, action.getItemNodeFromIndex),\n          isOpen: true\n        };\n      }\n\n      break;\n\n    case InputKeyDownArrowUp:\n      if (state.isOpen) {\n        changes = {\n          highlightedIndex: getNextWrappingIndex(shiftKey ? -5 : -1, state.highlightedIndex, props.items.length, action.getItemNodeFromIndex, props.circularNavigation)\n        };\n      } else {\n        changes = {\n          highlightedIndex: getHighlightedIndexOnOpen(props, state, -1, action.getItemNodeFromIndex),\n          isOpen: true\n        };\n      }\n\n      break;\n\n    case InputKeyDownEnter:\n      changes = _extends({}, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex],\n        isOpen: getDefaultValue(props, 'isOpen'),\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        inputValue: props.itemToString(props.items[state.highlightedIndex])\n      });\n      break;\n\n    case InputKeyDownEscape:\n      changes = {\n        isOpen: false,\n        selectedItem: null,\n        highlightedIndex: -1,\n        inputValue: ''\n      };\n      break;\n\n    case InputKeyDownHome:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(1, 0, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputKeyDownEnd:\n      changes = {\n        highlightedIndex: getNextNonDisabledIndex(-1, props.items.length - 1, props.items.length, action.getItemNodeFromIndex, false)\n      };\n      break;\n\n    case InputBlur:\n      changes = _extends({\n        isOpen: false\n      }, state.highlightedIndex >= 0 && {\n        selectedItem: props.items[state.highlightedIndex],\n        inputValue: props.itemToString(props.items[state.highlightedIndex]),\n        highlightedIndex: -1\n      });\n      break;\n\n    case InputChange:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        inputValue: action.inputValue\n      };\n      break;\n\n    case MenuMouseLeave$1:\n      changes = {\n        highlightedIndex: -1\n      };\n      break;\n\n    case ToggleButtonClick$1:\n    case FunctionToggleMenu$1:\n      changes = {\n        isOpen: !state.isOpen,\n        highlightedIndex: state.isOpen ? -1 : getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case FunctionOpenMenu$1:\n      changes = {\n        isOpen: true,\n        highlightedIndex: getHighlightedIndexOnOpen(props, state, 0)\n      };\n      break;\n\n    case FunctionCloseMenu$1:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case FunctionSetHighlightedIndex$1:\n      changes = {\n        highlightedIndex: action.highlightedIndex\n      };\n      break;\n\n    case FunctionSelectItem$1:\n      changes = {\n        selectedItem: action.selectedItem\n      };\n      break;\n\n    case FunctionSetInputValue$1:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case FunctionReset$1:\n      changes = {\n        highlightedIndex: getDefaultValue(props, 'highlightedIndex'),\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _extends({}, state, {}, changes);\n}\n/* eslint-enable complexity */\n\nvar validatePropTypes$1 = process.env.NODE_ENV === 'production' ?\n/* istanbul ignore next */\nnull : getPropTypesValidator(useCombobox, propTypes$1);\nuseCombobox.stateChangeTypes = stateChangeTypes$2;\n\nfunction useCombobox(userProps) {\n  if (userProps === void 0) {\n    userProps = {};\n  }\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    validatePropTypes$1(userProps);\n  } // Props defaults and destructuring.\n\n\n  var props = _extends({}, defaultProps$2, {}, userProps);\n\n  var initialIsOpen = props.initialIsOpen,\n      defaultIsOpen = props.defaultIsOpen,\n      items = props.items,\n      scrollIntoView = props.scrollIntoView,\n      getA11ySelectionMessage = props.getA11ySelectionMessage,\n      getA11yStatusMessage = props.getA11yStatusMessage,\n      itemToString = props.itemToString,\n      environment = props.environment; // Initial state depending on controlled props.\n\n  var initialState = getInitialState$1(props); // Reducer init.\n\n  var _useEnhancedReducer = useEnhancedReducer(downshiftUseComboboxReducer, initialState, props),\n      _useEnhancedReducer$ = _useEnhancedReducer[0],\n      isOpen = _useEnhancedReducer$.isOpen,\n      highlightedIndex = _useEnhancedReducer$.highlightedIndex,\n      selectedItem = _useEnhancedReducer$.selectedItem,\n      inputValue = _useEnhancedReducer$.inputValue,\n      dispatchWithoutProps = _useEnhancedReducer[1];\n\n  var dispatch = function (action) {\n    return dispatchWithoutProps(_extends({\n      props: props\n    }, action));\n  };\n  /* Refs */\n\n\n  var menuRef = useRef(null);\n  var itemRefs = useRef();\n  var inputRef = useRef(null);\n  var toggleButtonRef = useRef(null);\n  var comboboxRef = useRef(null);\n  itemRefs.current = [];\n  var shouldScroll = useRef(true);\n  var isInitialMount = useRef(true);\n  var mouseAndTouchTrackers = useRef({\n    isMouseDown: false,\n    isTouchMove: false\n  });\n  var elementIds = useRef(getElementIds$1(props));\n  /* Effects */\n\n  /* Sets a11y status message on changes in isOpen. */\n\n  useEffect(function () {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    setStatus(getA11yStatusMessage({\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      isOpen: isOpen,\n      itemToString: itemToString,\n      resultCount: items.length,\n      highlightedItem: items[highlightedIndex],\n      selectedItem: selectedItem\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpen]);\n  /* Sets a11y status message on changes in selectedItem. */\n\n  useEffect(function () {\n    if (isInitialMount.current) {\n      return;\n    }\n\n    setStatus(getA11ySelectionMessage({\n      highlightedIndex: highlightedIndex,\n      inputValue: inputValue,\n      isOpen: isOpen,\n      itemToString: itemToString,\n      resultCount: items.length,\n      highlightedItem: items[highlightedIndex],\n      selectedItem: selectedItem\n    }), environment.document); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItem]);\n  /* Scroll on highlighted item if change comes from keyboard. */\n\n  useEffect(function () {\n    if (highlightedIndex < 0 || !isOpen || !itemRefs.current.length) {\n      return;\n    }\n\n    if (shouldScroll.current === false) {\n      shouldScroll.current = true;\n    } else {\n      scrollIntoView(itemRefs.current[highlightedIndex], menuRef.current);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [highlightedIndex]);\n  /* Controls the focus on the menu or the toggle button. */\n\n  useEffect(function () {\n    // Don't focus menu on first render.\n    if (isInitialMount.current) {\n      // Unless it was initialised as open.\n      if (initialIsOpen || defaultIsOpen || isOpen) {\n        if (inputRef.current) {\n          inputRef.current.focus();\n        }\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isOpen]);\n  /* Make initial ref false. */\n\n  useEffect(function () {\n    isInitialMount.current = false;\n  }, []);\n  /* Add mouse/touch events to document. */\n\n  useEffect(function () {\n    // The same strategy for checking if a click occurred inside or outside downsift\n    // as in downshift.js.\n    var onMouseDown = function () {\n      mouseAndTouchTrackers.current.isMouseDown = true;\n    };\n\n    var onMouseUp = function (event) {\n      mouseAndTouchTrackers.current.isMouseDown = false;\n\n      if (isOpen && !targetWithinDownshift(event.target, [comboboxRef.current, menuRef.current, toggleButtonRef.current], environment.document)) {\n        dispatch({\n          type: InputBlur\n        });\n      }\n    };\n\n    var onTouchStart = function () {\n      mouseAndTouchTrackers.current.isTouchMove = false;\n    };\n\n    var onTouchMove = function () {\n      mouseAndTouchTrackers.current.isTouchMove = true;\n    };\n\n    var onTouchEnd = function (event) {\n      if (isOpen && !mouseAndTouchTrackers.current.isTouchMove && !targetWithinDownshift(event.target, [comboboxRef.current, menuRef.current, toggleButtonRef.current], environment.document, false)) {\n        dispatch({\n          type: InputBlur\n        });\n      }\n    };\n\n    environment.addEventListener('mousedown', onMouseDown);\n    environment.addEventListener('mouseup', onMouseUp);\n    environment.addEventListener('touchstart', onTouchStart);\n    environment.addEventListener('touchmove', onTouchMove);\n    environment.addEventListener('touchend', onTouchEnd);\n    return function () {\n      environment.removeEventListener('mousedown', onMouseDown);\n      environment.removeEventListener('mouseup', onMouseUp);\n      environment.removeEventListener('touchstart', onTouchStart);\n      environment.removeEventListener('touchmove', onTouchMove);\n      environment.removeEventListener('touchend', onTouchEnd);\n    };\n  });\n\n  var getItemNodeFromIndex = function (index) {\n    return itemRefs.current[index];\n  };\n  /* Event handler functions */\n\n\n  var inputKeyDownHandlers = {\n    ArrowDown: function ArrowDown(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownArrowDown,\n        shiftKey: event.shiftKey,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    },\n    ArrowUp: function ArrowUp(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownArrowUp,\n        shiftKey: event.shiftKey,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    },\n    Home: function Home(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownHome,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    },\n    End: function End(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownEnd,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    },\n    Escape: function Escape() {\n      dispatch({\n        type: InputKeyDownEscape\n      });\n    },\n    Enter: function Enter(event) {\n      event.preventDefault();\n      dispatch({\n        type: InputKeyDownEnter,\n        getItemNodeFromIndex: getItemNodeFromIndex\n      });\n    }\n  }; // Event handlers.\n\n  var inputHandleKeyDown = function (event) {\n    var key = normalizeArrowKey(event);\n\n    if (key && inputKeyDownHandlers[key]) {\n      inputKeyDownHandlers[key](event);\n    }\n  };\n\n  var inputHandleChange = function (event) {\n    dispatch({\n      type: InputChange,\n      inputValue: event.target.value\n    });\n  };\n\n  var inputHandleBlur = function () {\n    /* istanbul ignore else */\n    if (!mouseAndTouchTrackers.current.isMouseDown) {\n      dispatch({\n        type: InputBlur\n      });\n    }\n  };\n\n  var menuHandleMouseLeave = function () {\n    dispatch({\n      type: MenuMouseLeave$1\n    });\n  };\n\n  var itemHandleMouseMove = function (index) {\n    if (index === highlightedIndex) {\n      return;\n    }\n\n    shouldScroll.current = false;\n    dispatch({\n      type: ItemMouseMove$1,\n      index: index\n    });\n  };\n\n  var itemHandleClick = function (index) {\n    dispatch({\n      type: ItemClick$1,\n      index: index\n    });\n  };\n\n  var toggleButtonHandleClick = function () {\n    if (!isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n\n    dispatch({\n      type: ToggleButtonClick$1\n    });\n  }; // returns\n\n\n  return {\n    // prop getters.\n    getItemProps: function getItemProps(_ref3) {\n      var _extends3, _ref5;\n\n      if (_ref3 === void 0) {\n        _ref3 = {};\n      }\n\n      var _ref4 = _ref3,\n          item = _ref4.item,\n          index = _ref4.index,\n          _ref4$refKey = _ref4.refKey,\n          refKey = _ref4$refKey === void 0 ? 'ref' : _ref4$refKey,\n          ref = _ref4.ref,\n          onMouseMove = _ref4.onMouseMove,\n          onClick = _ref4.onClick,\n          onPress = _ref4.onPress,\n          rest = _objectWithoutPropertiesLoose(_ref4, [\"item\", \"index\", \"refKey\", \"ref\", \"onMouseMove\", \"onClick\", \"onPress\"]);\n\n      var itemIndex = getItemIndex(index, item, items);\n\n      if (itemIndex < 0) {\n        throw new Error('Pass either item or item index in getItemProps!');\n      }\n\n      var onSelectKey = 'onClick';\n      var customClickHandler = onClick;\n      return _extends((_extends3 = {}, _extends3[refKey] = handleRefs(ref, function (itemNode) {\n        if (itemNode) {\n          itemRefs.current.push(itemNode);\n        }\n      }), _extends3.role = 'option', _extends3['aria-selected'] = \"\" + (itemIndex === highlightedIndex), _extends3.id = elementIds.current.getItemId(itemIndex), _extends3), !rest.disabled && (_ref5 = {\n        onMouseMove: callAllEventHandlers(onMouseMove, function () {\n          itemHandleMouseMove(itemIndex);\n        })\n      }, _ref5[onSelectKey] = callAllEventHandlers(customClickHandler, function () {\n        itemHandleClick(itemIndex);\n      }), _ref5), {}, rest);\n    },\n    getLabelProps: function getLabelProps(labelProps) {\n      return _extends({\n        id: elementIds.current.labelId,\n        htmlFor: elementIds.current.inputId\n      }, labelProps);\n    },\n    getMenuProps: function getMenuProps(_ref) {\n      var _extends2;\n\n      if (_ref === void 0) {\n        _ref = {};\n      }\n\n      var _ref2 = _ref,\n          onMouseLeave = _ref2.onMouseLeave,\n          _ref2$refKey = _ref2.refKey,\n          refKey = _ref2$refKey === void 0 ? 'ref' : _ref2$refKey,\n          ref = _ref2.ref,\n          rest = _objectWithoutPropertiesLoose(_ref2, [\"onMouseLeave\", \"refKey\", \"ref\"]);\n\n      return _extends((_extends2 = {}, _extends2[refKey] = handleRefs(ref, function (menuNode) {\n        menuRef.current = menuNode;\n      }), _extends2.id = elementIds.current.menuId, _extends2.role = 'listbox', _extends2['aria-labelledby'] = elementIds.current.labelId, _extends2.onMouseLeave = callAllEventHandlers(onMouseLeave, menuHandleMouseLeave), _extends2), rest);\n    },\n    getInputProps: function getInputProps(_ref8) {\n      var _extends5;\n\n      if (_ref8 === void 0) {\n        _ref8 = {};\n      }\n\n      var _ref9 = _ref8,\n          onKeyDown = _ref9.onKeyDown,\n          onChange = _ref9.onChange,\n          onInput = _ref9.onInput,\n          onBlur = _ref9.onBlur,\n          onChangeText = _ref9.onChangeText,\n          _ref9$refKey = _ref9.refKey,\n          refKey = _ref9$refKey === void 0 ? 'ref' : _ref9$refKey,\n          ref = _ref9.ref,\n          rest = _objectWithoutPropertiesLoose(_ref9, [\"onKeyDown\", \"onChange\", \"onInput\", \"onBlur\", \"onChangeText\", \"refKey\", \"ref\"]);\n\n      /* istanbul ignore next (preact) */\n      var onChangeKey = 'onChange';\n      var eventHandlers = {};\n\n      if (!rest.disabled) {\n        var _eventHandlers;\n\n        eventHandlers = (_eventHandlers = {}, _eventHandlers[onChangeKey] = callAllEventHandlers(onChange, onInput, inputHandleChange), _eventHandlers.onKeyDown = callAllEventHandlers(onKeyDown, inputHandleKeyDown), _eventHandlers.onBlur = callAllEventHandlers(onBlur, inputHandleBlur), _eventHandlers);\n      }\n      /* istanbul ignore if (react-native) */\n\n\n      return _extends((_extends5 = {}, _extends5[refKey] = handleRefs(ref, function (inputNode) {\n        inputRef.current = inputNode;\n      }), _extends5.id = elementIds.current.inputId, _extends5['aria-autocomplete'] = 'list', _extends5['aria-controls'] = elementIds.current.menuId, _extends5), highlightedIndex > -1 && {\n        'aria-activedescendant': elementIds.current.getItemId(highlightedIndex)\n      }, {\n        'aria-labelledby': elementIds.current.labelId,\n        // https://developer.mozilla.org/en-US/docs/Web/Security/Securing_your_site/Turning_off_form_autocompletion\n        // revert back since autocomplete=\"nope\" is ignored on latest Chrome and Opera\n        autoComplete: 'off',\n        value: inputValue\n      }, eventHandlers, {}, rest);\n    },\n    getComboboxProps: function getComboboxProps(_ref10) {\n      var _extends6;\n\n      if (_ref10 === void 0) {\n        _ref10 = {};\n      }\n\n      var _ref11 = _ref10,\n          _ref11$refKey = _ref11.refKey,\n          refKey = _ref11$refKey === void 0 ? 'ref' : _ref11$refKey,\n          ref = _ref11.ref,\n          rest = _objectWithoutPropertiesLoose(_ref11, [\"refKey\", \"ref\"]);\n\n      return _extends((_extends6 = {}, _extends6[refKey] = handleRefs(ref, function (comboboxNode) {\n        comboboxRef.current = comboboxNode;\n      }), _extends6.role = 'combobox', _extends6['aria-haspopup'] = 'listbox', _extends6['aria-owns'] = elementIds.current.menuId, _extends6['aria-expanded'] = isOpen, _extends6), rest);\n    },\n    getToggleButtonProps: function getToggleButtonProps(_ref6) {\n      var _extends4;\n\n      if (_ref6 === void 0) {\n        _ref6 = {};\n      }\n\n      var _ref7 = _ref6,\n          onClick = _ref7.onClick,\n          onPress = _ref7.onPress,\n          _ref7$refKey = _ref7.refKey,\n          refKey = _ref7$refKey === void 0 ? 'ref' : _ref7$refKey,\n          ref = _ref7.ref,\n          rest = _objectWithoutPropertiesLoose(_ref7, [\"onClick\", \"onPress\", \"refKey\", \"ref\"]);\n\n      return _extends((_extends4 = {}, _extends4[refKey] = handleRefs(ref, function (toggleButtonNode) {\n        toggleButtonRef.current = toggleButtonNode;\n      }), _extends4.id = elementIds.current.toggleButtonId, _extends4.tabIndex = -1, _extends4), !rest.disabled && _extends({}, {\n        onClick: callAllEventHandlers(onClick, toggleButtonHandleClick)\n      }), {}, rest);\n    },\n    // actions.\n    toggleMenu: function toggleMenu() {\n      dispatch({\n        type: FunctionToggleMenu$1\n      });\n    },\n    openMenu: function openMenu() {\n      dispatch({\n        type: FunctionOpenMenu$1\n      });\n    },\n    closeMenu: function closeMenu() {\n      dispatch({\n        type: FunctionCloseMenu$1\n      });\n    },\n    setHighlightedIndex: function setHighlightedIndex(newHighlightedIndex) {\n      dispatch({\n        type: FunctionSetHighlightedIndex$1,\n        highlightedIndex: newHighlightedIndex\n      });\n    },\n    setInputValue: function setInputValue(newInputValue) {\n      dispatch({\n        type: FunctionSetInputValue$1,\n        inputValue: newInputValue\n      });\n    },\n    selectItem: function selectItem(newSelectedItem) {\n      dispatch({\n        type: FunctionSelectItem$1,\n        selectedItem: newSelectedItem\n      });\n    },\n    reset: function reset() {\n      dispatch({\n        type: FunctionReset$1\n      });\n    },\n    // state.\n    highlightedIndex: highlightedIndex,\n    isOpen: isOpen,\n    selectedItem: selectedItem,\n    inputValue: inputValue\n  };\n}\n\nexport default Downshift;\nexport { resetIdCounter, useCombobox, useSelect };\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n","import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n","import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n","import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n","import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n"],"sourceRoot":""}