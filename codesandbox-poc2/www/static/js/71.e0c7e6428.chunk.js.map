{"version":3,"sources":["webpack:///C:/repos/codesandbox-client/node_modules/subworkers/subworkers.js"],"names":["isWorker","document","e","self","Worker","path","that","this","id","Math","random","toString","substr","eventListeners","addEventListener","data","_from","newEvent","MessageEvent","initMessageEvent","message","dispatchEvent","onmessage","location","pathname","slashedPath","charAt","absPath","substring","lastIndexOf","postMessage","_subworker","cmd","prototype","onerror","transfer","terminate","type","listener","useCapture","push","removeEventListener","index","indexOf","splice","event","listeners","i","length","allWorkers","cmds","newWorker","worker","envelope","target","passMessage","messageRecieved","oldWorker","constructor","TypeError","blobIndex"],"mappings":"2GAAA,WAGE,IAAIA,GAAW,EACf,IACEC,SACA,MAAOC,GACPF,GAAW,EAGTA,IACGG,KAAKC,SACRD,KAAKC,OAAS,SAASC,GACrB,IAAIC,EAAOC,KACXA,KAAKC,GAAKC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAE/CL,KAAKM,eAAiB,CACpB,QAAW,IAEbV,KAAKW,iBAAiB,WAAW,SAASZ,GACxC,GAAIA,EAAEa,KAAKC,QAAUV,EAAKE,GAAG,CAC3B,IAAIS,EAAW,IAAIC,aAAa,WAChCD,EAASE,iBAAiB,WAAW,GAAO,EAAOjB,EAAEa,KAAKK,QAASd,EAAM,GAAI,KAAM,IACnFA,EAAKe,cAAcJ,GACfX,EAAKgB,WACPhB,EAAKgB,UAAUL,OAKrB,IAAIM,EAAWpB,KAAKoB,SAASC,SACzBC,EAAgC,KAAlBpB,EAAKqB,OAAO,GAAYrB,EAAO,IAAMA,EACnDsB,EAAUJ,EAASK,UAAU,EAAGL,EAASM,YAAY,MAAQJ,EACjEtB,KAAK2B,YAAY,CACfC,YAAY,EACZC,IAAK,YACLxB,GAAID,KAAKC,GACTH,KAAMsB,KAGVvB,OAAO6B,UAAY,CACjBC,QAAS,KACTZ,UAAW,KACXQ,YAAa,SAASV,EAASe,GAC7BhC,KAAK2B,YAAY,CACfC,YAAY,EACZvB,GAAID,KAAKC,GACTwB,IAAK,cACLZ,QAASA,EACTe,SAAUA,GACTA,IAELC,UAAW,WACTjC,KAAK2B,YAAY,CACfC,YAAY,EACZC,IAAK,YACLxB,GAAID,KAAKC,MAGbM,iBAAkB,SAASuB,EAAMC,EAAUC,GACrChC,KAAKM,eAAewB,IACtB9B,KAAKM,eAAewB,GAAMG,KAAKF,IAGnCG,oBAAqB,SAASJ,EAAMC,EAAUC,GAC5C,GAAMF,KAAQ9B,KAAKM,eAAnB,CAGA,IAAI6B,EAAQnC,KAAKM,eAAewB,GAAMM,QAAQL,IAC/B,IAAXI,GACFnC,KAAKM,eAAewB,GAAMO,OAAOF,EAAO,KAG5CrB,cAAe,SAASwB,GAEtB,IADA,IAAIC,EAAYvC,KAAKM,eAAegC,EAAMR,MACjCU,EAAI,EAAGA,EAAID,EAAUE,OAAQD,IACpCD,EAAUC,GAAGF,OAOvB,IAAII,EAAa,GACbC,EAAO,CACTC,UAAW,SAASN,GAClB,IAAIO,EAAS,IAAIhD,OAAOyC,EAAM9B,KAAKV,MACnC+C,EAAOtC,iBAAiB,WAAW,SAASZ,GAC1C,IAAImD,EAAW,CACbrC,MAAO6B,EAAM9B,KAAKP,GAClBY,QAASlB,EAAEa,MAEb8B,EAAMS,OAAOxB,YAAYuB,MAE3BJ,EAAWJ,EAAM9B,KAAKP,IAAM4C,GAE9BhB,UAAW,SAASS,GAClBI,EAAWJ,EAAM9B,KAAKP,IAAI4B,aAE5BmB,YAAa,SAASV,GACpBI,EAAWJ,EAAM9B,KAAKP,IAAIsB,YAAYe,EAAM9B,KAAKK,QAASyB,EAAM9B,KAAKoB,YAGrEqB,EAAkB,SAASX,GACzBA,EAAM9B,KAAKgB,YACbmB,EAAKL,EAAM9B,KAAKiB,KAAKa,IAMrBY,EAAYrD,OAChBA,OAAS,SAASC,GAChB,GAAIE,KAAKmD,cAAgBtD,OACvB,MAAM,IAAIuD,UAAU,4HAGtB,IAAIC,EAAYvD,EAAKsC,QAAQ,UAEV,IAAfiB,GAAkC,IAAdA,IACtBvD,EAAOA,EAAKuB,UAAUgC,IAGxB,IAAIT,EAAY,IAAIM,EAAUpD,GAG9B,OAFA8C,EAAUrC,iBAAiB,UAAW0C,GAE/BL,GA9HX","file":"static/js/71.e0c7e6428.chunk.js","sourcesContent":["(function(){\n\n  /* Detect if we're in a worker or not */\n  var isWorker = false;\n  try {\n    document;\n  } catch (e){\n    isWorker = true;\n  }\n\n  if (isWorker){\n    if (!self.Worker){\n      self.Worker = function(path){\n        var that = this;\n        this.id = Math.random().toString(36).substr(2, 5);\n\n        this.eventListeners = {\n          \"message\": []\n        };\n        self.addEventListener(\"message\", function(e){\n          if (e.data._from === that.id){\n            var newEvent = new MessageEvent(\"message\");\n            newEvent.initMessageEvent(\"message\", false, false, e.data.message, that, \"\", null, []);\n            that.dispatchEvent(newEvent);\n            if (that.onmessage){\n              that.onmessage(newEvent);\n            }\n          }\n        });\n\n        var location = self.location.pathname;\n        var slashedPath = path.charAt(0) == '/' ? path : '/' + path;\n        var absPath = location.substring(0, location.lastIndexOf('/')) + slashedPath;\n        self.postMessage({\n          _subworker: true,\n          cmd: 'newWorker',\n          id: this.id,\n          path: absPath\n        });\n      };\n      Worker.prototype = {\n        onerror: null,\n        onmessage: null,\n        postMessage: function(message, transfer){\n          self.postMessage({\n            _subworker: true,\n            id: this.id,\n            cmd: 'passMessage',\n            message: message,\n            transfer: transfer,\n          }, transfer);\n        },\n        terminate: function(){\n          self.postMessage({\n            _subworker: true,\n            cmd: 'terminate',\n            id: this.id\n          });\n        },\n        addEventListener: function(type, listener, useCapture){\n          if (this.eventListeners[type]){\n            this.eventListeners[type].push(listener);\n          }\n        },\n        removeEventListener: function(type, listener, useCapture){\n          if (!(type in this.eventListeners)) {\n            return;\n          }\n          var index = this.eventListeners[type].indexOf(listener);\n          if (index !== -1){\n            this.eventListeners[type].splice(index, 1);\n          }\n        },\n        dispatchEvent: function(event){\n          var listeners = this.eventListeners[event.type];\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i](event);\n          }\n        }\n      };\n    }\n  }\n\n  var allWorkers = {};\n  var cmds = {\n    newWorker: function(event){\n      var worker = new Worker(event.data.path);\n      worker.addEventListener(\"message\", function(e){\n        var envelope = {\n          _from: event.data.id,\n          message: e.data\n        }\n        event.target.postMessage(envelope);\n      });\n      allWorkers[event.data.id] = worker;\n    },\n    terminate: function(event){\n      allWorkers[event.data.id].terminate();\n    },\n    passMessage: function(event){\n      allWorkers[event.data.id].postMessage(event.data.message, event.data.transfer);\n    }\n  }\n  var messageRecieved = function(event){\n    if (event.data._subworker){\n      cmds[event.data.cmd](event);\n    }\n  };\n\n\n  /* Hijack Worker */\n  var oldWorker = Worker;\n  Worker = function(path){\n    if (this.constructor !== Worker){\n      throw new TypeError(\"Failed to construct 'Worker': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n    }\n\n    var blobIndex = path.indexOf('blob:');\n    \n    if (blobIndex !== -1 && blobIndex !== 0 ) {\n      path = path.substring(blobIndex);\n    }\n\n    var newWorker = new oldWorker(path);\n    newWorker.addEventListener(\"message\", messageRecieved);\n\n    return newWorker;\n  };\n\n})();\n"],"sourceRoot":""}