{"version":3,"sources":["webpack:///./src/app/overmind/effects/vscode/LinterWorker/index.js","webpack:///./src/app/components/CodeEditor/CodeMirror/index.js","webpack:///./src/app/components/CodeEditor/FuzzySearch/elements.js","webpack:///./src/app/components/CodeEditor/FuzzySearch/index.js"],"names":["module","exports","Worker","documentCache","highlightLines","cm","highlightedLines","forEach","line","addLineClass","CodemirrorEditor","props","listen","handleMessage","action","resolveModule","path","sandbox","modules","directories","setCurrentModule","id","e","errors","codeLines","codemirror","getValue","split","_","i","removeLineClass","error","length","code","updateLinting","currentModule","test","title","trim","linterWorker","postMessage","version","onmessage","event","data","markers","map","message","severity","from","CodeMirror","Pos","startLineNumber","startColumn","to","endLineNumber","endColumn","settings","a","defaultKeys","listSelections","toggleComment","lineComment","setState","fuzzySearchEnabled","forceUpdate","updateArgHints","server","showAutoComplete","filter","RegExp","display","input","textarea","value","slice","match","showHint","hint","getHint","completeSingle","customKeys","Up","_cm","handle","moveFocus","Down","PageUp","menuSize","PageDown","Home","setFocus","End","Enter","pick","Tab","vimMode","Esc","close","autoCompleteEnabled","tern","window","TernServer","defs","ecmascriptJson","on","setOption","complete","showType","showDocs","jumpToDef","jumpBack","rename","selectName","somethingSelected","indentSelection","spaces","Array","getOption","join","replaceSelection","execCommand","console","off","lintEnabled","LinterWorker","getAnnotations","validate","async","tabWidth","newModule","getMode","mode","Doc","swapDoc","changeCode","configureEmmet","moduleId","pos","getCursor","setCursor","getCode","setValue","kind","Promise","all","name","el","codemirrorElement","onlyViewMode","commands","save","handleSaveCode","getCodeMirror","handleChange","changeSettings","change","origin","onChange","shortid","onSave","addon","newMode","jsx","addons","syntax","closeFuzzySearch","__isTouch","focus","onModuleChange","state","codeSandboxListener","setupCodeSandboxListener","resizeEditor","nextProps","this","width","height","theme","vscodeTheme","disposeInitializer","initializeCodemirror","then","onInitialized","refresh","hideNavigation","fontFamily","lineHeight","currentModuleId","style","fontSize","ref","node","React","withTheme","Container","styled","div","background","InputContainer","Items","Entry","isNotSynced","css","isActive","secondary","clearer","NotSyncedIconWithMargin","NotSyncedIcon","templateColor","CurrentModuleText","Name","span","Path","FuzzySearch","m","pathArray","Object","keys","paths","matchSorter","item","keyCode","ESC","modulePathData","getModulePath","depth","groupedPaths","groupBy","n","sortedPaths","values","group","sortBy","flattenedPaths","flatten","reduce","replace","defaultHighlightedIndex","defaultIsOpen","itemToString","getInputProps","getItemProps","selectedItem","inputValue","highlightedIndex","onKeyUp","handleKeyUp","onBlur","setTimeout","getItems","index","isSelected","key","EntryIcons","type","getType"],"mappings":"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","file":"static/js/codemirror-editor.7e24f7c25.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(\"/\" + \"monaco-linter.e5920657.worker.js\");\n};","// @flow\n\nimport 'codemirror/addon/dialog/dialog';\nimport 'codemirror/addon/hint/show-hint';\nimport 'codemirror/addon/tern/tern';\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint';\n\nimport { resolveModule } from '@codesandbox/common/lib/sandbox/modules';\nimport type { Module, ModuleError } from '@codesandbox/common/lib/types';\nimport { getCodeMirror } from 'app/utils/codemirror';\nimport CodeMirror from 'codemirror';\nimport { listen } from 'codesandbox-api';\nimport * as React from 'react';\nimport { debounce } from 'lodash-es';\nimport { withTheme } from 'styled-components';\n// eslint-disable-next-line\nimport LinterWorker from 'worker-loader?publicPath=/&name=monaco-linter.[hash:8].worker.js!app/overmind/effects/vscode/LinterWorker/index';\n\nimport FuzzySearch from '../FuzzySearch';\nimport type { Editor, Props } from '../types';\nimport { CodeContainer, Container } from './elements';\n\ntype State = { fuzzySearchEnabled: boolean };\n\nconst documentCache = {};\n\nconst highlightLines = (\n  cm: typeof CodeMirror,\n  highlightedLines: Array<number>\n) => {\n  highlightedLines.forEach(line => {\n    cm.addLineClass(+line - 1, 'background', 'cm-line-highlight');\n  });\n};\n\nclass CodemirrorEditor extends React.Component<Props, State> implements Editor {\n  codemirror: typeof CodeMirror;\n\n  codemirrorElement: ?HTMLDivElement;\n  server: $PropertyType<CodeMirror, 'TernServer'>;\n  sandbox: $PropertyType<Props, 'sandbox'>;\n  currentModule: $PropertyType<Props, 'currentModule'>;\n  settings: $PropertyType<Props, 'settings'>;\n  dependencies: $PropertyType<Props, 'dependencies'>;\n  disposeInitializer: ?() => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      fuzzySearchEnabled: false,\n    };\n    this.sandbox = props.sandbox;\n    this.currentModule = props.currentModule;\n    this.settings = props.settings;\n\n    this.codeSandboxListener = this.setupCodeSandboxListener();\n    this.resizeEditor = debounce(this.resizeEditor, 30);\n  }\n\n  setupCodeSandboxListener = () => listen(this.handleMessage);\n\n  handleMessage = action => {\n    if (action.action === 'editor.open-module') {\n      try {\n        const module = resolveModule(\n          action.path,\n          this.sandbox.modules,\n          this.sandbox.directories\n        );\n\n        this.setCurrentModule(module.id);\n      } catch (e) {\n        /* Ignore */\n      }\n    }\n  };\n\n  shouldComponentUpdate(nextProps: Props) {\n    if (\n      this.props.width !== nextProps.width ||\n      this.props.height !== nextProps.height\n    ) {\n      this.resizeEditor();\n      return true;\n    }\n\n    if (this.props.theme.vscodeTheme !== nextProps.theme.vscodeTheme) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentWillUnmount() {\n    if (this.disposeInitializer) {\n      this.disposeInitializer();\n    }\n    if (this.codeSandboxListener) {\n      this.codeSandboxListener();\n    }\n  }\n\n  componentDidMount() {\n    this.initializeCodemirror().then(() => {\n      this.changeSettings(this.settings);\n      this.configureEmmet();\n\n      if (this.props.onInitialized) {\n        this.disposeInitializer = this.props.onInitialized(this);\n      }\n    });\n  }\n\n  resizeEditor() {\n    // eslint-disable-next-line no-unused-expressions\n    this.codemirror?.refresh();\n  }\n\n  setErrors = (errors: Array<ModuleError>) => {\n    const codeLines = this.codemirror.getValue().split('\\n');\n\n    codeLines.forEach((_, i) => {\n      this.codemirror.removeLineClass(i, 'background', 'cm-line-error');\n    });\n\n    errors.forEach(error => {\n      if (error.line !== 0 && error.line <= codeLines.length) {\n        this.codemirror.addLineClass(\n          error.line - 1,\n          'background',\n          'cm-line-error'\n        );\n      }\n    });\n  };\n\n  linterWorker: ?Worker;\n\n  validate = (code: string = '', updateLinting: Function) => {\n    if (!this.currentModule || !/\\.jsx?$/.test(this.currentModule.title)) {\n      updateLinting([]);\n      return;\n    }\n\n    if (code.trim() === '') {\n      updateLinting([]);\n      return;\n    }\n\n    const { linterWorker } = this;\n    if (linterWorker) {\n      linterWorker.postMessage({\n        code,\n        title: this.currentModule.title,\n        version: code,\n      });\n\n      linterWorker.onmessage = (event: MessageEvent) => {\n        // $FlowIssue\n        const { markers, version } = event.data;\n\n        if (version === code) {\n          updateLinting(\n            markers.map(error => ({\n              message: `eslint: ${error.message}`,\n              severity: error.severity === 2 ? 'warning' : 'error',\n              from: new CodeMirror.Pos(\n                error.startLineNumber - 1,\n                error.startColumn - 1\n              ),\n              to: new CodeMirror.Pos(\n                error.endLineNumber - 1,\n                error.endColumn - 1\n              ),\n            }))\n          );\n        }\n      };\n    }\n  };\n\n  changeSettings = async (settings: $PropertyType<Props, 'settings'>) => {\n    const defaultKeys = {\n      'Cmd-/': cm => {\n        cm.listSelections().forEach(() => {\n          cm.toggleComment({ lineComment: '//' });\n        });\n      },\n      'Cmd-P': () => {\n        this.setState({ fuzzySearchEnabled: true }, () => this.forceUpdate());\n      },\n    };\n\n    const updateArgHints = cm => {\n      if (this.server) {\n        this.server.updateArgHints(cm);\n      }\n    };\n\n    const showAutoComplete = cm => {\n      if (this.server) {\n        const filter = new RegExp('[.a-z_$]', 'i');\n\n        // TODO: look why one of these values is undefined\n        if (\n          cm &&\n          cm.display &&\n          cm.display.input &&\n          cm.display.input.textarea &&\n          cm.display.input.textarea.value &&\n          cm.display.input.textarea.value.slice(-1).match(filter)\n        ) {\n          cm.showHint({\n            hint: this.server.getHint,\n            completeSingle: false,\n            customKeys: {\n              Up: (_cm, handle) => handle.moveFocus(-1),\n              Down: (_cm, handle) => handle.moveFocus(1),\n              PageUp: (_cm, handle) =>\n                handle.moveFocus(-handle.menuSize() + 1, true),\n              PageDown: (_cm, handle) =>\n                handle.moveFocus(handle.menuSize() - 1, true),\n              Home: (_cm, handle) => handle.setFocus(0),\n              End: (_cm, handle) => handle.setFocus(handle.length - 1),\n              Enter: (_cm, handle) => handle.pick(),\n              Tab: (_cm, handle) => handle.pick(),\n              // We disable this in vimMode, because we want vim to go from\n              // insert mode to normal mode when you press enter. This does that\n              ...(settings.vimMode\n                ? {}\n                : { Esc: (_cm, handle) => handle.close() }),\n            },\n          });\n        }\n      }\n    };\n\n    if (settings.autoCompleteEnabled) {\n      const tern = await import(\n        /* webpackChunkName: 'codemirror-tern' */ 'codesandbox-deps/dist/tern'\n      );\n      window.tern = tern.tern;\n      this.server =\n        this.server ||\n        new CodeMirror.TernServer({\n          defs: [tern.ecmascriptJson],\n        });\n      this.codemirror.on('cursorActivity', updateArgHints);\n      this.codemirror.on('inputRead', showAutoComplete);\n      this.codemirror.setOption('extraKeys', {\n        'Ctrl-Space': cm => {\n          if (this.server) this.server.complete(cm);\n        },\n        'Ctrl-I': cm => {\n          if (this.server) this.server.showType(cm);\n        },\n        'Ctrl-O': cm => {\n          if (this.server) this.server.showDocs(cm);\n        },\n        'Alt-.': cm => {\n          if (this.server) this.server.jumpToDef(cm);\n        },\n        'Alt-,': cm => {\n          if (this.server) this.server.jumpBack(cm);\n        },\n        'Ctrl-Q': cm => {\n          if (this.server) this.server.rename(cm);\n        },\n        'Ctrl-.': cm => {\n          if (this.server) this.server.selectName(cm);\n        },\n        Tab: cm => {\n          // Indent, or place 2 spaces\n          if (cm.somethingSelected()) {\n            cm.indentSelection('add');\n          } else {\n            const spaces = Array(cm.getOption('indentUnit') + 1).join(' ');\n            cm.replaceSelection(spaces, 'end', '+input');\n\n            try {\n              cm.execCommand('emmetExpandAbbreviation');\n            } catch (e) {\n              console.error(e);\n            }\n          }\n        },\n        Enter: 'emmetInsertLineBreak',\n        ...defaultKeys,\n      });\n    } else {\n      this.server = null;\n      this.codemirror.off('cursorActivity', updateArgHints);\n      this.codemirror.off('inputRead', showAutoComplete);\n    }\n\n    if (settings.vimMode) {\n      await import(\n        /* webpackChunkName: 'codemirror-vim' */ 'codemirror/keymap/vim'\n      );\n      this.codemirror.setOption('keyMap', 'vim');\n    } else {\n      this.codemirror.setOption('keyMap', 'sublime');\n    }\n\n    if (settings.lintEnabled) {\n      if (!this.linterWorker) {\n        this.linterWorker = new LinterWorker();\n\n        this.codemirror.setOption('lint', {\n          getAnnotations: this.validate,\n          async: true,\n        });\n      }\n    } else {\n      this.codemirror.setOption('lint', false);\n    }\n\n    this.codemirror.setOption('tabSize', this.props.settings.tabWidth);\n\n    this.forceUpdate();\n  };\n\n  changeModule = async (newModule: Module) => {\n    this.currentModule = newModule;\n\n    const { currentModule } = this;\n\n    if (!documentCache[currentModule.id]) {\n      const mode = (await this.getMode(currentModule.title)) || 'typescript';\n\n      documentCache[currentModule.id] = new CodeMirror.Doc(\n        currentModule.code || '',\n        mode\n      );\n    }\n\n    this.codemirror.swapDoc(documentCache[currentModule.id]);\n\n    this.changeCode(currentModule.code || '');\n    this.configureEmmet();\n  };\n\n  changeCode = (code: string = '', moduleId: string) => {\n    const pos = this.codemirror.getCursor();\n    this.codemirror.setCursor(pos);\n    if (\n      code !== this.getCode() &&\n      (!moduleId || this.currentModule.id === moduleId)\n    ) {\n      this.codemirror.setValue(code);\n    }\n  };\n\n  getMode = async (title: string) => {\n    if (title == null) return 'jsx';\n\n    const kind = title.match(/\\.([^.]*)$/);\n\n    if (kind) {\n      if (kind[1] === 'css' || kind[1] === 'scss' || kind[1] === 'less') {\n        await import(\n          /* webpackChunkName: 'codemirror-css' */ 'codemirror/mode/css/css'\n        );\n        if (kind[1] === 'less') {\n          return 'text/x-less';\n        }\n        if (kind[1] === 'scss') {\n          return 'text/x-scss';\n        }\n        return 'css';\n      }\n      if (kind[1] === 'html' || kind[1] === 'vue') {\n        await import(\n          /* webpackChunkName: 'codemirror-html' */ 'codemirror/mode/htmlmixed/htmlmixed'\n        );\n\n        if (kind[1] === 'vue') {\n          await Promise.all([\n            import(\n              /* webpackChunkName: 'codemirror-css' */ 'codemirror/mode/css/css'\n            ),\n            import(\n              /* webpackChunkName: 'codemirror-sass' */ 'codemirror/mode/sass/sass'\n            ),\n            import(\n              /* webpackChunkName: 'codemirror-stylus' */ 'codemirror/mode/stylus/stylus'\n            ),\n            import(\n              /* webpackChunkName: 'codemirror-handlebars' */ 'codemirror/mode/handlebars/handlebars'\n            ),\n            import(\n              /* webpackChunkName: 'codemirror-vue' */ 'codemirror/mode/vue/vue'\n            ),\n          ]);\n          return { name: 'vue' };\n        }\n\n        return 'htmlmixed';\n      }\n      if (kind[1] === 'md') {\n        await import(\n          /* webpackChunkName: 'codemirror-markdown' */ 'codemirror/mode/markdown/markdown'\n        );\n        return 'markdown';\n      }\n      if (kind[1] === 'json') {\n        return 'application/json';\n      }\n      if (kind[1] === 'sass') {\n        await import(\n          /* webpackChunkName: 'codemirror-sass' */ 'codemirror/mode/sass/sass'\n        );\n        return 'sass';\n      }\n      if (kind[1] === 'styl') {\n        await import(\n          /* webpackChunkName: 'codemirror-stylus' */ 'codemirror/mode/stylus/stylus'\n        );\n        return 'stylus';\n      }\n    }\n\n    return 'jsx';\n  };\n\n  initializeCodemirror = async () => {\n    const el = this.codemirrorElement;\n    const { code, id, title } = this.currentModule;\n\n    if (!this.props.onlyViewMode && this.props.settings.vimMode) {\n      // We let codemirror handle save when vim mode is enabled, because this allows\n      // us to have :w functionality\n      CodeMirror.commands.save = this.handleSaveCode;\n    }\n\n    const mode = (await this.getMode(title)) || 'typescript';\n\n    documentCache[id] = new CodeMirror.Doc(code || '', mode);\n\n    this.codemirror = getCodeMirror(el, documentCache[id]);\n\n    if (this.props.highlightedLines) {\n      highlightLines(this.codemirror, this.props.highlightedLines);\n    }\n\n    this.codemirror.on('changes', this.handleChange);\n    this.changeSettings(this.settings);\n  };\n\n  handleChange = (cm: typeof CodeMirror, change: { origin: string }) => {\n    if (change.origin !== 'setValue' && this.props.onChange) {\n      this.props.onChange(cm.getValue(), this.currentModule.shortid);\n    }\n  };\n\n  getCode = () => this.codemirror.getValue();\n\n  handleSaveCode = async () => {\n    const { onSave } = this.props;\n    if (onSave) {\n      onSave(this.codemirror.getValue());\n    }\n  };\n\n  configureEmmet = async () => {\n    const { title } = this.currentModule;\n    const mode = (await this.getMode(title)) || 'typescript';\n\n    const newMode = mode === 'htmlmixed' ? 'html' : mode;\n    const addon = newMode === 'jsx' ? { jsx: true } : null;\n\n    this.codemirror.setOption('emmet', {\n      addons: addon,\n      syntax: newMode,\n    });\n  };\n\n  closeFuzzySearch = () => {\n    this.setState({ fuzzySearchEnabled: false }, () => this.forceUpdate());\n  };\n\n  setCurrentModule = (moduleId: string) => {\n    this.closeFuzzySearch();\n    if (!window.__isTouch) {\n      this.codemirror.focus();\n    }\n    if (this.props.onModuleChange) {\n      this.props.onModuleChange(moduleId);\n    }\n  };\n\n  render() {\n    const { hideNavigation } = this.props;\n    const { settings, sandbox, currentModule } = this;\n\n    return (\n      <Container>\n        <CodeContainer\n          fontFamily={settings.fontFamily}\n          lineHeight={settings.lineHeight}\n          hideNavigation={hideNavigation}\n        >\n          {this.state.fuzzySearchEnabled && (\n            <FuzzySearch\n              closeFuzzySearch={this.closeFuzzySearch}\n              setCurrentModule={this.setCurrentModule}\n              modules={sandbox.modules}\n              directories={sandbox.directories}\n              currentModuleId={currentModule.id}\n            />\n          )}\n          <div\n            style={{\n              height: '100%',\n              fontSize: settings.fontSize || 14,\n            }}\n            ref={node => {\n              this.codemirrorElement = node;\n            }}\n          />\n        </CodeContainer>\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(CodemirrorEditor);\n","import styled, { css } from 'styled-components';\nimport NotSyncedIcon from 'react-icons/lib/go/primitive-dot';\n\nexport const Container = styled.div`\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n\n  z-index: 60;\n\n  margin: auto;\n  padding-bottom: 0.25rem;\n\n  background-color: ${props => props.theme.background};\n\n  max-width: 650px;\n  width: 100%;\n\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.6);\n`;\n\nexport const InputContainer = styled.div`\n  padding: 0.5rem;\n  input {\n    width: 100%;\n  }\n`;\n\nexport const Items = styled.div`\n  max-height: 500px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nexport const Entry = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 0.875rem;\n  padding: 0.25rem 0.75rem;\n  cursor: pointer;\n\n  ${({ isNotSynced }) =>\n    isNotSynced &&\n    css`\n      padding-left: 2rem;\n    `};\n  color: rgba(255, 255, 255, 0.8);\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      background-color: ${props => props.theme.secondary.clearer(0.7)};\n    `};\n`;\n\nexport const NotSyncedIconWithMargin = styled(NotSyncedIcon)`\n  position: absolute;\n  left: 0.75rem;\n  top: 0;\n  color: ${props => props.theme.templateColor || props.theme.secondary};\n  vertical-align: middle;\n\n  margin-top: 6px;\n`;\n\nexport const CurrentModuleText = styled.div`\n  position: absolute;\n  right: 0.75rem;\n  font-weight: 500;\n  color: ${props => props.theme.secondary};\n`;\n\nexport const Name = styled.span`\n  margin: 0 0.5rem;\n`;\n\nexport const Path = styled.span`\n  margin: 0 0.25rem;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n`;\n","import * as React from 'react';\nimport { sortBy, groupBy, flatten } from 'lodash-es';\nimport Downshift from 'downshift';\nimport matchSorter from 'match-sorter';\nimport { getModulePath } from '@codesandbox/common/lib/sandbox/modules';\nimport Input from '@codesandbox/common/lib/components/Input';\nimport EntryIcons from 'app/pages/Sandbox/Editor/Workspace/Files/DirectoryEntry/Entry/EntryIcons';\n// eslint-disable-next-line import/extensions\nimport getType from 'app/utils/get-type.ts';\nimport { ESC } from '@codesandbox/common/lib/utils/keycodes';\nimport {\n  Container,\n  InputContainer,\n  Items,\n  Entry,\n  NotSyncedIconWithMargin,\n  CurrentModuleText,\n  Name,\n  Path,\n} from './elements';\n\nexport default class FuzzySearch extends React.PureComponent {\n  // This is a precached map of paths to module\n  paths = {};\n\n  UNSAFE_componentWillMount() {\n    const { modules, directories } = this.props;\n    const modulePathData = modules.map(m => {\n      const path = getModulePath(modules, directories, m.id);\n      return {\n        m,\n        path,\n        depth: path.split('/').length,\n      };\n    });\n\n    const groupedPaths = groupBy(modulePathData, n => n.depth);\n    const sortedPaths = Object.values(groupedPaths).map(group =>\n      sortBy(group, n => n.path)\n    );\n    const flattenedPaths = flatten(sortedPaths);\n\n    this.paths = flattenedPaths.reduce(\n      (paths, { m, path }) => ({\n        ...paths,\n        [m.id]: { path: path.replace('/', ''), m },\n      }),\n      {}\n    );\n  }\n\n  itemToString = m => (m ? m.path : '');\n\n  getItems = (value = '') => {\n    const pathArray = Object.keys(this.paths).map(id => this.paths[id]);\n\n    return matchSorter(pathArray, value, { keys: ['path'] });\n  };\n\n  onChange = item => {\n    this.props.setCurrentModule(item.m.id);\n  };\n\n  handleKeyUp = e => {\n    if (e.keyCode === ESC) {\n      this.props.closeFuzzySearch();\n    }\n  };\n\n  render() {\n    const { currentModuleId } = this.props;\n    return (\n      <Container>\n        <Downshift\n          defaultHighlightedIndex={0}\n          defaultIsOpen\n          onChange={this.onChange}\n          itemToString={this.itemToString}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            selectedItem,\n            inputValue,\n            highlightedIndex,\n          }) => (\n            <div style={{ width: '100%' }}>\n              <InputContainer>\n                <Input\n                  {...getInputProps({\n                    ref: el => el && el.focus(),\n                    onKeyUp: this.handleKeyUp,\n                    // Timeout so the fuzzy handler can still select the module\n                    onBlur: () => setTimeout(this.props.closeFuzzySearch, 100),\n                  })}\n                />\n              </InputContainer>\n              <Items>\n                {this.getItems(inputValue).map((item, index) => (\n                  <Entry\n                    {...getItemProps({\n                      item,\n                      index,\n                      isActive: highlightedIndex === index,\n                      isSelected: selectedItem === item,\n                    })}\n                    key={item.m.id}\n                    isNotSynced={item.m.isNotSynced}\n                  >\n                    {item.m.isNotSynced && <NotSyncedIconWithMargin />}\n                    <EntryIcons\n                      isNotSynced={item.m.isNotSynced}\n                      type={getType(item.m.title)}\n                      error={item.m.errors && item.m.errors.length > 0}\n                    />\n                    <Name>{item.m.title}</Name>\n                    {item.m.title !== this.itemToString(item) && (\n                      <Path>{this.itemToString(item)}</Path>\n                    )}\n                    {item.m.id === currentModuleId && (\n                      <CurrentModuleText>currently opened</CurrentModuleText>\n                    )}\n                  </Entry>\n                ))}\n              </Items>\n            </div>\n          )}\n        </Downshift>\n      </Container>\n    );\n  }\n}\n"],"sourceRoot":""}