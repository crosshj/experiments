{"version":3,"sources":["webpack:///./src/embed/components/Content/Monaco/grammars/tmGrammars/TypeScriptReact.tmLanguage","webpack:///./src/embed/components/Content/Monaco/grammars/tmGrammars/css.json.tmLanguage","webpack:///./src/embed/components/Content/Monaco/grammars/tmGrammars/html.json.tmLanguage","webpack:///./src/embed/components/Content/Monaco/workers/fetch-dependency-typings.js","webpack:///./config/stubs/lru-cache.js","webpack:///./src/app/components/CodeEditor/FuzzySearch/elements.js","webpack:///./src/app/components/CodeEditor/FuzzySearch/index.js","webpack:///./src/embed/components/Content/Monaco/grammars/set-grammars.js","webpack:///./src/embed/components/Content/Monaco/grammars/configure-tokenizer.js","webpack:///./src/embed/components/Content/Monaco/live-decorations.js","webpack:///./src/embed/components/Content/Monaco/index.js","webpack:///./src/embed/components/Content/Monaco/event-to-transform.js"],"names":["module","exports","Worker","LRUCache","makeSymbol","Map","util","Yallist","MAX","Symbol","key","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","naiveLength","options","this","max","Infinity","lc","length","stale","maxAge","dispose","noDisposeOnSet","reset","forEachStep","self","fn","node","thisp","hit","value","isStale","del","undefined","call","get","doUse","unshiftNode","diff","Date","now","trim","walker","tail","prev","delete","removeNode","Entry","Object","defineProperty","prototype","set","mL","enumerable","allowStale","mA","lC","forEach","rforEach","head","next","keys","toArray","map","k","values","dump","v","e","filter","h","dumpLru","inspect","n","opts","str","extras","didFirst","item","split","join","val","len","has","unshift","peek","pop","load","arr","l","expiresAt","prune","Container","styled","div","props","theme","background","InputContainer","Items","isNotSynced","css","isActive","secondary","clearer","NotSyncedIconWithMargin","NotSyncedIcon","templateColor","CurrentModuleText","Name","span","Path","FuzzySearch","m","path","pathArray","paths","id","matchSorter","setCurrentModule","keyCode","ESC","closeFuzzySearch","modules","directories","modulePathData","getModulePath","depth","groupedPaths","groupBy","sortedPaths","group","sortBy","flattenedPaths","flatten","reduce","replace","currentModuleId","defaultHighlightedIndex","defaultIsOpen","onChange","itemToString","getInputProps","getItemProps","selectedItem","inputValue","highlightedIndex","style","width","ref","el","focus","onKeyUp","handleKeyUp","onBlur","setTimeout","getItems","index","isSelected","EntryIcons","type","getType","title","error","errors","React","monacoTextmate1","require","TokenizerState","_ruleStack","other","wireTmGrammars","monaco","registry","languages","Promise","all","Array","from","languageId","a","loadGrammar","grammar","setTokensProvider","getInitialState","INITIAL","tokenize","line","state","res","tokenizeLine","ruleStack","endState","tokens","token","scopes","grammarsLoaded","liftOff","loadWASM","Registry","getGrammarDefinition","scopeName","format","content","cssGrammar","htmlGrammar","tsGrammar","grammars","fadeIn","keyframes","opacity","fadeOut","userClassesGenerated","userSelectionDecorations","getSelection","lines","selection","startSelection","lineAndColumnToIndex","startLineNumber","startColumn","endSelection","endLineNumber","endColumn","cursorPosition","positionLineNumber","positionColumn","modelCache","MonacoEditor","editor","window","CSEditor","requestAnimationFrame","setupWorkers","onDidChangeModelContent","isLive","sendTransforms","receivingCode","sendChangeOperations","handleChange","typescript","typescriptDefaults","setMaximumWorkerIdleTime","javascriptDefaults","setEagerModelSync","setCompilerOptions","sandbox","currentModule","initializeModules","openNewModel","addEventListener","resizeEditor","sizeProbeInterval","setInterval","absoluteWidth","absoluteHeight","resizeEditorInstantly","dependencies","fetchDependencyTypings","getConfigSchemas","hasNativeTypescript","addAction","label","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_P","precondition","keybindingContext","contextMenuGroupId","contextMenuOrder","run","setState","fuzzySearchEnabled","forceUpdate","onDidChangeCursorSelection","selectionChange","onSelectionChanged","getModel","getLinesContent","data","primary","secondarySelections","s","reason","source","onSelectionChangedDebounced","moduleShortid","shortid","cancel","onInitialized","disposeInitializer","addCommand","KEY_S","onSave","getCode","registerAutoCompletions","existingConfig","tsconfig","compilerOptions","compilerDefaults","jsxFactory","reactNamespace","jsx","JsxEmit","target","ScriptTarget","ES2016","allowNonTsExtensions","moduleResolution","ModuleResolutionKind","NodeJs","ModuleKind","ES2015","System","experimentalDecorators","noEmit","allowJs","typeRoots","forceConsistentCasingInFileNames","noImplicitReturns","noImplicitThis","noImplicitAny","strictNullChecks","suppressImplicitAnyIndexErrors","noUnusedLocals","newLine","NewLineKind","LineFeed","setDiagnosticsOptions","noSemanticValidation","noSyntaxValidation","receiving","config","newModule","corrections","oldModule","swapDocuments","then","setErrors","setCorrections","onCodeReceived","liveOperationCode","changeEvent","changes","code","otOperation","composedCode","change","newOt","TextOperation","retain","range","targetLength","rangeLength","text","insert","remaining","baseLength","compose","apply","operation","newCode","eventToTransform","console","onModuleStateMismatch","userSelections","userId","decorationId","decorations","color","name","addCursor","position","className","cursorPos","indexToLineAndColumn","push","Range","lineNumber","column","addSelection","start","end","to","prefix","cursorClassName","secondaryCursorClassName","selectionClassName","secondarySelectionClassName","nameStyles","top","backgroundColor","zIndex","padding","borderRadius","borderBottomLeftRadius","fontSize","fontWeight","userSelect","pointerEvents","cursor","animation","animationDelay","animationFillMode","minWidth","deltaDecorations","updateUserSelections","newSandbox","newCurrentModule","resolve","oldSandbox","disposeModules","moduleId","updateCode","lint","getVersionId","pushStack","model","results","i","ops","op","isRetain","isInsert","forceMoveMarkers","isDelete","pushEditOperations","applyEdits","operations","operationsJSON","toJSON","fromJSON","applyOperationToModel","find","settings","lintEnabled","lintWorker","setupLintWorker","updateOptions","getEditorOptions","disposeModel","uri","isCurrentlyOpened","setModel","createModel","newModel","currentPath","errorMarkers","severity","MarkerSeverity","Error","columnEnd","lineEnd","message","x","setModelMarkers","correctionMarkers","correction","Warning","Notice","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","textUntilPosition","getValueInRange","test","endsWith","match","modulesByPath","WeakMap","indexOf","currentModulePath","relativePath","dirname","startsWith","insertText","slice","kind","CompletionItemKind","File","Boolean","deps","detail","Module","typingsFetcherWorker","TypingsFetcherWorker","regex","event","npmDependencies","typings","dependency","includes","onNpmDependencyAdded","addLib","LinterWorker","markers","version","modelPath","dispatch","actions","clear","marker","show","debounce","autoDownloadTypes","setupTypeWorker","classifications","classification","startLine","endLine","inlineClassName","parentKind","getModelById","modelInfo","isDisposed","lib","nextModule","viewState","saveViewState","getMode","mode","postMessage","template","getValue","getTemplate","some","isTypescript","configurations","configurationFiles","p","fetchedSchemas","schema","fetch","json","fileName","schemas","monacoSchemas","fileMatch","jsonDefaults","validate","_diagnosticsOptions","layout","fullPath","getExtraLibs","_extraLibs","commitLibChanges","_onDidChange","fire","creatingModelMap","getEncodedLanguageId","delay","Uri","scheme","tabSize","tabWidth","setValue","restoreViewState","onModuleChange","foundModuleId","mId","getControl","lineEnding","getSettings","ariaLabel","readOnly","transpilationListener","setupTranspilationListener","nextProps","height","vscodeTheme","defineTheme","removeEventListener","terminate","clearInterval","listen","dtsPath","getTextOperation","hideNavigation","editorDidMount","configureEditor","editorWillMount","openReference","withTheme"],"mappings":"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","file":"static/js/monaco-editor.a4c7d4bc0.chunk.js","sourcesContent":["module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!DOCTYPE plist PUBLIC \\\"-//Apple//DTD PLIST 1.0//EN\\\" \\\"http://www.apple.com/DTDs/PropertyList-1.0.dtd\\\">\\n<plist version=\\\"1.0\\\">\\n  <dict>\\n    <key>name</key>\\n    <string>TypeScriptReact</string>\\n    <key>scopeName</key>\\n    <string>source.tsx</string>\\n    <key>fileTypes</key>\\n    <array>\\n      <string>tsx</string>\\n    </array>\\n    <key>uuid</key>\\n    <string>805375ec-d614-41f5-8993-5843fe63ea82</string>\\n    <key>patterns</key>\\n    <array>\\n      <dict>\\n        <key>include</key>\\n        <string>#directives</string>\\n      </dict>\\n      <dict>\\n        <key>include</key>\\n        <string>#statements</string>\\n      </dict>\\n      <dict>\\n        <key>name</key>\\n        <string>comment.line.shebang.ts</string>\\n        <key>match</key>\\n        <string>\\\\A(#!).*(?=$)</string>\\n        <key>captures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.comment.ts</string>\\n          </dict>\\n        </dict>\\n      </dict>\\n    </array>\\n    <key>repository</key>\\n    <dict>\\n      <key>statements</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#template</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#control-statement</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#after-operator-block-as-object-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#decl-block</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#label</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-semicolon</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>declaration</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#decorator</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#var-expr</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#interface-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#enum-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#namespace-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-alias-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#import-equals-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#import-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#export-declaration</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>control-statement</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#switch-statement</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#for-loop</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.trycatch.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(catch|finally|throw|try)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(break|continue|goto)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.loop.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.label.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.loop.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(break|continue|do|goto|while)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.flow.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.switch.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(case|default|switch)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.conditional.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.with.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(with)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.other.debugger.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(debugger)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(declare)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>label</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)(?=\\\\s*\\\\{)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.label.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.separator.label.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#decl-block</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(:)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.label.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.separator.label.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>expression</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expressionWithoutIdentifiers</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#identifiers</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expressionPunctuations</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>expressionWithoutIdentifiers</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#regex</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#template</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#arrow-function</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#paren-expression-possibly-arrow</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#cast</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#ternary-expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#new-expr</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#instanceof-expr</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression-operators</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-call</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#support-objects</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#paren-expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>expressionPunctuations</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-accessor</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>decorator</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.decorator.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))\\\\@</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.decorator.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=\\\\s)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>var-expr</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.var.expr.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?\\\\b(var|let|const(?!\\\\s+enum\\\\b))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=$|^|;|}|(\\\\s+(of|in)\\\\s+))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-variable</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#var-single-variable</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(,)\\\\s*(?!\\\\S)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.separator.comma.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;!,)((?==|;|}|(\\\\s+(of|in)\\\\s+)|^\\\\s*$))|((?&lt;=\\\\S)(?=\\\\s*$))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#destructuring-variable</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#var-single-variable</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#punctuation-comma</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>var-single-variable</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.var-single-variable.expr.tsx</string>\\n            <key>begin</key>\\n            <string>(?x)([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;\\n(:\\\\s*(\\n  (&lt;) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=&gt;)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$)) |\\n(:\\\\s*(=&gt;|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.definition.variable.tsx entity.name.function.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|^|[;,=}]|(\\\\s+(of|in)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#var-single-variable-type-annotation</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.var-single-variable.expr.tsx</string>\\n            <key>begin</key>\\n            <string>([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.definition.variable.tsx variable.other.constant.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|^|[;,=}]|(\\\\s+(of|in)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#var-single-variable-type-annotation</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.var-single-variable.expr.tsx</string>\\n            <key>begin</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.definition.variable.tsx variable.other.readwrite.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|^|[;,=}]|(\\\\s+(of|in)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#var-single-variable-type-annotation</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>var-single-variable-type-annotation</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-annotation</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>destructuring-variable</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object-binding-pattern-variable.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\{)</string>\\n            <key>end</key>\\n            <string>(?=$|^|[;,=}]|(\\\\s+(of|in)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#object-binding-pattern</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-annotation</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.array-binding-pattern-variable.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;!=|:|^of|[^\\\\._$[:alnum:]]of|^in|[^\\\\._$[:alnum:]]in)\\\\s*(?=\\\\[)</string>\\n            <key>end</key>\\n            <string>(?=$|^|[;,=}]|(\\\\s+(of|in)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#array-binding-pattern</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-annotation</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>object-binding-element</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?x)(?=((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))</string>\\n            <key>end</key>\\n            <string>(?=,|\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#object-binding-element-propertyName</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#binding-element</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-binding-pattern</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-variable-rest</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>object-binding-element-propertyName</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?x)(?=((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))</string>\\n        <key>end</key>\\n        <string>(:)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.destructuring.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#array-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#numeric-literal</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.object.property.tsx</string>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>binding-element</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-binding-pattern</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#array-binding-pattern</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-variable-rest</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>destructuring-variable-rest</key>\\n      <dict>\\n        <key>match</key>\\n        <string>(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>\\n        <key>captures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.rest.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.definition.variable.tsx variable.other.readwrite.tsx</string>\\n          </dict>\\n        </dict>\\n      </dict>\\n      <key>object-binding-pattern</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.rest.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-binding-element</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>array-binding-pattern</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.rest.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\]</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#binding-element</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>parameter-name</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(public|protected|private|readonly)\\\\s+(?=(public|protected|private|readonly)\\\\s+)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)(?=\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;\\n(:\\\\s*(\\n  (&lt;) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=&gt;)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$)) |\\n(:\\\\s*(=&gt;|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.rest.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx variable.language.this.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.optional.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.rest.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.parameter.tsx variable.language.this.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.parameter.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.optional.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>destructuring-parameter</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.parameter.object-binding-pattern.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;!=|:)\\\\s*(\\\\{)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.binding-pattern.object.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\}</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.binding-pattern.object.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#parameter-object-binding-element</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.paramter.array-binding-pattern.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;!=|:)\\\\s*(\\\\[)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.binding-pattern.array.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\]</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.binding-pattern.array.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#parameter-binding-element</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#punctuation-comma</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>parameter-object-binding-element</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?x)(?=((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(:))</string>\\n            <key>end</key>\\n            <string>(?=,|\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#object-binding-element-propertyName</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#parameter-binding-element</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#parameter-object-binding-pattern</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-parameter-rest</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>parameter-binding-element</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#parameter-object-binding-pattern</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#parameter-array-binding-pattern</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-parameter-rest</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>destructuring-parameter-rest</key>\\n      <dict>\\n        <key>match</key>\\n        <string>(?:(\\\\.\\\\.\\\\.)\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)</string>\\n        <key>captures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.rest.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.parameter.tsx</string>\\n          </dict>\\n        </dict>\\n      </dict>\\n      <key>parameter-object-binding-pattern</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\{)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.rest.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.object.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#parameter-object-binding-element</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>parameter-array-binding-pattern</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?:(\\\\.\\\\.\\\\.)\\\\s*)?(\\\\[)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.rest.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\]</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.binding-pattern.array.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#parameter-binding-element</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>field-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.field.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?x)(?&lt;!\\\\()(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(readonly)\\\\s+)?(?=\\\\s*((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\?\\\\s*)?(=|:))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?x)(?=\\\\}|;|,|$|(^(?!\\\\s*((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\?\\\\s*)?(=|:))))|(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?x)(?=((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\?\\\\s*)?(=|:))</string>\\n            <key>end</key>\\n            <string>(?x)(?=[};,=]|$|(^(?!\\\\s*((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\?\\\\s*)?(=|:))))|(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-annotation</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#string</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#array-literal</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#numeric-literal</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>match</key>\\n                <string>(?x)([_$[:alpha:]][_$[:alnum:]]*)(\\\\?)?(?=(\\\\?\\\\s*)?\\\\s*\\n# function assignment |\\n(=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)) |\\n# typeannotation is fn type: &lt; | () | (... | (param: | (param, | (param? | (param= | (param) =&gt;\\n(:\\\\s*(\\n  (&lt;) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=&gt;)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$)) |\\n(:\\\\s*(=&gt;|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(&lt;[^&lt;&gt;]*&gt;)|[^&lt;&gt;(),=])+=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)))</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>meta.definition.property.tsx entity.name.function.tsx</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>keyword.operator.optional.tsx</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.definition.property.tsx variable.object.property.tsx</string>\\n                <key>match</key>\\n                <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.optional.tsx</string>\\n                <key>match</key>\\n                <string>\\\\?</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>variable-initializer</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;!=|!)(=)(?!=)(?=\\\\s*\\\\S)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|^|[,);}\\\\]])</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;!=|!)(=)(?!=)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=[,);}\\\\]])|(?=^\\\\s*$)|(?&lt;=\\\\S)(?&lt;!=)(?=\\\\s*$)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>function-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.function.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(export)\\\\s+)?(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?&lt;=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.async.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.function.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.generator.asterisk.tsx</string>\\n          </dict>\\n          <key>5</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.definition.function.tsx entity.name.function.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=$|^|;)|(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-name</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>function-expression</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.function.expression.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(async)\\\\s+)?(function\\\\b)(?:\\\\s*(\\\\*))?(?:(?:\\\\s+|(?&lt;=\\\\*))([_$[:alpha:]][_$[:alnum:]]*))?\\\\s*</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.async.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.function.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.generator.asterisk.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.definition.function.tsx entity.name.function.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-name</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>function-name</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.definition.function.tsx entity.name.function.tsx</string>\\n        <key>match</key>\\n        <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n      </dict>\\n      <key>function-body</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#return-type</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#decl-block</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.generator.asterisk.tsx</string>\\n            <key>match</key>\\n            <string>\\\\*</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>method-declaration</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.method.declaration.tsx</string>\\n            <key>begin</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?\\\\s*\\\\b(constructor)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\}|;|,|$)|(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#method-declaration-name</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-body</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.method.declaration.tsx</string>\\n            <key>begin</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:(?:\\\\s*\\\\b(new)\\\\b(?!:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|(?:(\\\\*)\\\\s*)?)(?=\\\\s*[\\\\(\\\\&lt;])</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.new.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.generator.asterisk.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\}|;|,|$)|(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#method-declaration-name</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-body</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.method.declaration.tsx</string>\\n            <key>begin</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:\\\\b(public|private|protected)\\\\s+)?(?:\\\\b(abstract)\\\\s+)?(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*[\\\\(\\\\&lt;])</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.property.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.generator.asterisk.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\}|;|,|$)|(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#method-declaration-name</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-body</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>object-literal-method-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.method.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*[\\\\(\\\\&lt;])</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.async.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.property.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.generator.asterisk.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=\\\\}|;|,)|(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#method-declaration-name</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-body</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:\\\\b(async)\\\\s+)?(?:\\\\b(get|set)\\\\s+)?(?:(\\\\*)\\\\s*)?(?=\\\\s*(((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??))\\\\s*[\\\\(\\\\&lt;])</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.property.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.generator.asterisk.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\(|\\\\&lt;)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#method-declaration-name</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>method-declaration-name</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?x)(?=((\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$))|(\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$))|((?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$))|([_$[:alpha:]][_$[:alnum:]]*)|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\]))\\\\s*(\\\\??)\\\\s*[\\\\(\\\\&lt;])</string>\\n        <key>end</key>\\n        <string>(?=\\\\(|\\\\&lt;)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#array-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#numeric-literal</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.definition.method.tsx entity.name.function.tsx</string>\\n            <key>match</key>\\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.optional.tsx</string>\\n            <key>match</key>\\n            <string>\\\\?</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>arrow-function</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.arrow.tsx</string>\\n            <key>match</key>\\n            <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(\\\\basync)\\\\s+)?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?==&gt;)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.parameter.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.arrow.tsx</string>\\n            <key>begin</key>\\n            <string>(?x) (?:\\n  (?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(\\\\basync)\\n)? ((?&lt;![})!\\\\]])\\\\s*\\n  (?=\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  )\\n)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?==&gt;|\\\\{|(^\\\\s*(export|function|class|interface|let|var|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-parameters</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-parameters</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#arrow-return-type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.arrow.tsx</string>\\n            <key>begin</key>\\n            <string>=&gt;</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.function.arrow.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\}|\\\\S)(?&lt;!=&gt;)|((?!\\\\{)(?=\\\\S))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#decl-block</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>indexer-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.indexer.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.parameter.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(\\\\])\\\\s*(\\\\?\\\\s*)?|$</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.optional.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-annotation</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>indexer-mapped-type-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.indexer.mappedtype.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))([+-])?(readonly)\\\\s*)?\\\\s*(\\\\[)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(in)\\\\s+</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.type.modifier.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.type.tsx</string>\\n          </dict>\\n          <key>5</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.in.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(\\\\])([+-])?\\\\s*(\\\\?\\\\s*)?|$</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.type.modifier.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.optional.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>function-parameters</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.parameters.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\(</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.parameters.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.parameters.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-parameters-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>function-parameters-body</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#decorator</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-parameter</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#parameter-name</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-annotation</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.separator.parameter.tsx</string>\\n            <key>match</key>\\n            <string>,</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>class-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.class.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(export)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(class)\\\\b(?=\\\\s+|/[/*])</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.class.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-declaration-or-expression-patterns</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>class-expression</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.class.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(class)\\\\b(?=\\\\s+|[&lt;{]|\\\\/[\\\\/*])</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.class.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-declaration-or-expression-patterns</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>class-declaration-or-expression-patterns</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-or-interface-heritage</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.class.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-or-interface-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>interface-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.interface.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(export)\\\\s+)?\\\\b(?:(abstract)\\\\s+)?\\\\b(interface)\\\\b(?=\\\\s+|/[/*])</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.interface.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-or-interface-heritage</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.interface.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-or-interface-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>class-or-interface-heritage</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:\\\\b(extends|implements)\\\\b)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=\\\\{)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-or-interface-heritage</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expressionWithoutIdentifiers</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(?=\\\\s*[_$[:alpha:]][_$[:alnum:]]*(\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)*\\\\s*)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.module.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.other.inherited-class.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expressionPunctuations</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>class-or-interface-body</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>\\\\{</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#decorator</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#method-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#indexer-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#field-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-annotation</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#variable-initializer</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#access-modifier</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#property-accessor</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#async-modifier</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#after-operator-block-as-object-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#decl-block</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-semicolon</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>access-modifier</key>\\n      <dict>\\n        <key>name</key>\\n        <string>storage.modifier.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(abstract|public|protected|private|readonly|static)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>property-accessor</key>\\n      <dict>\\n        <key>name</key>\\n        <string>storage.type.property.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(get|set)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>async-modifier</key>\\n      <dict>\\n        <key>name</key>\\n        <string>storage.modifier.async.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(async)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>enum-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.enum.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.enum.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.type.enum.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\})</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>\\\\{</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\}</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>begin</key>\\n                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>variable.other.enummember.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>(?=,|\\\\}|$)</string>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#comment</string>\\n                  </dict>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#variable-initializer</string>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>begin</key>\\n                <string>(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))</string>\\n                <key>end</key>\\n                <string>(?=,|\\\\}|$)</string>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#string</string>\\n                  </dict>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#array-literal</string>\\n                  </dict>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#comment</string>\\n                  </dict>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#variable-initializer</string>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#punctuation-comma</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>namespace-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.namespace.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?\\\\b(namespace|module)\\\\s+(?=[_$[:alpha:]\\\"'`]))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.namespace.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\})|(?=;|\\\\babstract\\\\b|\\\\basync\\\\b|\\\\bclass\\\\b|\\\\bconst\\\\b|\\\\bdeclare\\\\b|\\\\benum\\\\b|\\\\bexport\\\\b|\\\\bfunction\\\\b|\\\\bimport\\\\b|\\\\binterface\\\\b|\\\\blet\\\\b|\\\\bmodule\\\\b|\\\\bnamespace\\\\b|\\\\breturn\\\\b|\\\\btype\\\\b|\\\\bvar\\\\b)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.type.module.tsx</string>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-accessor</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#decl-block</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-alias-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.type.declaration.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?\\\\b(type)\\\\b\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.type.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.type.alias.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=\\\\}|;|\\\\babstract\\\\b|\\\\basync\\\\b|\\\\bclass\\\\b|\\\\bconst\\\\b|\\\\bdeclare\\\\b|\\\\benum\\\\b|\\\\bexport\\\\b|\\\\bfunction\\\\b|\\\\bimport\\\\b|\\\\binterface\\\\b|\\\\blet\\\\b|\\\\bmodule\\\\b|\\\\bnamespace\\\\b|\\\\breturn\\\\b|\\\\btype\\\\b|\\\\bvar\\\\b)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(=)\\\\s*</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\}|;|\\\\babstract\\\\b|\\\\basync\\\\b|\\\\bclass\\\\b|\\\\bconst\\\\b|\\\\bdeclare\\\\b|\\\\benum\\\\b|\\\\bexport\\\\b|\\\\bfunction\\\\b|\\\\bimport\\\\b|\\\\binterface\\\\b|\\\\blet\\\\b|\\\\bmodule\\\\b|\\\\bnamespace\\\\b|\\\\breturn\\\\b|\\\\btype\\\\b|\\\\bvar\\\\b)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>import-equals-declaration</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.import-equals.external.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?\\\\b(import)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(require)\\\\s*(\\\\()</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.export.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.import.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.readwrite.alias.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.require.tsx</string>\\n              </dict>\\n              <key>6</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#string</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.import-equals.internal.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?\\\\b(import)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(=)\\\\s*(?!require\\\\b)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.export.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.import.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.readwrite.alias.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=;|$|^)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>match</key>\\n                <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>entity.name.type.module.tsx</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.accessor.tsx</string>\\n                  </dict>\\n                  <key>3</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.accessor.optional.tsx</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.readwrite.tsx</string>\\n                <key>match</key>\\n                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>import-declaration</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.import.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bexport)\\\\s+)?\\\\b(import)(?!\\\\s*[:\\\\(])(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.export.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.import.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;!^import|[^\\\\._$[:alnum:]]import)(?=;|$|^)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;=^import|[^\\\\._$[:alnum:]]import)(?!\\\\s*[\\\"'])</string>\\n            <key>end</key>\\n            <string>\\\\bfrom\\\\b</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.from.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#import-export-declaration</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#import-export-declaration</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>export-declaration</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(export)\\\\s+(as)\\\\s+(namespace)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.export.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.as.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.namespace.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.module.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.export.default.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(export)(?:(?:\\\\s*(=))|(?:\\\\s+(default)(?=\\\\s+)))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.export.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.default.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|;|\\\\babstract\\\\b|\\\\basync\\\\b|\\\\bclass\\\\b|\\\\bconst\\\\b|\\\\bdeclare\\\\b|\\\\benum\\\\b|\\\\bexport\\\\b|\\\\bfunction\\\\b|\\\\bimport\\\\b|\\\\binterface\\\\b|\\\\blet\\\\b|\\\\bmodule\\\\b|\\\\bnamespace\\\\b|\\\\breturn\\\\b|\\\\btype\\\\b|\\\\bvar\\\\b)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.export.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(export)(?!\\\\s*:)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.export.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|;|\\\\babstract\\\\b|\\\\basync\\\\b|\\\\bclass\\\\b|\\\\bconst\\\\b|\\\\bdeclare\\\\b|\\\\benum\\\\b|\\\\bexport\\\\b|\\\\bfunction\\\\b|\\\\bimport\\\\b|\\\\binterface\\\\b|\\\\blet\\\\b|\\\\bmodule\\\\b|\\\\bnamespace\\\\b|\\\\breturn\\\\b|\\\\btype\\\\b|\\\\bvar\\\\b)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#import-export-declaration</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>import-export-declaration</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#import-export-block</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.from.tsx</string>\\n            <key>match</key>\\n            <string>\\\\bfrom\\\\b</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#import-export-clause</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>import-export-block</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.block.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\{</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#import-export-clause</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>import-export-clause</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*))\\\\s+(as)\\\\s+(?:(\\\\bdefault(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|(\\\\b[_$[:alpha:]][_$[:alnum:]]*))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.default.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.language.import-export-all.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.readwrite.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.as.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.default.tsx</string>\\n              </dict>\\n              <key>6</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.readwrite.alias.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.language.import-export-all.tsx</string>\\n            <key>match</key>\\n            <string>\\\\*</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.default.tsx</string>\\n            <key>match</key>\\n            <string>\\\\b(default)\\\\b</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.other.readwrite.alias.tsx</string>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>switch-statement</key>\\n      <dict>\\n        <key>name</key>\\n        <string>switch-statement.expr.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?=\\\\bswitch\\\\s*\\\\()</string>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>switch-expression.expr.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(switch)\\\\s*(\\\\()</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.switch.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>switch-block.expr.tsx</string>\\n            <key>begin</key>\\n            <string>\\\\{</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>name</key>\\n                <string>case-clause.expr.tsx</string>\\n                <key>begin</key>\\n                <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(case|default(?=:))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>keyword.control.switch.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>(?=:)</string>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#expression</string>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>begin</key>\\n                <string>(:)\\\\s*(\\\\{)</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>case-clause.expr.tsx punctuation.definition.section.case-statement.tsx</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>meta.block.tsx punctuation.definition.block.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>\\\\}</string>\\n                <key>endCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>meta.block.tsx punctuation.definition.block.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>contentName</key>\\n                <string>meta.block.tsx</string>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#statements</string>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>match</key>\\n                <string>(:)</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>case-clause.expr.tsx punctuation.definition.section.case-statement.tsx</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#statements</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>for-loop</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))for(?=((\\\\s+|(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*))await)?\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)?(\\\\())</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.loop.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.loop.tsx</string>\\n            <key>match</key>\\n            <string>await</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>\\\\(</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#var-expr</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#punctuation-semicolon</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>decl-block</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.block.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\{</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#statements</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>after-operator-block-as-object-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.objectliteral.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;!\\\\+\\\\+|--)(?&lt;=[:=(,\\\\[?+!&gt;]|^await|[^\\\\._$[:alnum:]]await|^return|[^\\\\._$[:alnum:]]return|^yield|[^\\\\._$[:alnum:]]yield|^throw|[^\\\\._$[:alnum:]]throw|^in|[^\\\\._$[:alnum:]]in|^of|[^\\\\._$[:alnum:]]of|^typeof|[^\\\\._$[:alnum:]]typeof|&amp;&amp;|\\\\|\\\\||\\\\*)\\\\s*(\\\\{)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-member</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>object-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.objectliteral.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\{</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-member</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>object-member</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-literal-method-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx meta.object-literal.key.tsx</string>\\n            <key>begin</key>\\n            <string>(?=\\\\[)</string>\\n            <key>end</key>\\n            <string>(?=:)|((?&lt;=[\\\\]])(?=\\\\s*[\\\\(\\\\&lt;]))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#array-literal</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx meta.object-literal.key.tsx</string>\\n            <key>begin</key>\\n            <string>(?=[\\\\'\\\\\\\"])</string>\\n            <key>end</key>\\n            <string>(?=:)|((?&lt;=[\\\\'\\\\\\\"])(?=\\\\s*[\\\\(\\\\&lt;]))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#string</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.method.declaration.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;=[\\\\]\\\\'\\\\\\\"])(?=\\\\s*[\\\\(\\\\&lt;])</string>\\n            <key>end</key>\\n            <string>(?=\\\\}|;|,)|(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-body</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>match</key>\\n            <string>(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=:)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.object-literal.key.tsx</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.numeric.decimal.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>match</key>\\n            <string>(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n)))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.object-literal.key.tsx</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>match</key>\\n            <string>(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=:)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.object-literal.key.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>begin</key>\\n            <string>\\\\.\\\\.\\\\.</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.spread.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=,|\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.readwrite.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>begin</key>\\n            <string>(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)</string>\\n            <key>end</key>\\n            <string>(?=,|\\\\}|$)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.object.member.tsx</string>\\n            <key>begin</key>\\n            <string>:</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.object-literal.key.tsx punctuation.separator.key-value.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=,|\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>begin</key>\\n                <string>(?&lt;=:)\\\\s*(async)?(?=\\\\s*(&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)\\\\(\\\\s*([\\\\{\\\\[]\\\\s*)?$)</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>storage.modifier.async.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>(?&lt;=\\\\))</string>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#type-parameters</string>\\n                  </dict>\\n                  <dict>\\n                    <key>begin</key>\\n                    <string>\\\\(</string>\\n                    <key>beginCaptures</key>\\n                    <dict>\\n                      <key>0</key>\\n                      <dict>\\n                        <key>name</key>\\n                        <string>meta.brace.round.tsx</string>\\n                      </dict>\\n                    </dict>\\n                    <key>end</key>\\n                    <string>\\\\)</string>\\n                    <key>endCaptures</key>\\n                    <dict>\\n                      <key>0</key>\\n                      <dict>\\n                        <key>name</key>\\n                        <string>meta.brace.round.tsx</string>\\n                      </dict>\\n                    </dict>\\n                    <key>patterns</key>\\n                    <array>\\n                      <dict>\\n                        <key>include</key>\\n                        <string>#expression-inside-possibly-arrow-parens</string>\\n                      </dict>\\n                    </array>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>begin</key>\\n                <string>(?&lt;=:)\\\\s*(async)?\\\\s*(\\\\()(?=\\\\s*([\\\\{\\\\[]\\\\s*)?$)</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>storage.modifier.async.tsx</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>meta.brace.round.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>\\\\)</string>\\n                <key>endCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>meta.brace.round.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#expression-inside-possibly-arrow-parens</string>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>ternary-expression</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.ternary.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\s*(:)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.ternary.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>function-call</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?\\\\.\\\\s*)?(&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;|\\\\&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;)*(?!=)\\\\&gt;)*(?!=)&gt;\\\\s*)?\\\\()</string>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\))(?!(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?\\\\.\\\\s*)?(&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;|\\\\&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;)*(?!=)\\\\&gt;)*(?!=)&gt;\\\\s*)?\\\\()</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.function-call.tsx</string>\\n            <key>begin</key>\\n            <string>(?=(([_$[:alpha:]][_$[:alnum:]]*\\\\s*\\\\??\\\\.\\\\s*)*|(\\\\??\\\\.\\\\s*)?)([_$[:alpha:]][_$[:alnum:]]*))</string>\\n            <key>end</key>\\n            <string>(?=\\\\s*(\\\\?\\\\.\\\\s*)?(&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;|\\\\&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;)*(?!=)\\\\&gt;)*(?!=)&gt;\\\\s*)?\\\\()</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#literal</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#support-objects</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#object-identifiers</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#punctuation-accessor</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.expression.import.tsx</string>\\n                <key>match</key>\\n                <string>(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))import(?=\\\\s*[\\\\(]\\\\s*[\\\\\\\"\\\\'\\\\`]))</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx</string>\\n                <key>match</key>\\n                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.function-call.tsx punctuation.accessor.optional.tsx</string>\\n            <key>match</key>\\n            <string>\\\\?\\\\.</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-arguments</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#paren-expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>new-expr</key>\\n      <dict>\\n        <key>name</key>\\n        <string>new.expr.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(new)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.new.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\))|(?=[;),}\\\\]:]|\\\\|\\\\||\\\\&amp;\\\\&amp;|$|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.)))|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#paren-expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#class-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>instanceof-expr</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(instanceof)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.instanceof.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?&lt;=\\\\))|(?=[;),}\\\\]:?]|\\\\|\\\\||\\\\&amp;\\\\&amp;|$|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))function((\\\\s+[_$[:alpha:]][_$[:alnum:]]*)|(\\\\s*[\\\\(]))))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>paren-expression-possibly-arrow</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;=[(=,])\\\\s*(async)?(?=\\\\s*((&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*))?\\\\(\\\\s*[\\\\{\\\\[]\\\\s*$)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#paren-expression-possibly-arrow-with-typeparameters</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;=[(=,]|=&gt;)\\\\s*(async)?(?=\\\\s*((&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*))?\\\\(\\\\s*$)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.async.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#paren-expression-possibly-arrow-with-typeparameters</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#possibly-arrow-return-type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>paren-expression-possibly-arrow-with-typeparameters</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>\\\\(</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.brace.round.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#expression-inside-possibly-arrow-parens</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>expression-inside-possibly-arrow-parens</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expressionWithoutIdentifiers</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#function-parameters-body</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#identifiers</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#expressionPunctuations</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>paren-expression</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>\\\\(</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.round.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.round.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>cast</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>expression-operators</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.flow.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(await)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?=\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*\\\\*)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.flow.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\*</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.generator.asterisk.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(yield)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?:\\\\s*(\\\\*))?</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.flow.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.generator.asterisk.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.delete.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))delete(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.in.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))in(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.of.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))of(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))(?!\\\\()</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.instanceof.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))instanceof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.new.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))new(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#typeof-operator</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.void.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))void(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(as)\\\\s+</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.as.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=$|^|[;,:})\\\\]]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(as)\\\\s+))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.spread.tsx</string>\\n            <key>match</key>\\n            <string>\\\\.\\\\.\\\\.</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.assignment.compound.tsx</string>\\n            <key>match</key>\\n            <string>\\\\*=|(?&lt;!\\\\()/=|%=|\\\\+=|\\\\-=</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.assignment.compound.bitwise.tsx</string>\\n            <key>match</key>\\n            <string>\\\\&amp;=|\\\\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\\\\|=</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.bitwise.shift.tsx</string>\\n            <key>match</key>\\n            <string>&lt;&lt;|&gt;&gt;&gt;|&gt;&gt;</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.comparison.tsx</string>\\n            <key>match</key>\\n            <string>===|!==|==|!=</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.relational.tsx</string>\\n            <key>match</key>\\n            <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.logical.tsx</string>\\n            <key>match</key>\\n            <string>\\\\!|&amp;&amp;|\\\\|\\\\|</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.bitwise.tsx</string>\\n            <key>match</key>\\n            <string>\\\\&amp;|~|\\\\^|\\\\|</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.assignment.tsx</string>\\n            <key>match</key>\\n            <string>\\\\=</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.decrement.tsx</string>\\n            <key>match</key>\\n            <string>--</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.increment.tsx</string>\\n            <key>match</key>\\n            <string>\\\\+\\\\+</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.arithmetic.tsx</string>\\n            <key>match</key>\\n            <string>%|\\\\*|/|-|\\\\+</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;=[_$[:alnum:])\\\\]])\\\\s*(/)(?![/*])</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.arithmetic.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>typeof-operator</key>\\n      <dict>\\n        <key>name</key>\\n        <string>keyword.operator.expression.typeof.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))typeof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>literal</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#numeric-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#boolean-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#null-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#undefined-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#numericConstant-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#array-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#this-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#super-literal</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>array-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.array.literal.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\s*(\\\\[)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\]</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>numeric-literal</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.numeric.hex.tsx</string>\\n            <key>match</key>\\n            <string>\\\\b(?&lt;!\\\\$)0(x|X)[0-9a-fA-F][0-9a-fA-F_]*\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.numeric.binary.tsx</string>\\n            <key>match</key>\\n            <string>\\\\b(?&lt;!\\\\$)0(b|B)[01][01_]*\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.numeric.octal.tsx</string>\\n            <key>match</key>\\n            <string>\\\\b(?&lt;!\\\\$)0(o|O)?[0-7][0-7_]*\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n(?&lt;!\\\\$)(?:\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)| # 1.1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*\\\\b)|             # 1.E+3\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|             # .1E+3\\n  (?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\\\b)|                 # 1E+3\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*\\\\b)|                      # 1.1\\n  (?:\\\\b[0-9][0-9_]*(\\\\.)\\\\B)|                                  # 1.\\n  (?:\\\\B(\\\\.)[0-9][0-9_]*\\\\b)|                                  # .1\\n  (?:\\\\b[0-9][0-9_]*\\\\b(?!\\\\.))                                 # 1\\n)(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.numeric.decimal.tsx</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.delimiter.decimal.period.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.delimiter.decimal.period.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.delimiter.decimal.period.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.delimiter.decimal.period.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.delimiter.decimal.period.tsx</string>\\n              </dict>\\n              <key>6</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.delimiter.decimal.period.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>boolean-literal</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.language.boolean.true.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))true(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.language.boolean.false.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))false(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>null-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>constant.language.null.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))null(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>this-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>variable.language.this.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))this\\\\b(?!\\\\$)</string>\\n      </dict>\\n      <key>super-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>variable.language.super.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))super\\\\b(?!\\\\$)</string>\\n      </dict>\\n      <key>undefined-literal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>constant.language.undefined.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))undefined(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>numericConstant-literal</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.language.nan.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))NaN(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.language.infinity.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))Infinity(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>support-objects</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.language.arguments.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(arguments)\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.builtin.tsx</string>\\n            <key>match</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(Array|ArrayBuffer|Atomics|Boolean|DataView|Date|Float32Array|Float64Array|Function|Generator\\n  |GeneratorFunction|Int8Array|Int16Array|Int32Array|Intl|Map|Number|Object|Proxy\\n  |Reflect|RegExp|Set|SharedArrayBuffer|SIMD|String|Symbol|TypedArray\\n  |Uint8Array|Uint16Array|Uint32Array|Uint8ClampedArray|WeakMap|WeakSet)\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.error.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))((Eval|Internal|Range|Reference|Syntax|Type|URI)?Error)\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.promise.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(Promise)\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>support.function.tsx</string>\\n            <key>match</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(clear(Interval|Timeout)|decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|escape|eval|\\n  isFinite|isNaN|parseFloat|parseInt|require|set(Interval|Timeout)|super|unescape|uneval)(?=\\\\s*\\\\()</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(Math)(?:\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(?:\\n  (abs|acos|acosh|asin|asinh|atan|atan2|atanh|cbrt|ceil|clz32|cos|cosh|exp|\\n  expm1|floor|fround|hypot|imul|log|log10|log1p|log2|max|min|pow|random|\\n  round|sign|sin|sinh|sqrt|tan|tanh|trunc)\\n  |\\n  (E|LN10|LN2|LOG10E|LOG2E|PI|SQRT1_2|SQRT2)))?\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.constant.math.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.math.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.constant.property.math.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(console)(?:\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\n  assert|clear|count|debug|dir|error|group|groupCollapsed|groupEnd|info|log\\n  |profile|profileEnd|table|time|timeEnd|timeStamp|trace|warn))?\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.class.console.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.console.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(JSON)(?:\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(parse|stringify))?\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.constant.json.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.json.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(import)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(meta)\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.import.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.property.importmeta.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(new)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(target)\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.new.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.property.target.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s* (?:\\n  (constructor|length|prototype|__proto__)\\n  |\\n  (EPSILON|MAX_SAFE_INTEGER|MAX_VALUE|MIN_SAFE_INTEGER|MIN_VALUE|NEGATIVE_INFINITY|POSITIVE_INFINITY))\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.property.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.constant.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x) (?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.)) \\\\b (?:\\n  (document|event|navigator|performance|screen|window)\\n  |\\n  (AnalyserNode|ArrayBufferView|Attr|AudioBuffer|AudioBufferSourceNode|AudioContext|AudioDestinationNode|AudioListener\\n  |AudioNode|AudioParam|BatteryManager|BeforeUnloadEvent|BiquadFilterNode|Blob|BufferSource|ByteString|CSS|CSSConditionRule\\n  |CSSCounterStyleRule|CSSGroupingRule|CSSMatrix|CSSMediaRule|CSSPageRule|CSSPrimitiveValue|CSSRule|CSSRuleList|CSSStyleDeclaration\\n  |CSSStyleRule|CSSStyleSheet|CSSSupportsRule|CSSValue|CSSValueList|CanvasGradient|CanvasImageSource|CanvasPattern\\n  |CanvasRenderingContext2D|ChannelMergerNode|ChannelSplitterNode|CharacterData|ChromeWorker|CloseEvent|Comment|CompositionEvent\\n  |Console|ConvolverNode|Coordinates|Credential|CredentialsContainer|Crypto|CryptoKey|CustomEvent|DOMError|DOMException\\n  |DOMHighResTimeStamp|DOMImplementation|DOMString|DOMStringList|DOMStringMap|DOMTimeStamp|DOMTokenList|DataTransfer\\n  |DataTransferItem|DataTransferItemList|DedicatedWorkerGlobalScope|DelayNode|DeviceProximityEvent|DirectoryEntry\\n  |DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|Document|DocumentFragment|DocumentTouch|DocumentType|DragEvent\\n  |DynamicsCompressorNode|Element|Entry|EntrySync|ErrorEvent|Event|EventListener|EventSource|EventTarget|FederatedCredential\\n  |FetchEvent|File|FileEntry|FileEntrySync|FileException|FileList|FileReader|FileReaderSync|FileSystem|FileSystemSync\\n  |FontFace|FormData|GainNode|Gamepad|GamepadButton|GamepadEvent|Geolocation|GlobalEventHandlers|HTMLAnchorElement\\n  |HTMLAreaElement|HTMLAudioElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement\\n  |HTMLCollection|HTMLContentElement|HTMLDListElement|HTMLDataElement|HTMLDataListElement|HTMLDialogElement|HTMLDivElement\\n  |HTMLDocument|HTMLElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormControlsCollection|HTMLFormElement\\n  |HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement\\n  |HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMediaElement\\n  |HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement\\n  |HTMLOptionsCollection|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement\\n  |HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement\\n  |HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement\\n  |HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement\\n  |HTMLUListElement|HTMLUnknownElement|HTMLVideoElement|HashChangeEvent|History|IDBCursor|IDBCursorWithValue|IDBDatabase\\n  |IDBEnvironment|IDBFactory|IDBIndex|IDBKeyRange|IDBMutableFile|IDBObjectStore|IDBOpenDBRequest|IDBRequest|IDBTransaction\\n  |IDBVersionChangeEvent|IIRFilterNode|IdentityManager|ImageBitmap|ImageBitmapFactories|ImageData|Index|InputDeviceCapabilities\\n  |InputEvent|InstallEvent|InstallTrigger|KeyboardEvent|LinkStyle|LocalFileSystem|LocalFileSystemSync|Location|MIDIAccess\\n  |MIDIConnectionEvent|MIDIInput|MIDIInputMap|MIDIOutputMap|MediaElementAudioSourceNode|MediaError|MediaKeyMessageEvent\\n  |MediaKeySession|MediaKeyStatusMap|MediaKeySystemAccess|MediaKeySystemConfiguration|MediaKeys|MediaRecorder|MediaStream\\n  |MediaStreamAudioDestinationNode|MediaStreamAudioSourceNode|MessageChannel|MessageEvent|MessagePort|MouseEvent\\n  |MutationObserver|MutationRecord|NamedNodeMap|Navigator|NavigatorConcurrentHardware|NavigatorGeolocation|NavigatorID\\n  |NavigatorLanguage|NavigatorOnLine|Node|NodeFilter|NodeIterator|NodeList|NonDocumentTypeChildNode|Notification\\n  |OfflineAudioCompletionEvent|OfflineAudioContext|OscillatorNode|PageTransitionEvent|PannerNode|ParentNode|PasswordCredential\\n  |Path2D|PaymentAddress|PaymentRequest|PaymentResponse|Performance|PerformanceEntry|PerformanceFrameTiming|PerformanceMark\\n  |PerformanceMeasure|PerformanceNavigation|PerformanceNavigationTiming|PerformanceObserver|PerformanceObserverEntryList\\n  |PerformanceResourceTiming|PerformanceTiming|PeriodicSyncEvent|PeriodicWave|Plugin|Point|PointerEvent|PopStateEvent\\n  |PortCollection|Position|PositionError|PositionOptions|PresentationConnectionClosedEvent|PresentationConnectionList\\n  |PresentationReceiver|ProcessingInstruction|ProgressEvent|PromiseRejectionEvent|PushEvent|PushRegistrationManager\\n  |RTCCertificate|RTCConfiguration|RTCPeerConnection|RTCSessionDescriptionCallback|RTCStatsReport|RadioNodeList|RandomSource\\n  |Range|ReadableByteStream|RenderingContext|SVGAElement|SVGAngle|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement\\n  |SVGAnimateTransformElement|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedLength\\n  |SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedPoints|SVGAnimatedPreserveAspectRatio\\n  |SVGAnimatedRect|SVGAnimatedString|SVGAnimatedTransformList|SVGAnimationElement|SVGCircleElement|SVGClipPathElement\\n  |SVGCursorElement|SVGDefsElement|SVGDescElement|SVGElement|SVGEllipseElement|SVGEvent|SVGFilterElement|SVGFontElement\\n  |SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement\\n  |SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGradientElement|SVGHKernElement|SVGImageElement|SVGLength\\n  |SVGLengthList|SVGLineElement|SVGLinearGradientElement|SVGMPathElement|SVGMaskElement|SVGMatrix|SVGMissingGlyphElement\\n  |SVGNumber|SVGNumberList|SVGPathElement|SVGPatternElement|SVGPoint|SVGPolygonElement|SVGPolylineElement|SVGPreserveAspectRatio\\n  |SVGRadialGradientElement|SVGRect|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStringList\\n  |SVGStylable|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTRefElement|SVGTSpanElement|SVGTests|SVGTextElement\\n  |SVGTextPositioningElement|SVGTitleElement|SVGTransform|SVGTransformList|SVGTransformable|SVGUseElement|SVGVKernElement\\n  |SVGViewElement|ServiceWorker|ServiceWorkerContainer|ServiceWorkerGlobalScope|ServiceWorkerRegistration|ServiceWorkerState\\n  |ShadowRoot|SharedWorker|SharedWorkerGlobalScope|SourceBufferList|StereoPannerNode|Storage|StorageEvent|StyleSheet\\n  |StyleSheetList|SubtleCrypto|SyncEvent|Text|TextMetrics|TimeEvent|TimeRanges|Touch|TouchEvent|TouchList|Transferable\\n  |TreeWalker|UIEvent|USVString|VRDisplayCapabilities|ValidityState|WaveShaperNode|WebGL|WebGLActiveInfo|WebGLBuffer\\n  |WebGLContextEvent|WebGLFramebuffer|WebGLProgram|WebGLRenderbuffer|WebGLRenderingContext|WebGLShader|WebGLShaderPrecisionFormat\\n  |WebGLTexture|WebGLTimerQueryEXT|WebGLTransformFeedback|WebGLUniformLocation|WebGLVertexArrayObject|WebGLVertexArrayObjectOES\\n  |WebSocket|WebSockets|WebVTT|WheelEvent|Window|WindowBase64|WindowEventHandlers|WindowTimers|Worker|WorkerGlobalScope\\n  |WorkerLocation|WorkerNavigator|XMLHttpRequest|XMLHttpRequestEventTarget|XMLSerializer|XPathExpression|XPathResult\\n  |XSLTProcessor))\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.dom.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.class.dom.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s* (?:\\n  (ATTRIBUTE_NODE|CDATA_SECTION_NODE|COMMENT_NODE|DOCUMENT_FRAGMENT_NODE|DOCUMENT_NODE|DOCUMENT_TYPE_NODE\\n  |DOMSTRING_SIZE_ERR|ELEMENT_NODE|ENTITY_NODE|ENTITY_REFERENCE_NODE|HIERARCHY_REQUEST_ERR|INDEX_SIZE_ERR\\n  |INUSE_ATTRIBUTE_ERR|INVALID_CHARACTER_ERR|NO_DATA_ALLOWED_ERR|NO_MODIFICATION_ALLOWED_ERR|NOT_FOUND_ERR\\n  |NOT_SUPPORTED_ERR|NOTATION_NODE|PROCESSING_INSTRUCTION_NODE|TEXT_NODE|WRONG_DOCUMENT_ERR)\\n  |\\n  (_content|[xyz]|abbr|above|accept|acceptCharset|accessKey|action|align|[av]Link(?:color)?|all|alt|anchors|appCodeName\\n  |appCore|applets|appMinorVersion|appName|appVersion|archive|areas|arguments|attributes|availHeight|availLeft|availTop\\n  |availWidth|axis|background|backgroundColor|backgroundImage|below|bgColor|body|border|borderBottomWidth|borderColor\\n  |borderLeftWidth|borderRightWidth|borderStyle|borderTopWidth|borderWidth|bottom|bufferDepth|callee|caller|caption\\n  |cellPadding|cells|cellSpacing|ch|characterSet|charset|checked|childNodes|chOff|cite|classes|className|clear\\n  |clientInformation|clip|clipBoardData|closed|code|codeBase|codeType|color|colorDepth|cols|colSpan|compact|complete\\n  |components|content|controllers|cookie|cookieEnabled|cords|cpuClass|crypto|current|data|dateTime|declare|defaultCharset\\n  |defaultChecked|defaultSelected|defaultStatus|defaultValue|defaultView|defer|description|dialogArguments|dialogHeight\\n  |dialogLeft|dialogTop|dialogWidth|dir|directories|disabled|display|docmain|doctype|documentElement|elements|embeds\\n  |enabledPlugin|encoding|enctype|entities|event|expando|external|face|fgColor|filename|firstChild|fontFamily|fontSize\\n  |fontWeight|form|formName|forms|frame|frameBorder|frameElement|frames|hasFocus|hash|headers|height|history|host\\n  |hostname|href|hreflang|hspace|htmlFor|httpEquiv|id|ids|ignoreCase|images|implementation|index|innerHeight|innerWidth\\n  |input|isMap|label|lang|language|lastChild|lastIndex|lastMatch|lastModified|lastParen|layer[sXY]|left|leftContext\\n  |lineHeight|link|linkColor|links|listStyleType|localName|location|locationbar|longDesc|lowsrc|lowSrc|marginBottom\\n  |marginHeight|marginLeft|marginRight|marginTop|marginWidth|maxLength|media|menubar|method|mimeTypes|multiline|multiple\\n  |name|nameProp|namespaces|namespaceURI|next|nextSibling|nodeName|nodeType|nodeValue|noHref|noResize|noShade|notationName\\n  |notations|noWrap|object|offscreenBuffering|onLine|onreadystatechange|opener|opsProfile|options|oscpu|outerHeight\\n  |outerWidth|ownerDocument|paddingBottom|paddingLeft|paddingRight|paddingTop|page[XY]|page[XY]Offset|parent|parentLayer\\n  |parentNode|parentWindow|pathname|personalbar|pixelDepth|pkcs11|platform|plugins|port|prefix|previous|previousDibling\\n  |product|productSub|profile|profileend|prompt|prompter|protocol|publicId|readOnly|readyState|referrer|rel|responseText\\n  |responseXML|rev|right|rightContext|rowIndex|rows|rowSpan|rules|scheme|scope|screen[XY]|screenLeft|screenTop|scripts\\n  |scrollbars|scrolling|sectionRowIndex|security|securityPolicy|selected|selectedIndex|selection|self|shape|siblingAbove\\n  |siblingBelow|size|source|specified|standby|start|status|statusbar|statusText|style|styleSheets|suffixes|summary\\n  |systemId|systemLanguage|tagName|tags|target|tBodies|text|textAlign|textDecoration|textIndent|textTransform|tFoot|tHead\\n  |title|toolbar|top|type|undefined|uniqueID|updateInterval|URL|URLUnencoded|useMap|userAgent|userLanguage|userProfile\\n  |vAlign|value|valueType|vendor|vendorSub|version|visibility|vspace|whiteSpace|width|X[MS]LDocument|zIndex))\\\\b(?!\\\\$|\\\\s*(&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\\\()</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.constant.dom.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.property.dom.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.node.tsx</string>\\n            <key>match</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(Buffer|EventEmitter|Server|Pipe|Socket|REPLServer|ReadStream|WriteStream|Stream\\n  |Inflate|Deflate|InflateRaw|DeflateRaw|GZip|GUnzip|Unzip|Zip)\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(process)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(?:\\n  (arch|argv|config|connected|env|execArgv|execPath|exitCode|mainModule|pid|platform|release|stderr|stdin|stdout|title|version|versions)\\n  |\\n  (abort|chdir|cwd|disconnect|exit|[sg]ete?[gu]id|send|[sg]etgroups|initgroups|kill|memoryUsage|nextTick|umask|uptime|hrtime)\\n))?\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.object.process.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.variable.property.process.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.process.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(exports)|(module)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))(exports|id|filename|loaded|parent|children))?)\\\\b(?!\\\\$)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.type.object.module.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.type.object.module.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.type.object.module.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>support.variable.object.node.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(global|GLOBAL|root|__dirname|__filename)\\\\b(?!\\\\$)</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x) (?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]]))) \\\\s*\\n(?:\\n (on(?:Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|\\n   Readystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|\\n   Before(?:cut|deactivate|unload|update|paste|print|editfocus|activate)|\\n   Blur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|\\n   Change|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|\\n   Datasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|\\n   Dragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|\\n   Errorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\\n ) |\\n (shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|\\n   scrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|\\n   sup|sub|substr|substring|splice|split|send|set(?:Milliseconds|Seconds|Minutes|Hours|\\n   Month|Year|FullYear|Date|UTC(?:Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|\\n   Time|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|\\n   savePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|\\n   contextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|\\n   createEventObject|to(?:GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|\\n   test|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|\\n   untaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|\\n   print|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|\\n   fileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|\\n   forward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|\\n   abort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|\\n   releaseCapture|releaseEvents|go|get(?:Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|\\n   Time|Date|TimezoneOffset|UTC(?:Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|\\n   Attention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|\\n   moveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back\\n ) |\\n (acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|\\n   appendChild|appendData|before|blur|canPlayType|captureStream|\\n   caretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|\\n   cloneContents|cloneNode|cloneRange|close|closest|collapse|\\n   compareBoundaryPoints|compareDocumentPosition|comparePoint|contains|\\n   convertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|\\n   createAttributeNS|createCaption|createCDATASection|createComment|\\n   createContextualFragment|createDocument|createDocumentFragment|\\n   createDocumentType|createElement|createElementNS|createEntityReference|\\n   createEvent|createExpression|createHTMLDocument|createNodeIterator|\\n   createNSResolver|createProcessingInstruction|createRange|createShadowRoot|\\n   createTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|\\n   deleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|\\n   deleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|\\n   enableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|\\n   exitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|\\n   getAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|\\n   getAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|\\n   getClientRects|getContext|getDestinationInsertionPoints|getElementById|\\n   getElementsByClassName|getElementsByName|getElementsByTagName|\\n   getElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|\\n   getVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|\\n   hasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|\\n   insertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|\\n   insertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|\\n   isPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|\\n   lookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|\\n   moveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|\\n   parentNode|pause|play|postMessage|prepend|preventDefault|previousNode|\\n   previousSibling|probablySupportsContext|queryCommandEnabled|\\n   queryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|\\n   querySelector|querySelectorAll|registerContentHandler|registerElement|\\n   registerProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|\\n   removeAttributeNode|removeAttributeNS|removeChild|removeEventListener|\\n   removeItem|replace|replaceChild|replaceData|replaceWith|reportValidity|\\n   requestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|\\n   scrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|\\n   setAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|\\n   setCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|\\n   setRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|\\n   slice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|\\n   submit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|\\n   toDataURL|toggle|toString|values|write|writeln\\n ) |\\n (all|catch|finally|race|reject|resolve|then\\n )\\n)(?=\\\\s*\\\\()</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.event-handler.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.dom.tsx</string>\\n              </dict>\\n              <key>6</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.function.promise.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>identifiers</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#object-identifiers</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n  ((async\\\\s+)?(\\n    (function\\\\s*[(&lt;*]) |\\n    (function\\\\s+) |\\n    ([_$[:alpha:]][_$[:alnum:]]*\\\\s*=&gt;)\\n  )) |\\n  ((async\\\\s*)?(\\n    ([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$) |\\n    # sure shot arrow functions even if =&gt; is on new line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?\\n  [(]\\\\s*\\n  (\\n    ([)]\\\\s*:) |                                                                                       # ():\\n    ((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)                                                                  # [(]param: | [(]...param:\\n  )\\n) |\\n(\\n  [&lt;]\\\\s*[_$[:alpha:]][_$[:alnum:]]*\\\\s+extends\\\\s*[^=&gt;]                                                              # &lt; typeparam extends\\n) |\\n# arrow function possible to detect only with =&gt; on same line\\n(\\n  (&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;]|\\\\&lt;\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\]))([^=&lt;&gt;]|=[^&lt;])*\\\\&gt;)*&gt;\\\\s*)?                                                                                 # typeparameters\\n  \\\\(\\\\s*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\)))*)?\\\\)   # parameters\\n  (\\\\s*:\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+)?                                                                        # return type\\n  \\\\s*=&gt;                                                                                               # arrow operator\\n)\\n  ))\\n))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.constant.property.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*([_$[:alpha:]][_$[:alnum:]]*)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.property.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.other.constant.tsx</string>\\n            <key>match</key>\\n            <string>([[:upper:]][_$[:digit:][:upper:]]*)(?![_$[:alnum:]])</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>variable.other.readwrite.tsx</string>\\n            <key>match</key>\\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>object-identifiers</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.tsx</string>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*\\\\??\\\\.\\\\s*prototype\\\\b(?!\\\\$))</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(?:\\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\\n  ([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.constant.object.property.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.object.property.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:\\n  ([[:upper:]][_$[:digit:][:upper:]]*) |\\n  ([_$[:alpha:]][_$[:alnum:]]*)\\n)(?=\\\\s*\\\\??\\\\.\\\\s*[_$[:alpha:]][_$[:alnum:]]*)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.constant.object.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.object.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-annotation</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.annotation.tsx</string>\\n            <key>begin</key>\\n            <string>(:)(?=\\\\s*\\\\S)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.type.annotation.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;![:|&amp;])((?=$|^|[,);\\\\}\\\\]]|//)|(?==[^&gt;])|((?&lt;=[\\\\}&gt;\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.annotation.tsx</string>\\n            <key>begin</key>\\n            <string>(:)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.type.annotation.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;![:|&amp;])((?=[,);\\\\}\\\\]]|//)|(?==[^&gt;])|(?=^\\\\s*$)|((?&lt;=\\\\S)(?=\\\\s*$))|((?&lt;=[\\\\}&gt;\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>return-type</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.return.type.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;=\\\\))\\\\s*(:)(?=\\\\s*\\\\S)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.type.annotation.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;![:|&amp;])(?=$|^|[{};,]|//)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#return-type-core</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.return.type.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;=\\\\))\\\\s*(:)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.type.annotation.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;![:|&amp;])((?=[{};,]|//|^\\\\s*$)|((?&lt;=\\\\S)(?=\\\\s*$)))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#return-type-core</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>return-type-core</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;=[:|&amp;])(?=\\\\s*\\\\{)</string>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-object</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-predicate-operator</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>arrow-return-type</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.return.type.arrow.tsx</string>\\n        <key>begin</key>\\n        <string>(?&lt;=\\\\))\\\\s*(:)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.type.annotation.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?==&gt;|\\\\{|(^\\\\s*(export|function|class|interface|let|var|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#arrow-return-type-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>possibly-arrow-return-type</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?&lt;=\\\\))\\\\s*(:)(?=\\\\s*([^&lt;&gt;\\\\(\\\\)]|\\\\&lt;[^&lt;&gt;]+\\\\&gt;|\\\\([^\\\\(\\\\)]+\\\\))+\\\\s*=&gt;)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.arrow.tsx meta.return.type.arrow.tsx keyword.operator.type.annotation.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?==&gt;|\\\\{|(^\\\\s*(export|function|class|interface|let|var|const|import|enum|namespace|module|type|abstract|declare)\\\\s+))</string>\\n        <key>contentName</key>\\n        <string>meta.arrow.tsx meta.return.type.arrow.tsx</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#arrow-return-type-body</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>arrow-return-type-body</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;=[:])(?=\\\\s*\\\\{)</string>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-object</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-predicate-operator</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-parameters</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.type.parameters.tsx</string>\\n        <key>begin</key>\\n        <string>(&lt;)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.typeparameters.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(&gt;)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.typeparameters.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.modifier.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(extends)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-arguments</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.type.parameters.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\&lt;</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.typeparameters.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\&gt;</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.typeparameters.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#string</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#numeric-literal</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-primitive</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-builtin-literals</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-tuple</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-object</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-conditional</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-operators</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-fn-type-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-paren-or-function-parameters</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-function-return-type</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-name</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-primitive</key>\\n      <dict>\\n        <key>name</key>\\n        <string>support.type.primitive.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(string|number|boolean|symbol|any|void|never)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>type-builtin-literals</key>\\n      <dict>\\n        <key>name</key>\\n        <string>support.type.builtin.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(this|true|false|undefined|null|object)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>type-tuple</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.type.tuple.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\[</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\]</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.square.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-object</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.object.type.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\{</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.block.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#method-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#indexer-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#indexer-mapped-type-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#field-declaration</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-annotation</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>\\\\.\\\\.\\\\.</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.spread.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\}|;|,|$)|(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-comma</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#punctuation-semicolon</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-conditional</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(extends)\\\\s+</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=:)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>begin</key>\\n                <string>\\\\?</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>keyword.operator.ternary.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>:</string>\\n                <key>endCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>keyword.operator.ternary.tsx</string>\\n                  </dict>\\n                </dict>\\n                <key>patterns</key>\\n                <array>\\n                  <dict>\\n                    <key>include</key>\\n                    <string>#type</string>\\n                  </dict>\\n                </array>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#type</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-paren-or-function-parameters</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.type.paren.cover.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\(</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.round.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.brace.round.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#destructuring-parameter</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=\\\\s*(:\\\\s*(\\n  (&lt;) |\\n  ([(]\\\\s*(\\n    ([)]) |\\n    (\\\\.\\\\.\\\\.) |\\n    ([_$[:alnum:]]+\\\\s*(\\n      ([:,?=])|\\n      ([)]\\\\s*=&gt;)\\n    ))\\n  ))\\n)) |\\n(:\\\\s*([\\\\(]\\\\s*([\\\\{\\\\[]\\\\s*)?$)))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.rest.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx variable.language.this.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.optional.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(public|private|protected|readonly)\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(?:(this)|([_$[:alpha:]][_$[:alnum:]]*))\\\\s*(\\\\??)(?=:)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.modifier.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.rest.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.parameter.tsx variable.language.this.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.parameter.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.optional.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-annotation</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.separator.parameter.tsx</string>\\n            <key>match</key>\\n            <string>,</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-fn-type-parameters</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.constructor.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(new)\\\\b(?=\\\\s*\\\\&lt;)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.new.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.constructor.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))(new)\\\\b\\\\s*(?=\\\\()</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.control.new.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-parameters</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.function.tsx</string>\\n            <key>begin</key>\\n            <string>(?x)(\\n  (?=\\n    [(]\\\\s*(\\n      ([)]) |\\n      (\\\\.\\\\.\\\\.) |\\n      ([_$[:alnum:]]+\\\\s*(\\n        ([:,?=])|\\n        ([)]\\\\s*=&gt;)\\n      ))\\n    )\\n  )\\n)</string>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#function-parameters</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-function-return-type</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.function.return.tsx</string>\\n            <key>begin</key>\\n            <string>(=&gt;)(?=\\\\s*\\\\S)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.function.arrow.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;!=&gt;)(?&lt;![|&amp;])(?=[,\\\\]\\\\)\\\\{\\\\}=;&gt;:\\\\?]|//|$)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-function-return-type-core</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.type.function.return.tsx</string>\\n            <key>begin</key>\\n            <string>=&gt;</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.function.arrow.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;!=&gt;)(?&lt;![|&amp;])((?=[,\\\\]\\\\)\\\\{\\\\}=;:\\\\?&gt;]|//|^\\\\s*$)|((?&lt;=\\\\S)(?=\\\\s*$)))</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-function-return-type-core</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-function-return-type-core</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?&lt;==&gt;)(?=\\\\s*\\\\{)</string>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-object</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type-predicate-operator</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#type</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-operators</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#typeof-operator</string>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?:([&amp;|])|(=(?!&gt;)))(?=\\\\s*\\\\{)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.type.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?&lt;=\\\\})</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-object</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>([&amp;|])|(=(?!&gt;))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.type.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\S)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.keyof.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))keyof(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.ternary.tsx</string>\\n            <key>match</key>\\n            <string>(\\\\?|\\\\:)</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.infer.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))infer(?=\\\\s+[_$[:alpha:]])</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.expression.import.tsx</string>\\n            <key>match</key>\\n            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))import(?=\\\\s*\\\\()</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>type-predicate-operator</key>\\n      <dict>\\n        <key>name</key>\\n        <string>keyword.operator.expression.is.tsx</string>\\n        <key>match</key>\\n        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\\\\.\\\\.\\\\.)|(?&lt;!\\\\.))is(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))</string>\\n      </dict>\\n      <key>type-name</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>match</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.module.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.accessor.optional.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.type.tsx</string>\\n            <key>match</key>\\n            <string>[_$[:alpha:]][_$[:alnum:]]*</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>punctuation-comma</key>\\n      <dict>\\n        <key>name</key>\\n        <string>punctuation.separator.comma.tsx</string>\\n        <key>match</key>\\n        <string>,</string>\\n      </dict>\\n      <key>punctuation-semicolon</key>\\n      <dict>\\n        <key>name</key>\\n        <string>punctuation.terminator.statement.tsx</string>\\n        <key>match</key>\\n        <string>;</string>\\n      </dict>\\n      <key>punctuation-accessor</key>\\n      <dict>\\n        <key>match</key>\\n        <string>(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))</string>\\n        <key>captures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.accessor.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.accessor.optional.tsx</string>\\n          </dict>\\n        </dict>\\n      </dict>\\n      <key>string</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#qstring-single</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#qstring-double</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>qstring-double</key>\\n      <dict>\\n        <key>name</key>\\n        <string>string.quoted.double.tsx</string>\\n        <key>begin</key>\\n        <string>\\\"</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(\\\")|((?:[^\\\\\\\\\\\\n])$)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.end.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>invalid.illegal.newline.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#string-character-escape</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>qstring-single</key>\\n      <dict>\\n        <key>name</key>\\n        <string>string.quoted.single.tsx</string>\\n        <key>begin</key>\\n        <string>'</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(\\\\')|((?:[^\\\\\\\\\\\\n])$)</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.end.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>invalid.illegal.newline.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#string-character-escape</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>string-character-escape</key>\\n      <dict>\\n        <key>name</key>\\n        <string>constant.character.escape.tsx</string>\\n        <key>match</key>\\n        <string>\\\\\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)</string>\\n      </dict>\\n      <key>template</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>string.template.tsx</string>\\n            <key>begin</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;|\\\\&lt;\\\\s*(((keyof|infer)\\\\s+)|(([_$[:alpha:]][_$[:alnum:]]*|(\\\\{([^\\\\{\\\\}]|(\\\\{[^\\\\{\\\\}]*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[[^\\\\[\\\\]]*\\\\]))*\\\\])|(\\\\'[^\\\\']*\\\\')|(\\\\\\\"[^\\\\\\\"]*\\\\\\\")|(\\\\`[^\\\\`]*\\\\`))(?=\\\\s*([\\\\&lt;\\\\&gt;\\\\,\\\\.\\\\[=]|&amp;(?!&amp;)|\\\\|(?!\\\\|)))))([^&lt;&gt;\\\\(]|(\\\\(([^\\\\(\\\\)]|(\\\\([^\\\\(\\\\)]*\\\\)))*\\\\))|(?&lt;==)\\\\&gt;)*(?!=)\\\\&gt;)*(?!=)&gt;\\\\s*)`)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tagged-template.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=`)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-arguments</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>string.template.tsx</string>\\n            <key>begin</key>\\n            <string>([_$[:alpha:]][_$[:alnum:]]*)?(`)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.function.tagged-template.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.template.begin.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>`</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.template.end.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#template-substitution-element</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#string-character-escape</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>template-substitution-element</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.template.expression.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\$\\\\{</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.template-expression.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.template-expression.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n        </array>\\n        <key>contentName</key>\\n        <string>meta.embedded.line.tsx</string>\\n      </dict>\\n      <key>regex</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>string.regexp.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;!\\\\+\\\\+|--)(?&lt;=[=(:,\\\\[?+!]|^return|[^\\\\._$[:alnum:]]return|^case|[^\\\\._$[:alnum:]]case|=&gt;|&amp;&amp;|\\\\|\\\\||\\\\*\\\\/)\\\\s*(\\\\/)(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\\\])+\\\\/[gimsuy]*(?!\\\\s*[a-zA-Z0-9_$]))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.begin.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(/)([gimsuy]*)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.end.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.other.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#regexp</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>string.regexp.tsx</string>\\n            <key>begin</key>\\n            <string>(?&lt;![_$[:alnum:])\\\\]]|\\\\+\\\\+|--)\\\\/(?![\\\\/*])(?=(?:[^\\\\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\\\])+\\\\/[gimsuy]*(?!\\\\s*[a-zA-Z0-9_$]))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.begin.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(/)([gimsuy]*)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.end.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.other.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#regexp</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>regexp</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.control.anchor.regexp</string>\\n            <key>match</key>\\n            <string>\\\\\\\\[bB]|\\\\^|\\\\$</string>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>\\\\\\\\[1-9]\\\\d*|\\\\\\\\k&lt;([a-zA-Z_$][\\\\w$]*)&gt;</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.other.back-reference.regexp</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.regexp</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.quantifier.regexp</string>\\n            <key>match</key>\\n            <string>[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>keyword.operator.or.regexp</string>\\n            <key>match</key>\\n            <string>\\\\|</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.group.assertion.regexp</string>\\n            <key>begin</key>\\n            <string>(\\\\()((\\\\?=)|(\\\\?!)|(\\\\?&lt;=)|(\\\\?&lt;!))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.group.regexp</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.group.assertion.regexp</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.assertion.look-ahead.regexp</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.assertion.negative-look-ahead.regexp</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.assertion.look-behind.regexp</string>\\n              </dict>\\n              <key>6</key>\\n              <dict>\\n                <key>name</key>\\n                <string>meta.assertion.negative-look-behind.regexp</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(\\\\))</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.group.regexp</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#regexp</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.group.regexp</string>\\n            <key>begin</key>\\n            <string>\\\\((?:(\\\\?:)|(?:\\\\?&lt;([a-zA-Z_$][\\\\w$]*)&gt;))?</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.group.regexp</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.group.no-capture.regexp</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.regexp</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.group.regexp</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#regexp</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.other.character-class.set.regexp</string>\\n            <key>begin</key>\\n            <string>(\\\\[)(\\\\^)?</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.character-class.regexp</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.negation.regexp</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(\\\\])</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.character-class.regexp</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.other.character-class.range.regexp</string>\\n                <key>match</key>\\n                <string>(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\c[A-Z])|(\\\\\\\\.))</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>constant.character.numeric.regexp</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>constant.character.control.regexp</string>\\n                  </dict>\\n                  <key>3</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>constant.character.escape.backslash.regexp</string>\\n                  </dict>\\n                  <key>4</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>constant.character.numeric.regexp</string>\\n                  </dict>\\n                  <key>5</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>constant.character.control.regexp</string>\\n                  </dict>\\n                  <key>6</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>constant.character.escape.backslash.regexp</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#regex-character-class</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#regex-character-class</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>regex-character-class</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.other.character-class.regexp</string>\\n            <key>match</key>\\n            <string>\\\\\\\\[wWsSdDtrnvf]|\\\\.</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.character.numeric.regexp</string>\\n            <key>match</key>\\n            <string>\\\\\\\\([0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4})</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.character.control.regexp</string>\\n            <key>match</key>\\n            <string>\\\\\\\\c[A-Z]</string>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.character.escape.backslash.regexp</string>\\n            <key>match</key>\\n            <string>\\\\\\\\.</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>comment</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>comment.block.documentation.tsx</string>\\n            <key>begin</key>\\n            <string>/\\\\*\\\\*(?!/)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.comment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\*/</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.comment.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#docblock</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>comment.block.tsx</string>\\n            <key>begin</key>\\n            <string>(/\\\\*)(?:\\\\s*((@)internal)(?=\\\\s|(\\\\*/)))?</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.comment.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.internaldeclaration.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.decorator.internaldeclaration.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>\\\\*/</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.comment.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(^[ \\\\t]+)?((//)(?:\\\\s*((@)internal)(?=\\\\s|$))?)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.whitespace.comment.leading.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>comment.line.double-slash.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.comment.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.internaldeclaration.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.decorator.internaldeclaration.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=^)</string>\\n            <key>contentName</key>\\n            <string>comment.line.double-slash.tsx</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>directives</key>\\n      <dict>\\n        <key>name</key>\\n        <string>comment.line.triple-slash.directive.tsx</string>\\n        <key>begin</key>\\n        <string>^(///)\\\\s*(?=&lt;(reference|amd-dependency|amd-module)(\\\\s+(path|types|no-default-lib|lib|name)\\\\s*=\\\\s*((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\\\\\'|\\\\\\\\)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\\\\\\\\"|\\\\\\\\)*\\\\\\\")))+\\\\s*/&gt;\\\\s*$)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.comment.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>end</key>\\n        <string>(?=^)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.tag.tsx</string>\\n            <key>begin</key>\\n            <string>(&lt;)(reference|amd-dependency|amd-module)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.tag.directive.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.tag.directive.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>/&gt;</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.tag.directive.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.other.attribute-name.directive.tsx</string>\\n                <key>match</key>\\n                <string>path|types|no-default-lib|lib|name</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.assignment.tsx</string>\\n                <key>match</key>\\n                <string>=</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#string</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>docblock</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n((@)(?:access|api))\\n\\\\s+\\n(private|protected|public)\\n\\\\b</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.language.access-type.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n((@)author)\\n\\\\s+\\n(\\n  [^@\\\\s&lt;&gt;*/]\\n  (?:[^@&lt;&gt;*/]|\\\\*[^/])*\\n)\\n(?:\\n  \\\\s*\\n  (&lt;)\\n  ([^&gt;\\\\s]+)\\n  (&gt;)\\n)?</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.angle.begin.jsdoc</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.other.email.link.underline.jsdoc</string>\\n              </dict>\\n              <key>6</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.angle.end.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n((@)borrows) \\\\s+\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # &lt;that namepath&gt;\\n\\\\s+ (as) \\\\s+              # as\\n((?:[^@\\\\s*/]|\\\\*[^/])+)    # &lt;this namepath&gt;</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>keyword.operator.control.jsdoc</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>meta.example.jsdoc</string>\\n            <key>begin</key>\\n            <string>((@)example)\\\\s+</string>\\n            <key>end</key>\\n            <string>(?=@|\\\\*/)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>match</key>\\n                <string>^\\\\s\\\\*\\\\s+</string>\\n              </dict>\\n              <dict>\\n                <key>contentName</key>\\n                <string>constant.other.description.jsdoc</string>\\n                <key>begin</key>\\n                <string>\\\\G(&lt;)caption(&gt;)</string>\\n                <key>beginCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>entity.name.tag.inline.jsdoc</string>\\n                  </dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.definition.bracket.angle.begin.jsdoc</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.definition.bracket.angle.end.jsdoc</string>\\n                  </dict>\\n                </dict>\\n                <key>end</key>\\n                <string>(&lt;/)caption(&gt;)|(?=\\\\*/)</string>\\n                <key>endCaptures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>entity.name.tag.inline.jsdoc</string>\\n                  </dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.definition.bracket.angle.begin.jsdoc</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.definition.bracket.angle.end.jsdoc</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n              <dict>\\n                <key>match</key>\\n                <string>[^\\\\s@*](?:[^*]|\\\\*[^/])*</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>0</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>source.embedded.tsx</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x) ((@)kind) \\\\s+ (class|constant|event|external|file|function|member|mixin|module|namespace|typedef) \\\\b</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>constant.language.symbol-type.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n((@)see)\\n\\\\s+\\n(?:\\n  # URL\\n  (\\n    (?=https?://)\\n    (?:[^\\\\s*]|\\\\*[^/])+\\n  )\\n  |\\n  # JSDoc namepath\\n  (\\n    (?!\\n      # Avoid matching bare URIs (also acceptable as links)\\n      https?://\\n      |\\n      # Avoid matching {@inline tags}; we match those below\\n      (?:\\\\[[^\\\\[\\\\]]*\\\\])? # Possible description [preceding]{@tag}\\n      {@(?:link|linkcode|linkplain|tutorial)\\\\b\\n    )\\n    # Matched namepath\\n    (?:[^@\\\\s*/]|\\\\*[^/])+\\n  )\\n)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.link.underline.jsdoc</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n((@)template)\\n\\\\s+\\n# One or more valid identifiers\\n(\\n  [A-Za-z_$]         # First character: non-numeric word character\\n  [\\\\w$.\\\\[\\\\]]*        # Rest of identifier\\n  (?:                # Possible list of additional identifiers\\n    \\\\s* , \\\\s*\\n    [A-Za-z_$]\\n    [\\\\w$.\\\\[\\\\]]*\\n  )*\\n)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n(\\n  (@)\\n  (?:arg|argument|const|constant|member|namespace|param|var)\\n)\\n\\\\s+\\n(\\n  [A-Za-z_$]\\n  [\\\\w$.\\\\[\\\\]]*\\n)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>((@)typedef)\\\\s+(?={)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#jsdoctype</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n                <key>match</key>\\n                <string>(?:[^@\\\\s*/]|\\\\*[^/])+</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>((@)(?:arg|argument|const|constant|member|namespace|param|prop|property|var))\\\\s+(?={)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#jsdoctype</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n                <key>match</key>\\n                <string>([A-Za-z_$][\\\\w$.\\\\[\\\\]]*)</string>\\n              </dict>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n                <key>match</key>\\n                <string>(?x)\\n(\\\\[)\\\\s*\\n[\\\\w$]+\\n(?:\\n  (?:\\\\[\\\\])?                                        # Foo[ ].bar properties within an array\\n  \\\\.                                                # Foo.Bar namespaced parameter\\n  [\\\\w$]+\\n)*\\n(?:\\n  \\\\s*\\n  (=)                                                # [foo=bar] Default parameter value\\n  \\\\s*\\n  (\\n    # The inner regexes are to stop the match early at */ and to not stop at escaped quotes\\n    (?&gt;\\n      \\\"(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!\\\"))|[^*\\\\\\\\])*?\\\" |                      # [foo=\\\"bar\\\"] Double-quoted\\n      '(?:(?:\\\\*(?!/))|(?:\\\\\\\\(?!'))|[^*\\\\\\\\])*?' |                      # [foo='bar'] Single-quoted\\n      \\\\[ (?:(?:\\\\*(?!/))|[^*])*? \\\\] |                                # [foo=[1,2]] Array literal\\n      (?:(?:\\\\*(?!/))|\\\\s(?!\\\\s*\\\\])|\\\\[.*?(?:\\\\]|(?=\\\\*/))|[^*\\\\s\\\\[\\\\]])*   # Everything else\\n    )*\\n  )\\n)?\\n\\\\s*(?:(\\\\])((?:[^*\\\\s]|\\\\*[^\\\\s/])+)?|(?=\\\\*/))</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.definition.optional-value.begin.bracket.square.jsdoc</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>keyword.operator.assignment.jsdoc</string>\\n                  </dict>\\n                  <key>3</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>source.embedded.tsx</string>\\n                  </dict>\\n                  <key>4</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.definition.optional-value.end.bracket.square.jsdoc</string>\\n                  </dict>\\n                  <key>5</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>invalid.illegal.syntax.jsdoc</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(?x)\\n(\\n  (@)\\n  (?:define|enum|exception|export|extends|lends|implements|modifies\\n  |namespace|private|protected|returns?|suppress|this|throws|type\\n  |yields?)\\n)\\n\\\\s+(?={)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=\\\\s|\\\\*/|[^{}\\\\[\\\\]A-Za-z_$])</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#jsdoctype</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>(?x)\\n(\\n  (@)\\n  (?:alias|augments|callback|constructs|emits|event|fires|exports?\\n  |extends|external|function|func|host|lends|listens|interface|memberof!?\\n  |method|module|mixes|mixin|name|requires|see|this|typedef|uses)\\n)\\n\\\\s+\\n(\\n  (?:\\n    [^{}@\\\\s*] | \\\\*[^/]\\n  )+\\n)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>contentName</key>\\n            <string>variable.other.jsdoc</string>\\n            <key>begin</key>\\n            <string>((@)(?:default(?:value)?|license|version))\\\\s+(([''\\\"]))</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.begin.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(\\\\3)|(?=$|\\\\*/)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.string.end.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>match</key>\\n            <string>((@)(?:default(?:value)?|license|tutorial|variation|version))\\\\s+([^\\\\s*]+)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>variable.other.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>storage.type.class.jsdoc</string>\\n            <key>match</key>\\n            <string>(?x) (@) (?:abstract|access|alias|api|arg|argument|async|attribute|augments|author|beta|borrows|bubbles |callback|chainable|class|classdesc|code|config|const|constant|constructor|constructs|copyright |default|defaultvalue|define|deprecated|desc|description|dict|emits|enum|event|example|exception |exports?|extends|extension(?:_?for)?|external|externs|file|fileoverview|final|fires|for|func |function|generator|global|hideconstructor|host|ignore|implements|implicitCast|inherit[Dd]oc |inner|instance|interface|internal|kind|lends|license|listens|main|member|memberof!?|method |mixes|mixins?|modifies|module|name|namespace|noalias|nocollapse|nocompile|nosideeffects |override|overview|package|param|polymer(?:Behavior)?|preserve|private|prop|property|protected |public|read[Oo]nly|record|require[ds]|returns?|see|since|static|struct|submodule|summary |suppress|template|this|throws|todo|tutorial|type|typedef|unrestricted|uses|var|variation |version|virtual|writeOnce|yields?) \\\\b</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.block.tag.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#inline-tags</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>brackets</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>{</string>\\n            <key>end</key>\\n            <string>}|(?=\\\\*/)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#brackets</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>\\\\[</string>\\n            <key>end</key>\\n            <string>\\\\]|(?=\\\\*/)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#brackets</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>inline-tags</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.other.description.jsdoc</string>\\n            <key>match</key>\\n            <string>(\\\\[)[^\\\\]]+(\\\\])(?={@(?:link|linkcode|linkplain|tutorial))</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.square.begin.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.square.end.jsdoc</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.type.instance.jsdoc</string>\\n            <key>begin</key>\\n            <string>({)((@)(?:link(?:code|plain)?|tutorial))\\\\s*</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.curly.begin.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>storage.type.class.jsdoc</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.inline.tag.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>}|(?=\\\\*/)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.curly.end.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>match</key>\\n                <string>\\\\G((?=https?://)(?:[^|}\\\\s*]|\\\\*[/])+)(\\\\|)?</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>variable.other.link.underline.jsdoc</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.separator.pipe.jsdoc</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n              <dict>\\n                <key>match</key>\\n                <string>\\\\G((?:[^{}@\\\\s|*]|\\\\*[^/])+)(\\\\|)?</string>\\n                <key>captures</key>\\n                <dict>\\n                  <key>1</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>variable.other.description.jsdoc</string>\\n                  </dict>\\n                  <key>2</key>\\n                  <dict>\\n                    <key>name</key>\\n                    <string>punctuation.separator.pipe.jsdoc</string>\\n                  </dict>\\n                </dict>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsdoctype</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>invalid.illegal.type.jsdoc</string>\\n            <key>match</key>\\n            <string>\\\\G{(?:[^}*]|\\\\*[^/}])+$</string>\\n          </dict>\\n          <dict>\\n            <key>contentName</key>\\n            <string>entity.name.type.instance.jsdoc</string>\\n            <key>begin</key>\\n            <string>\\\\G({)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>0</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.curly.begin.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>((}))\\\\s*|(?=\\\\*/)</string>\\n            <key>endCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.type.instance.jsdoc</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.bracket.curly.end.jsdoc</string>\\n              </dict>\\n            </dict>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#brackets</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-without-attributes-in-expression</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-in-expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag-without-attributes-in-expression</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?&lt;!\\\\+\\\\+|--)(?&lt;=[({\\\\[,?=&gt;:*]|&amp;&amp;|\\\\|\\\\||\\\\?|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^)\\\\s*(?=(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))?\\\\s*(&gt;))</string>\\n        <key>end</key>\\n        <string>(?!(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))?\\\\s*(&gt;))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-without-attributes</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag-without-attributes</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.tag.without-attributes.tsx</string>\\n        <key>begin</key>\\n        <string>(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))?\\\\s*(&gt;)</string>\\n        <key>end</key>\\n        <string>(&lt;/)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))?\\\\s*(&gt;)</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.begin.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.tag.namespace.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.separator.namespace.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.tag.tsx</string>\\n          </dict>\\n          <key>5</key>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.component.tsx</string>\\n          </dict>\\n          <key>6</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.begin.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.tag.namespace.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.separator.namespace.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.tag.tsx</string>\\n          </dict>\\n          <key>5</key>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.component.tsx</string>\\n          </dict>\\n          <key>6</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>contentName</key>\\n        <string>meta.jsx.children.tsx</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-children</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag-in-expression</key>\\n      <dict>\\n        <key>begin</key>\\n        <string>(?x)\\n  (?&lt;!\\\\+\\\\+|--)(?&lt;=[({\\\\[,?=&gt;:*]|&amp;&amp;|\\\\|\\\\||\\\\?|^return|[^\\\\._$[:alnum:]]return|^default|[^\\\\._$[:alnum:]]default|^)\\\\s*\\n  (?!&lt;\\\\s*[_$[:alpha:]][_$[:alnum:]]*((\\\\s+extends\\\\s+[^=&gt;])|,)) # look ahead is not type parameter of arrow\\n  (?=(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))(?=((&lt;\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?&gt;))</string>\\n        <key>end</key>\\n        <string>(?!(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))(?=((&lt;\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?&gt;))</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.tag.tsx</string>\\n        <key>begin</key>\\n        <string>(?=(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))(?=((&lt;\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?&gt;))</string>\\n        <key>end</key>\\n        <string>(/&gt;)|(?:(&lt;/)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))?\\\\s*(&gt;))</string>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.end.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.begin.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.tag.namespace.tsx</string>\\n          </dict>\\n          <key>4</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.separator.namespace.tsx</string>\\n          </dict>\\n          <key>5</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.name.tag.tsx</string>\\n          </dict>\\n          <key>6</key>\\n          <dict>\\n            <key>name</key>\\n            <string>support.class.component.tsx</string>\\n          </dict>\\n          <key>7</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.tag.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>begin</key>\\n            <string>(&lt;)\\\\s*(?:([_$a-zA-Z][-$\\\\w.]*)(?&lt;!\\\\.|-)(:))?((?:[a-z][a-z0-9]*|([_$a-zA-Z][-$\\\\w.]*))(?&lt;!\\\\.|-))(?=((&lt;\\\\s*)|(\\\\s+))(?!\\\\?)|\\\\/?&gt;)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.tag.begin.tsx</string>\\n              </dict>\\n              <key>2</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.tag.namespace.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.separator.namespace.tsx</string>\\n              </dict>\\n              <key>4</key>\\n              <dict>\\n                <key>name</key>\\n                <string>entity.name.tag.tsx</string>\\n              </dict>\\n              <key>5</key>\\n              <dict>\\n                <key>name</key>\\n                <string>support.class.component.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=[/]?&gt;)</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#comment</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#type-arguments</string>\\n              </dict>\\n              <dict>\\n                <key>include</key>\\n                <string>#jsx-tag-attributes</string>\\n              </dict>\\n            </array>\\n          </dict>\\n          <dict>\\n            <key>begin</key>\\n            <string>(&gt;)</string>\\n            <key>beginCaptures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.tag.end.tsx</string>\\n              </dict>\\n            </dict>\\n            <key>end</key>\\n            <string>(?=&lt;/)</string>\\n            <key>contentName</key>\\n            <string>meta.jsx.children.tsx</string>\\n            <key>patterns</key>\\n            <array>\\n              <dict>\\n                <key>include</key>\\n                <string>#jsx-children</string>\\n              </dict>\\n            </array>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-children</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-without-attributes</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-evaluated-code</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-entities</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-evaluated-code</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.embedded.expression.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\{</string>\\n        <key>end</key>\\n        <string>\\\\}</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.section.embedded.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.section.embedded.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#expression</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-entities</key>\\n      <dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>name</key>\\n            <string>constant.character.entity.tsx</string>\\n            <key>match</key>\\n            <string>(&amp;)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)</string>\\n            <key>captures</key>\\n            <dict>\\n              <key>1</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.entity.tsx</string>\\n              </dict>\\n              <key>3</key>\\n              <dict>\\n                <key>name</key>\\n                <string>punctuation.definition.entity.tsx</string>\\n              </dict>\\n            </dict>\\n          </dict>\\n          <dict>\\n            <key>name</key>\\n            <string>invalid.illegal.bad-ampersand.tsx</string>\\n            <key>match</key>\\n            <string>&amp;</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag-attributes</key>\\n      <dict>\\n        <key>name</key>\\n        <string>meta.tag.attributes.tsx</string>\\n        <key>begin</key>\\n        <string>\\\\s+</string>\\n        <key>end</key>\\n        <string>(?=[/]?&gt;)</string>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#comment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-attribute-name</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-attribute-assignment</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-string-double-quoted</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-string-single-quoted</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-evaluated-code</string>\\n          </dict>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-tag-attributes-illegal</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag-attribute-name</key>\\n      <dict>\\n        <key>match</key>\\n        <string>(?x)\\n  \\\\s*\\n  (?:([_$a-zA-Z][-$\\\\w.]*)(:))?\\n  ([_$a-zA-Z][-$\\\\w]*)\\n  (?=\\\\s|=|/?&gt;|/\\\\*|//)</string>\\n        <key>captures</key>\\n        <dict>\\n          <key>1</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.other.attribute-name.namespace.tsx</string>\\n          </dict>\\n          <key>2</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.separator.namespace.tsx</string>\\n          </dict>\\n          <key>3</key>\\n          <dict>\\n            <key>name</key>\\n            <string>entity.other.attribute-name.tsx</string>\\n          </dict>\\n        </dict>\\n      </dict>\\n      <key>jsx-tag-attribute-assignment</key>\\n      <dict>\\n        <key>name</key>\\n        <string>keyword.operator.assignment.tsx</string>\\n        <key>match</key>\\n        <string>=(?=\\\\s*(?:'|\\\"|{|/\\\\*|//|\\\\n))</string>\\n      </dict>\\n      <key>jsx-string-double-quoted</key>\\n      <dict>\\n        <key>name</key>\\n        <string>string.quoted.double.tsx</string>\\n        <key>begin</key>\\n        <string>\\\"</string>\\n        <key>end</key>\\n        <string>\\\"</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-entities</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-string-single-quoted</key>\\n      <dict>\\n        <key>name</key>\\n        <string>string.quoted.single.tsx</string>\\n        <key>begin</key>\\n        <string>'</string>\\n        <key>end</key>\\n        <string>'</string>\\n        <key>beginCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.begin.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>endCaptures</key>\\n        <dict>\\n          <key>0</key>\\n          <dict>\\n            <key>name</key>\\n            <string>punctuation.definition.string.end.tsx</string>\\n          </dict>\\n        </dict>\\n        <key>patterns</key>\\n        <array>\\n          <dict>\\n            <key>include</key>\\n            <string>#jsx-entities</string>\\n          </dict>\\n        </array>\\n      </dict>\\n      <key>jsx-tag-attributes-illegal</key>\\n      <dict>\\n        <key>name</key>\\n        <string>invalid.illegal.attribute.tsx</string>\\n        <key>match</key>\\n        <string>\\\\S+</string>\\n      </dict>\\n    </dict>\\n  </dict>\\n</plist>\"","module.exports = \"{\\n\\t\\\"information_for_contributors\\\": [\\n\\t\\t\\\"This file has been converted from https://github.com/octref/language-css/blob/master/grammars/css.cson\\\",\\n\\t\\t\\\"If you want to provide a fix or improvement, please create a pull request against the original repository.\\\",\\n\\t\\t\\\"Once accepted there, we are happy to receive an update request.\\\"\\n\\t],\\n\\t\\\"version\\\": \\\"https://github.com/octref/language-css/commit/ea1d7e3619966e47c57498913a5eabea0cce7538\\\",\\n\\t\\\"name\\\": \\\"CSS\\\",\\n\\t\\\"scopeName\\\": \\\"source.css\\\",\\n\\t\\\"patterns\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#combinators\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#selector\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#at-rules\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#rule-list\\\"\\n\\t\\t}\\n\\t],\\n\\t\\\"repository\\\": {\\n\\t\\t\\\"at-rules\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\A(?:\\\\\\\\xEF\\\\\\\\xBB\\\\\\\\xBF)?(?i:(?=\\\\\\\\s*@charset\\\\\\\\b))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\";|(?=$)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.terminator.rule.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.charset.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.not-lowercase.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.leading-whitespace.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.no-whitespace.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"4\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.whitespace.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"5\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.not-double-quoted.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"6\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.unclosed-string.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"7\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.unexpected-characters.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)        # Possible errors:\\\\n\\\\\\\\G\\\\n((?!@charset)@\\\\\\\\w+)   # Not lowercase (@charset is case-sensitive)\\\\n|\\\\n\\\\\\\\G(\\\\\\\\s+)             # Preceding whitespace\\\\n|\\\\n(@charset\\\\\\\\S[^;]*)    # No whitespace after @charset\\\\n|\\\\n(?<=@charset)         # Before quoted charset name\\\\n(\\\\\\\\x20{2,}|\\\\\\\\t+)      # More than one space used, or a tab\\\\n|\\\\n(?<=@charset\\\\\\\\x20)    # Beginning of charset name\\\\n([^\\\\\\\";]+)              # Not double-quoted\\\\n|\\\\n(\\\\\\\"[^\\\\\\\"]+$)             # Unclosed quote\\\\n|\\\\n(?<=\\\\\\\")                # After charset name\\\\n([^;]+)               # Unexpected junk instead of semicolon\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.charset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"((@)charset)(?=\\\\\\\\s)\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\"|$\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.double.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?:\\\\\\\\G|^)(?=(?:[^\\\\\\\"])+$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.unclosed.string.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((@)import)(?:\\\\\\\\s+|$|(?=['\\\\\\\"]|/\\\\\\\\*))\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.import.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\";\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.terminator.rule.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.import.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\\\\\\s*(?=/\\\\\\\\*)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=\\\\\\\\*/)\\\\\\\\s*\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#url\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#media-query-list\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((@)font-face)(?=\\\\\\\\s*|{|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.font-face.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.font-face.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(@)page(?=[\\\\\\\\s:{]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.page.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*($|[:{;]))\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.page.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?=@media(\\\\\\\\s|\\\\\\\\(|/\\\\\\\\*|$))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=})(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)\\\\\\\\G(@)media\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.media.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[{;])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.media.header.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#media-query-list\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.media.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.media.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.media.body.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"$self\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?=@counter-style([\\\\\\\\s'\\\\\\\"{;]|/\\\\\\\\*|$))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=})(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)\\\\\\\\G(@)counter-style\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.counter-style.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*{)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.counter-style.header.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(?:[-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F])     # First letter\\\\n(?:[-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]      # Remainder of identifier\\\\n  |\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n)*\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.parameter.style-name.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.property-list.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.property-list.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.counter-style.body.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list-innards\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?=@document([\\\\\\\\s'\\\\\\\"{;]|/\\\\\\\\*|$))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=})(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)\\\\\\\\G(@)document\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.document.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[{;])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.document.header.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(url-prefix|domain|regexp)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.document-rule.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.document-rule.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"[^'\\\\\\\")\\\\\\\\s]+\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.parameter.document-rule.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#url\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#commas\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.document.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.document.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.document.body.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"$self\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?=@(?:-(?:webkit|moz|o|ms)-)?keyframes([\\\\\\\\s'\\\\\\\"{;]|/\\\\\\\\*|$))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=})(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)\\\\\\\\G(@)(?:-(?:webkit|moz|o|ms)-)?keyframes\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.keyframes.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*{)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.keyframes.header.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(?:[-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F])     # First letter\\\\n(?:[-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]      # Remainder of identifier\\\\n  |\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n)*\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.parameter.keyframe-list.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.keyframes.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.keyframes.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.keyframes.body.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.keyframe-offset.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.keyframe-offset.percentage.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(?<![\\\\\\\\w-]) (from|to) (?![\\\\\\\\w-])         # Keywords for 0% | 100%\\\\n|\\\\n([-+]?(?:\\\\\\\\d+(?:\\\\\\\\.\\\\\\\\d+)?|\\\\\\\\.\\\\\\\\d+)%)     # Percentile value\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?=@supports(\\\\\\\\s|\\\\\\\\(|/\\\\\\\\*|$))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=})(?!\\\\\\\\G)|(?=;)\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)\\\\\\\\G(@)supports\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.supports.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[{;])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.supports.header.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#feature-query-operators\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#feature-query\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.supports.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.supports.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.supports.body.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"$self\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((@)viewport)(?=[\\\\\\\\s'\\\\\\\"{;]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.viewport.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[@{;])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.viewport.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((@)font-feature-values)(?=[\\\\\\\\s'\\\\\\\"{;]|/\\\\\\\\*|$)\\\\\\\\s*\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.font-feature-values.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"contentName\\\": \\\"variable.parameter.font-name.css\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[@{;])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.font-features.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#font-features\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((@)namespace)(?=[\\\\\\\\s'\\\\\\\";]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.namespace.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\";|(?=[@{])\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.terminator.rule.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.namespace.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#url\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.function.namespace-prefix.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(?:\\\\\\\\G|^|(?<=\\\\\\\\s))\\\\n(?=\\\\n  (?<=\\\\\\\\s|^)                             # Starts with whitespace\\\\n  (?:[-a-zA-Z_]|[^\\\\\\\\x00-\\\\\\\\x7F])          # Then a valid identifier character\\\\n  |\\\\n  \\\\\\\\s*                                   # Possible adjoining whitespace\\\\n  /\\\\\\\\*(?:[^*]|\\\\\\\\*[^/])*\\\\\\\\*/              # Injected comment\\\\n)\\\\n(.*?)                                    # Grouped to embed #comment-block\\\\n(\\\\n  (?:[-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F])     # First letter\\\\n  (?:[-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]      # Remainder of identifier\\\\n    |\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n  )*\\\\n)\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?=@[\\\\\\\\w-]+(\\\\\\\\s|\\\\\\\\(|/\\\\\\\\*|$))\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?<=})(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)\\\\\\\\G(@)[\\\\\\\\w-]+\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[{;])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.header.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.body.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"$self\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"color-keywords\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<![\\\\\\\\w-])(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.color.w3c-standard-color-name.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood\\\\n|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan\\\\n|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange\\\\n|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise\\\\n|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen\\\\n|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki\\\\n|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow\\\\n|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray\\\\n|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue\\\\n|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise\\\\n|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered\\\\n|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum\\\\n|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell\\\\n|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato\\\\n|transparent|turquoise|violet|wheat|whitesmoke|yellowgreen)\\\\n(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.color.w3c-extended-color-name.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<![\\\\\\\\w-])currentColor(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.color.current.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow\\\\n|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption\\\\n|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow\\\\n|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText)\\\\n(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.deprecated.color.system.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"combinators\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"/deep/|>>>\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.deprecated.combinator.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\">>|>|\\\\\\\\+|~\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.combinator.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"commas\\\": {\\n\\t\\t\\t\\\"match\\\": \\\",\\\",\\n\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.list.comma.css\\\"\\n\\t\\t},\\n\\t\\t\\\"comment-block\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"/\\\\\\\\*\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.begin.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\*/\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.end.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"comment.block.css\\\"\\n\\t\\t},\\n\\t\\t\\\"escapes\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\\\\\\\\\[0-9a-fA-F]{1,6}\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.character.escape.codepoint.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\\\\\\\\\$\\\\\\\\s*\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"^(?<!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.character.escape.newline.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\\\\\\\\\.\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.character.escape.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"feature-query\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\(\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.condition.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.condition.end.bracket.round.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.feature-query.css\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#feature-query-operators\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#feature-query\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"feature-query-operators\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<=[\\\\\\\\s()]|^|\\\\\\\\*/)(and|not|or)(?=[\\\\\\\\s()]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.logical.feature.$1.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list-innards\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"font-features\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"(?xi)\\\\n((@)(annotation|character-variant|ornaments|styleset|stylistic|swash))\\\\n(?=[\\\\\\\\s@'\\\\\\\"{;]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.control.at-rule.${3:/downcase}.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.keyword.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(?<=})\\\",\\n\\t\\t\\t\\\"name\\\": \\\"meta.at-rule.${3:/downcase}.css\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.property-list.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.property-list.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.property-list.font-feature.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(?: [-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F] )   # First letter\\\\n(?: [-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]     # Remainder of identifier\\\\n  | \\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n)*\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.font-feature.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list-innards\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"functions\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(calc)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.calc.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.calc.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"[*/]|(?<=\\\\\\\\s|^)[-+](?=\\\\\\\\s|$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.arithmetic.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(rgba?|hsla?)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.misc.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.color.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(\\\\n  (?:-webkit-|-moz-|-o-)?    # Accept prefixed/historical variants\\\\n  (?:repeating-)?            # \\\\\\\"Repeating\\\\\\\"-type gradient\\\\n  (?:linear|radial|conic)    # Shape\\\\n  -gradient\\\\n)\\\\n(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.gradient.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.gradient.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<![\\\\\\\\w-])(from|to|at)(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.gradient.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(-webkit-gradient)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.deprecated.gradient.function.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.gradient.invalid.deprecated.gradient.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(from|to|color-stop)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.deprecated.function.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(annotation|attr|blur|brightness|character-variant|contrast|counters?\\\\n|cross-fade|drop-shadow|element|fit-content|format|grayscale|hue-rotate\\\\n|image-set|invert|local|minmax|opacity|ornaments|repeat|saturate|sepia\\\\n|styleset|stylistic|swash|symbols)\\\\n(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.misc.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.misc.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<=[,\\\\\\\\s\\\\\\\"]|\\\\\\\\*/|^)\\\\\\\\d+x(?=[\\\\\\\\s,\\\\\\\"')]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.numeric.other.density.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"[^'\\\\\\\"),\\\\\\\\s]+\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.parameter.misc.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(circle|ellipse|inset|polygon|rect)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.shape.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.shape.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<=\\\\\\\\s|^|\\\\\\\\*/)(at|round)(?=\\\\\\\\s|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.shape.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(cubic-bezier|steps)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.timing-function.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.timing-function.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<![\\\\\\\\w-])(start|end)(?=\\\\\\\\s*\\\\\\\\)|$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.step-direction.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n( (?:translate|scale|rotate)(?:[XYZ]|3D)?\\\\n| matrix(?:3D)?\\\\n| skew[XY]?\\\\n| perspective\\\\n)\\\\n(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.transform.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#url\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w-])(var)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.misc.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.function.variable.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.argument.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n--\\\\n(?:[-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F])     # First letter\\\\n(?:[-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]      # Remainder of identifier\\\\n  |\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n)*\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"functional-pseudo-classes\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((:)dir)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.pseudo-class.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<![\\\\\\\\w-])(ltr|rtl)(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.text-direction.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((:)lang)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.pseudo-class.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<=[(,\\\\\\\\s])[a-zA-Z]+(-[a-zA-Z0-9]*|\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))*(?=[),\\\\\\\\s])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.language-range.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.double.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<=[\\\\\\\"\\\\\\\\s])[a-zA-Z*]+(-[a-zA-Z0-9*]*)*(?=[\\\\\\\"\\\\\\\\s])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.language-range.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"'\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"'\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.single.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<=['\\\\\\\\s])[a-zA-Z*]+(-[a-zA-Z0-9*]*)*(?=['\\\\\\\\s])\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.language-range.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#commas\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((:)(?:not|has|matches))(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.pseudo-class.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#selector-innards\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i)((:)nth-(?:last-)?(?:child|of-type))(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.pseudo-class.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)[+-]?(\\\\\\\\d+n?|n)(\\\\\\\\s*[+-]\\\\\\\\s*\\\\\\\\d+)?\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.numeric.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)even|odd\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.parity.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"media-features\\\": {\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.type.property-name.media.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.deprecated.media.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.type.vendored.property-name.media.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(?<=^|\\\\\\\\s|\\\\\\\\(|\\\\\\\\*/)           # Preceded by whitespace, bracket or comment\\\\n(?:\\\\n  # Standardised features\\\\n  (\\\\n    (?:min-|max-)?            # Range features\\\\n    (?: height\\\\n      | width\\\\n      | aspect-ratio\\\\n      | color\\\\n      | color-index\\\\n      | monochrome\\\\n      | resolution\\\\n    )\\\\n    | grid                    # Discrete features\\\\n    | scan\\\\n    | orientation\\\\n    | display-mode\\\\n  )\\\\n  |\\\\n  # Deprecated features\\\\n  (\\\\n    (?:min-|max-)?            # Deprecated in Media Queries 4\\\\n    device-\\\\n    (?: height\\\\n      | width\\\\n      | aspect-ratio\\\\n    )\\\\n  )\\\\n  |\\\\n  # Vendor extensions\\\\n  (\\\\n    (?:\\\\n      # Spec-compliant syntax\\\\n      [-_]\\\\n      (?: webkit              # Webkit/Blink\\\\n        | apple|khtml         # Webkit aliases\\\\n        | epub                # ePub3\\\\n        | moz                 # Gecko\\\\n        | ms                  # Microsoft\\\\n        | o                   # Presto (pre-Opera 15)\\\\n        | xv|ah|rim|atsc|     # Less common vendors\\\\n          hp|tc|wap|ro\\\\n      )\\\\n      |\\\\n      # Non-standard prefixes\\\\n      (?: mso                 # Microsoft Office\\\\n        | prince              # YesLogic\\\\n      )\\\\n    )\\\\n    -\\\\n    [\\\\\\\\w-]+                   # Feature name\\\\n    (?=                       # Terminates correctly\\\\n      \\\\\\\\s*                    # Possible whitespace\\\\n      (?:                     # Possible injected comment\\\\n        /\\\\\\\\*\\\\n        (?:[^*]|\\\\\\\\*[^/])*\\\\n        \\\\\\\\*/\\\\n      )?\\\\n      \\\\\\\\s*\\\\n      [:)]                    # Ends with a colon or closed bracket\\\\n    )\\\\n  )\\\\n)\\\\n(?=\\\\\\\\s|$|[><:=]|\\\\\\\\)|/\\\\\\\\*)     # Terminates cleanly\\\"\\n\\t\\t},\\n\\t\\t\\\"media-feature-keywords\\\": {\\n\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(?<=^|\\\\\\\\s|:|\\\\\\\\*/)\\\\n(?: portrait                  # Orientation\\\\n  | landscape\\\\n  | progressive               # Scan types\\\\n  | interlace\\\\n  | fullscreen                # Display modes\\\\n  | standalone\\\\n  | minimal-ui\\\\n  | browser\\\\n)\\\\n(?=\\\\\\\\s|\\\\\\\\)|$)\\\",\\n\\t\\t\\t\\\"name\\\": \\\"support.constant.property-value.css\\\"\\n\\t\\t},\\n\\t\\t\\\"media-query\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[{;])\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#media-types\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<=\\\\\\\\s|^|,|\\\\\\\\*/)(only|not)(?=\\\\\\\\s|{|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.logical.$1.media.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?i)(?<=\\\\\\\\s|^|\\\\\\\\*/|\\\\\\\\))and(?=\\\\\\\\s|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.logical.and.media.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\",(?:(?:\\\\\\\\s*,)+|(?=\\\\\\\\s*[;){]))\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.comma.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#commas\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\(\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.parameters.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.parameters.end.bracket.round.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#media-features\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#media-feature-keywords\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\":\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.key-value.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\">=|<=|=|<|>\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.comparison.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.numeric.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.arithmetic.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.numeric.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(\\\\\\\\d+)\\\\\\\\s*(/)\\\\\\\\s*(\\\\\\\\d+)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.ratio.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#numeric-values\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"media-query-list\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"(?=\\\\\\\\s*[^{;])\\\",\\n\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[{;])\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#media-query\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"media-types\\\": {\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.media.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.deprecated.constant.media.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(?<=^|\\\\\\\\s|,|\\\\\\\\*/)\\\\n(?:\\\\n  # Valid media types\\\\n  (all|print|screen|speech)\\\\n  |\\\\n  # Deprecated in Media Queries 4: http://dev.w3.org/csswg/mediaqueries/#media-types\\\\n  (aural|braille|embossed|handheld|projection|tty|tv)\\\\n)\\\\n(?=$|[{,\\\\\\\\s;]|/\\\\\\\\*)\\\"\\n\\t\\t},\\n\\t\\t\\\"numeric-values\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.constant.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(#)(?:[0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\\\\\\\\b\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.other.color.rgb-value.hex.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.other.unit.percentage.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.other.unit.${2:/downcase}.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n[-+]?                               # Sign indicator\\\\n\\\\n(?:                                 # Numerals\\\\n    [0-9]+ (?:\\\\\\\\.[0-9]+)?           # Integer/float with leading digits\\\\n  | \\\\\\\\.[0-9]+                       # Float without leading digits\\\\n)\\\\n\\\\n(?:                                 # Scientific notation\\\\n  (?<=[0-9])                        # Exponent must follow a digit\\\\n  E                                 # Exponent indicator\\\\n  [-+]?                             # Possible sign indicator\\\\n  [0-9]+                            # Exponent value\\\\n)?\\\\n\\\\n(?:                                 # Possible unit for data-type:\\\\n  (%)                               # - Percentage\\\\n  | ( deg|grad|rad|turn             # - Angle\\\\n    | Hz|kHz                        # - Frequency\\\\n    | ch|cm|em|ex|fr|in|mm|mozmm|   # - Length\\\\n      pc|pt|px|q|rem|vh|vmax|vmin|\\\\n      vw\\\\n    | dpi|dpcm|dppx                 # - Resolution\\\\n    | s|ms                          # - Time\\\\n    )\\\\n  \\\\\\\\b                               # Boundary checking intentionally lax to\\\\n)?                                  # facilitate embedding in CSS-like grammars\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.numeric.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"property-keywords\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(above|absolute|active|add|additive|after-edge|alias|all|all-petite-caps|all-scroll|all-small-caps|alpha|alphabetic|alternate|alternate-reverse\\\\n|always|antialiased|auto|auto-pos|available|avoid|avoid-column|avoid-page|avoid-region|backwards|balance|baseline|before-edge|below|bevel\\\\n|bidi-override|blink|block|block-axis|block-start|block-end|bold|bolder|border|border-box|both|bottom|bottom-outside|break-all|break-word|bullets\\\\n|butt|capitalize|caption|cell|center|central|char|circle|clip|clone|close-quote|closest-corner|closest-side|col-resize|collapse|color|color-burn\\\\n|color-dodge|column|column-reverse|common-ligatures|compact|condensed|contain|content|content-box|contents|context-menu|contextual|copy|cover\\\\n|crisp-edges|crispEdges|crosshair|cyclic|darken|dashed|decimal|default|dense|diagonal-fractions|difference|digits|disabled|disc|discretionary-ligatures\\\\n|distribute|distribute-all-lines|distribute-letter|distribute-space|dot|dotted|double|double-circle|downleft|downright|e-resize|each-line|ease|ease-in\\\\n|ease-in-out|ease-out|economy|ellipse|ellipsis|embed|end|evenodd|ew-resize|exact|exclude|exclusion|expanded|extends|extra-condensed|extra-expanded\\\\n|fallback|farthest-corner|farthest-side|fill|fill-available|fill-box|filled|fit-content|fixed|flat|flex|flex-end|flex-start|flip|forwards|freeze\\\\n|from-image|full-width|geometricPrecision|georgian|grab|grabbing|grayscale|grid|groove|hand|hanging|hard-light|help|hidden|hide\\\\n|historical-forms|historical-ligatures|horizontal|horizontal-tb|hue|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\\\\n|ideographic|inactive|infinite|inherit|initial|inline|inline-axis|inline-block|inline-end|inline-flex|inline-grid|inline-list-item|inline-start\\\\n|inline-table|inset|inside|inter-character|inter-ideograph|inter-word|intersect|invert|isolate|isolate-override|italic|jis04|jis78|jis83\\\\n|jis90|justify|justify-all|kannada|keep-all|landscape|large|larger|left|lighten|lighter|line|line-edge|line-through|linear|linearRGB\\\\n|lining-nums|list-item|local|loose|lowercase|lr|lr-tb|ltr|luminance|luminosity|main-size|mandatory|manipulation|manual|margin-box|match-parent\\\\n|match-source|mathematical|max-content|medium|menu|message-box|middle|min-content|miter|mixed|move|multiply|n-resize|narrower|ne-resize\\\\n|nearest-neighbor|nesw-resize|newspaper|no-change|no-clip|no-close-quote|no-common-ligatures|no-contextual|no-discretionary-ligatures\\\\n|no-drop|no-historical-ligatures|no-open-quote|no-repeat|none|nonzero|normal|not-allowed|nowrap|ns-resize|numbers|numeric|nw-resize|nwse-resize\\\\n|oblique|oldstyle-nums|open|open-quote|optimizeLegibility|optimizeQuality|optimizeSpeed|optional|ordinal|outset|outside|over|overlay|overline|padding\\\\n|padding-box|page|painted|pan-down|pan-left|pan-right|pan-up|pan-x|pan-y|paused|petite-caps|pixelated|plaintext|pointer|portrait|pre|pre-line\\\\n|pre-wrap|preserve-3d|progress|progressive|proportional-nums|proportional-width|proximity|radial|recto|region|relative|remove|repeat|repeat-[xy]\\\\n|reset-size|reverse|revert|ridge|right|rl|rl-tb|round|row|row-resize|row-reverse|row-severse|rtl|ruby|ruby-base|ruby-base-container|ruby-text\\\\n|ruby-text-container|run-in|running|s-resize|saturation|scale-down|screen|scroll|scroll-position|se-resize|semi-condensed|semi-expanded|separate\\\\n|sesame|show|sideways|sideways-left|sideways-lr|sideways-right|sideways-rl|simplified|slashed-zero|slice|small|small-caps|small-caption|smaller\\\\n|smooth|soft-light|solid|space|space-around|space-between|space-evenly|spell-out|square|sRGB|stacked-fractions|start|static|status-bar|swap\\\\n|step-end|step-start|sticky|stretch|strict|stroke|stroke-box|style|sub|subgrid|subpixel-antialiased|subtract|super|sw-resize|symbolic|table\\\\n|table-caption|table-cell|table-column|table-column-group|table-footer-group|table-header-group|table-row|table-row-group|tabular-nums|tb|tb-rl\\\\n|text|text-after-edge|text-before-edge|text-bottom|text-top|thick|thin|titling-caps|top|top-outside|touch|traditional|transparent|triangle\\\\n|ultra-condensed|ultra-expanded|under|underline|unicase|unset|upleft|uppercase|upright|use-glyph-orientation|use-script|verso|vertical\\\\n|vertical-ideographic|vertical-lr|vertical-rl|vertical-text|view-box|visible|visibleFill|visiblePainted|visibleStroke|w-resize|wait|wavy\\\\n|weight|whitespace|wider|words|wrap|wrap-reverse|x-large|x-small|xx-large|xx-small|zero|zoom-in|zoom-out)\\\\n(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.property-value.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|cjk-ideographic\\\\n|decimal|decimal-leading-zero|devanagari|disc|disclosure-closed|disclosure-open|ethiopic-halehame-am\\\\n|ethiopic-halehame-ti-e[rt]|ethiopic-numeric|georgian|gujarati|gurmukhi|hangul|hangul-consonant|hebrew\\\\n|hiragana|hiragana-iroha|japanese-formal|japanese-informal|kannada|katakana|katakana-iroha|khmer\\\\n|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek\\\\n|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal\\\\n|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian\\\\n|upper-latin|upper-roman|urdu)\\\\n(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.property-value.list-style-type.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<![\\\\\\\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.vendored.property-value.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<![\\\\\\\\w-])(?i:arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace)(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.constant.font-name.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"property-names\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w-])\\\\n(?:\\\\n    # Standard CSS\\\\n    additive-symbols|align-content|align-items|align-self|all|animation|animation-delay|animation-direction\\\\n  | animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state\\\\n  | animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode\\\\n  | background-clip|background-color|background-image|background-origin|background-position|background-position-[xy]\\\\n  | background-repeat|background-size|block-size|border|border-block-end|border-block-end-color|border-block-end-style\\\\n  | border-block-end-width|border-block-start|border-block-start-color|border-block-start-style\\\\n  | border-block-start-width|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius\\\\n  | border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset\\\\n  | border-image-repeat|border-image-slice|border-image-source|border-image-width|border-inline-end\\\\n  | border-inline-end-color|border-inline-end-style|border-inline-end-width|border-inline-start\\\\n  | border-inline-start-color|border-inline-start-style|border-inline-start-width|border-left|border-left-color\\\\n  | border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style\\\\n  | border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius\\\\n  | border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-decoration-break\\\\n  | box-shadow|box-sizing|break-after|break-before|break-inside|caption-side|clear|clip|clip-path|color\\\\n  | column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width\\\\n  | column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display\\\\n  | empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float\\\\n  | font|font-display|font-family|font-feature-settings|font-kerning|font-language-override|font-size|font-size-adjust\\\\n  | font-stretch|font-style|font-synthesis|font-variant|font-variant-alternates|font-variant-caps\\\\n  | font-variant-east-asian|font-variant-ligatures|font-variant-numeric|font-variant-position|font-weight\\\\n  | grid|grid-area|grid-auto-columns|grid-auto-flow|grid-auto-rows|grid-column|grid-column-end|grid-column-gap\\\\n  | grid-column-start|grid-gap|grid-row|grid-row-end|grid-row-gap|grid-row-start|grid-template|grid-template-areas\\\\n  | grid-template-columns|grid-template-rows|height|hyphens|image-orientation|image-rendering|image-resolution\\\\n  | ime-mode|inline-size|isolation|justify-content|left|letter-spacing|line-break|line-height|list-style\\\\n  | list-style-image|list-style-position|list-style-type|margin|margin-block-end|margin-block-start|margin-bottom\\\\n  | margin-inline-end|margin-inline-start|margin-left|margin-right|margin-top|mask|mask-clip|mask-composite\\\\n  | mask-image|mask-mode|mask-origin|mask-position|mask-repeat|mask-size|mask-type|max-block-size|max-height\\\\n  | max-inline-size|max-width|max-zoom|min-block-size|min-height|min-inline-size|min-width|min-zoom|mix-blend-mode\\\\n  | negative|object-fit|object-position|offset-block-end|offset-block-start|offset-inline-end|offset-inline-start\\\\n  | opacity|order|orientation|orphans|outline|outline-color|outline-offset|outline-style|outline-width|overflow\\\\n  | overflow-wrap|overflow-[xy]|pad|padding|padding-block-end|padding-block-start|padding-bottom|padding-inline-end\\\\n  | padding-inline-start|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside\\\\n  | perspective|perspective-origin|pointer-events|position|prefix|quotes|range|resize|right|ruby-align|ruby-merge\\\\n  | ruby-position|scroll-behavior|scroll-snap-coordinate|scroll-snap-destination|scroll-snap-type|shape-image-threshold\\\\n  | shape-margin|shape-outside|speak-as|src|suffix|symbols|system|tab-size|table-layout|text-align|text-align-last\\\\n  | text-combine-upright|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-emphasis\\\\n  | text-emphasis-color|text-emphasis-position|text-emphasis-style|text-indent|text-orientation|text-overflow\\\\n  | text-rendering|text-shadow|text-transform|text-underline-position|top|touch-action|transform|transform-box\\\\n  | transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property\\\\n  | transition-timing-function|unicode-bidi|unicode-range|user-zoom|vertical-align|visibility|white-space|widows\\\\n  | width|will-change|word-break|word-spacing|word-wrap|writing-mode|z-index|zoom\\\\n\\\\n  # SVG attributes\\\\n  | alignment-baseline|baseline-shift|clip-rule|color-interpolation|color-interpolation-filters|color-profile\\\\n  | color-rendering|cx|cy|dominant-baseline|enable-background|fill|fill-opacity|fill-rule|flood-color|flood-opacity\\\\n  | glyph-orientation-horizontal|glyph-orientation-vertical|height|kerning|lighting-color|marker-end|marker-mid\\\\n  | marker-start|r|rx|ry|shape-rendering|stop-color|stop-opacity|stroke|stroke-dasharray|stroke-dashoffset|stroke-linecap\\\\n  | stroke-linejoin|stroke-miterlimit|stroke-opacity|stroke-width|text-anchor|width|x|y\\\\n\\\\n  # Not listed on MDN; presumably deprecated\\\\n  | adjust|after|align|align-last|alignment|alignment-adjust|appearance|attachment|azimuth|background-break\\\\n  | balance|baseline|before|bidi|binding|bookmark|bookmark-label|bookmark-level|bookmark-target|border-length\\\\n  | bottom-color|bottom-left-radius|bottom-right-radius|bottom-style|bottom-width|box|box-align|box-direction\\\\n  | box-flex|box-flex-group|box-lines|box-ordinal-group|box-orient|box-pack|break|character|collapse|column\\\\n  | column-break-after|column-break-before|count|counter|crop|cue|cue-after|cue-before|decoration|decoration-break\\\\n  | delay|display-model|display-role|down|drop|drop-initial-after-adjust|drop-initial-after-align|drop-initial-before-adjust\\\\n  | drop-initial-before-align|drop-initial-size|drop-initial-value|duration|elevation|emphasis|family|fit|fit-position\\\\n  | flex-group|float-offset|gap|grid-columns|grid-rows|hanging-punctuation|header|hyphenate|hyphenate-after|hyphenate-before\\\\n  | hyphenate-character|hyphenate-lines|hyphenate-resource|icon|image|increment|indent|index|initial-after-adjust\\\\n  | initial-after-align|initial-before-adjust|initial-before-align|initial-size|initial-value|inline-box-align|iteration-count\\\\n  | justify|label|left-color|left-style|left-width|length|level|line|line-stacking|line-stacking-ruby|line-stacking-shift\\\\n  | line-stacking-strategy|lines|list|mark|mark-after|mark-before|marks|marquee|marquee-direction|marquee-play-count|marquee-speed\\\\n  | marquee-style|max|min|model|move-to|name|nav|nav-down|nav-index|nav-left|nav-right|nav-up|new|numeral|offset|ordinal-group\\\\n  | orient|origin|overflow-style|overhang|pack|page|page-policy|pause|pause-after|pause-before|phonemes|pitch|pitch-range\\\\n  | play-count|play-during|play-state|point|presentation|presentation-level|profile|property|punctuation|punctuation-trim\\\\n  | radius|rate|rendering-intent|repeat|replace|reset|resolution|resource|respond-to|rest|rest-after|rest-before|richness\\\\n  | right-color|right-style|right-width|role|rotation|rotation-point|rows|ruby|ruby-overhang|ruby-span|rule|rule-color\\\\n  | rule-style|rule-width|shadow|size|size-adjust|sizing|space|space-collapse|spacing|span|speak|speak-header|speak-numeral\\\\n  | speak-punctuation|speech|speech-rate|speed|stacking|stacking-ruby|stacking-shift|stacking-strategy|stress|stretch\\\\n  | string-set|style|style-image|style-position|style-type|target|target-name|target-new|target-position|text|text-height\\\\n  | text-justify|text-outline|text-replace|text-wrap|timing-function|top-color|top-left-radius|top-right-radius|top-style\\\\n  | top-width|trim|unicode|up|user-select|variant|voice|voice-balance|voice-duration|voice-family|voice-pitch|voice-pitch-range\\\\n  | voice-rate|voice-stress|voice-volume|volume|weight|white|white-space-collapse|word|wrap\\\\n)\\\\n(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.type.property-name.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<![\\\\\\\\w-])(?i:-(?:ah|apple|atsc|epub|hp|khtml|moz|ms|o|rim|ro|tc|wap|webkit|xv)|(?:mso|prince))-[a-zA-Z-]+\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.type.vendored.property-name.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"property-values\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#commas\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#functions\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-keywords\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#unicode-range\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#numeric-values\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#color-keywords\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"!\\\\\\\\s*important(?![\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.other.important.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"pseudo-classes\\\": {\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.colon.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(:)(:*)\\\\n(?: active|any-link|checked|default|defined|disabled|empty|enabled|first\\\\n  | (?:first|last|only)-(?:child|of-type)|focus|focus-visible|focus-within\\\\n  | fullscreen|host|hover|in-range|indeterminate|invalid|left|link\\\\n  | optional|out-of-range|placeholder-shown|read-only|read-write\\\\n  | required|right|root|scope|target|unresolved\\\\n  | valid|visited\\\\n)(?![\\\\\\\\w-]|\\\\\\\\s*[;}])\\\",\\n\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.pseudo-class.css\\\"\\n\\t\\t},\\n\\t\\t\\\"pseudo-elements\\\": {\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"match\\\": \\\"(?xi)\\\\n(?:\\\\n  (::?)                       # Elements using both : and :: notation\\\\n  (?: after\\\\n    | before\\\\n    | first-letter\\\\n    | first-line\\\\n    | (?:-(?:ah|apple|atsc|epub|hp|khtml|moz\\\\n            |ms|o|rim|ro|tc|wap|webkit|xv)\\\\n        | (?:mso|prince))\\\\n      -[a-z-]+\\\\n  )\\\\n  |\\\\n  (::)                        # Double-colon only\\\\n  (?: backdrop\\\\n    | content\\\\n    | grammar-error\\\\n    | marker\\\\n    | placeholder\\\\n    | selection\\\\n    | shadow\\\\n    | spelling-error\\\\n  )\\\\n)\\\\n(?![\\\\\\\\w-]|\\\\\\\\s*[;}])\\\",\\n\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.pseudo-element.css\\\"\\n\\t\\t},\\n\\t\\t\\\"rule-list\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"{\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.property-list.begin.bracket.curly.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"}\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.property-list.end.bracket.curly.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.property-list.css\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#rule-list-innards\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"rule-list-innards\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#font-features\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x) (?<![\\\\\\\\w-])\\\\n--\\\\n(?:[-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F])     # First letter\\\\n(?:[-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]      # Remainder of identifier\\\\n  |\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n)*\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?<![-a-zA-Z])(?=[-a-zA-Z])\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"$|(?![-a-zA-Z])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.property-name.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-names\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(:)\\\\\\\\s*\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.key-value.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\s*(;)|\\\\\\\\s*(?=}|\\\\\\\\))\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.terminator.rule.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"contentName\\\": \\\"meta.property-value.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#property-values\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\";\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.terminator.rule.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"selector\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"(?x)\\\\n(?=\\\\n  (?:\\\\\\\\|)?                    # Possible anonymous namespace prefix\\\\n  (?:\\\\n    [-\\\\\\\\[:.*\\\\\\\\#a-zA-Z_]       # Valid selector character\\\\n    |\\\\n    [^\\\\\\\\x00-\\\\\\\\x7F]            # Which can include non-ASCII symbols\\\\n    |\\\\n    \\\\\\\\\\\\\\\\                      # Or an escape sequence\\\\n    (?:[0-9a-fA-F]{1,6}|.)\\\\n  )\\\\n)\\\",\\n\\t\\t\\t\\\"end\\\": \\\"(?=\\\\\\\\s*[/@{)])\\\",\\n\\t\\t\\t\\\"name\\\": \\\"meta.selector.css\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#selector-innards\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"selector-innards\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#commas\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#combinators\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.namespace-prefix.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(?:^|(?<=[\\\\\\\\s,(};]))         # Follows whitespace, comma, semicolon, or bracket\\\\n(?!\\\\n  [-\\\\\\\\w*]+\\\\n  \\\\\\\\|\\\\n  (?!\\\\n      [-\\\\\\\\[:.*\\\\\\\\#a-zA-Z_]    # Make sure there's a selector to match\\\\n    | [^\\\\\\\\x00-\\\\\\\\x7F]\\\\n  )\\\\n)\\\\n(\\\\n  (?: [-a-zA-Z_]    | [^\\\\\\\\x00-\\\\\\\\x7F] )   # First letter\\\\n  (?: [-a-zA-Z0-9_] | [^\\\\\\\\x00-\\\\\\\\x7F]     # Remainder of identifier\\\\n    | \\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)\\\\n  )*\\\\n  |\\\\n  \\\\\\\\*     # Universal namespace\\\\n)?\\\\n(\\\\\\\\|)     # Namespace separator\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-names\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\*\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.wildcard.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x) (?<![@\\\\\\\\w-])\\\\n([.\\\\\\\\#])\\\\n# Invalid identifier\\\\n(\\\\n  (?:\\\\n    # Starts with ASCII digits, with possible hyphen preceding it\\\\n    -?[0-9]\\\\n    |\\\\n    # Consists of a hyphen only\\\\n    -                                      # Terminated by either:\\\\n    (?= $                                  # - End-of-line\\\\n      | [\\\\\\\\s,.\\\\\\\\#)\\\\\\\\[:{>+~|]               # - Followed by another selector\\\\n      | /\\\\\\\\*                               # - Followed by a block comment\\\\n    )\\\\n    |\\\\n    # Name contains unescaped ASCII symbol\\\\n    (?:                                    # Check for acceptable preceding characters\\\\n        [-a-zA-Z_0-9]|[^\\\\\\\\x00-\\\\\\\\x7F]       # - Valid selector character\\\\n      | \\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)         # - Escape sequence\\\\n    )*\\\\n    (?:                                    # Invalid punctuation\\\\n      [!\\\\\\\"'%&(*;<?@^`|\\\\\\\\]}]                 # - NOTE: We exempt `)` from the list of checked\\\\n      |                                    #   symbols to avoid matching `:not(.invalid)`\\\\n      / (?!\\\\\\\\*)                            # - Avoid invalidating the start of a comment\\\\n    )+\\\\n  )\\\\n  # Mark remainder of selector invalid\\\\n  (?: [-a-zA-Z_0-9]|[^\\\\\\\\x00-\\\\\\\\x7F]         # - Otherwise valid identifier characters\\\\n    | \\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)           # - Escape sequence\\\\n  )*\\\\n)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.bad-identifier.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(\\\\\\\\.)                                  # Valid class-name\\\\n(\\\\n  (?: [-a-zA-Z_0-9]|[^\\\\\\\\x00-\\\\\\\\x7F]     # Valid identifier characters\\\\n    | \\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.)       # Escape sequence\\\\n  )+\\\\n)                                      # Followed by either:\\\\n(?= $                                  # - End of the line\\\\n  | [\\\\\\\\s,.\\\\\\\\#)\\\\\\\\[:{>+~|]               # - Another selector\\\\n  | /\\\\\\\\*                               # - A block comment\\\\n)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.class.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(\\\\\\\\#)\\\\n(\\\\n  -?\\\\n  (?![0-9])\\\\n  (?:[-a-zA-Z0-9_]|[^\\\\\\\\x00-\\\\\\\\x7F]|\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+\\\\n)\\\\n(?=$|[\\\\\\\\s,.\\\\\\\\#)\\\\\\\\[:{>+~|]|/\\\\\\\\*)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.id.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\[\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.begin.bracket.square.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\]\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.end.bracket.square.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.attribute-selector.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"storage.modifier.ignore-case.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<=[\\\\\\\"'\\\\\\\\s]|^|\\\\\\\\*/)\\\\\\\\s*([iI])\\\\\\\\s*(?=[\\\\\\\\s\\\\\\\\]]|/\\\\\\\\*|$)\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.unquoted.attribute-value.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)(?<==)\\\\\\\\s*((?!/\\\\\\\\*)(?:[^\\\\\\\\\\\\\\\\\\\\\\\"'\\\\\\\\s\\\\\\\\]]|\\\\\\\\\\\\\\\\.)+)\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"[~|^$*]?=\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"keyword.operator.pattern.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\|\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.namespace-prefix.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n# Qualified namespace prefix\\\\n( -?(?!\\\\\\\\d)(?:[\\\\\\\\w-]|[^\\\\\\\\x00-\\\\\\\\x7F]|\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+\\\\n| \\\\\\\\*\\\\n)\\\\n# Lookahead to ensure there's a valid identifier ahead\\\\n(?=\\\\n  \\\\\\\\| (?!\\\\\\\\s|=|$|\\\\\\\\])\\\\n  (?: -?(?!\\\\\\\\d)\\\\n   |   [\\\\\\\\\\\\\\\\\\\\\\\\w-]\\\\n   |   [^\\\\\\\\x00-\\\\\\\\x7F]\\\\n   )\\\\n)\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x)\\\\n(-?(?!\\\\\\\\d)(?>[\\\\\\\\w-]|[^\\\\\\\\x00-\\\\\\\\x7F]|\\\\\\\\\\\\\\\\(?:[0-9a-fA-F]{1,6}|.))+)\\\\n\\\\\\\\s*\\\\n(?=[~|^\\\\\\\\]$*=]|/\\\\\\\\*)\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#pseudo-classes\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#pseudo-elements\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#functional-pseudo-classes\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?x) (?<![@\\\\\\\\w-])\\\\n(?=            # Custom element names must:\\\\n  [a-z]        # - start with a lowercase ASCII letter,\\\\n  \\\\\\\\w* -       # - contain at least one dash\\\\n)\\\\n(?:\\\\n  (?![A-Z])    # No uppercase ASCII letters are allowed\\\\n  [\\\\\\\\w-]       # Allow any other word character or dash\\\\n)+\\\\n(?![(\\\\\\\\w-])\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.custom.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"string\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\"|(?<!\\\\\\\\\\\\\\\\)(?=$|\\\\\\\\n)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.double.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?:\\\\\\\\G|^)(?=(?:[^\\\\\\\\\\\\\\\\\\\\\\\"]|\\\\\\\\\\\\\\\\.)+$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.unclosed.string.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"'\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"'|(?<!\\\\\\\\\\\\\\\\)(?=$|\\\\\\\\n)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.css\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.single.css\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?:\\\\\\\\G|^)(?=(?:[^\\\\\\\\\\\\\\\\']|\\\\\\\\\\\\\\\\.)+$)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.unclosed.string.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"tag-names\\\": {\\n\\t\\t\\t\\\"match\\\": \\\"(?xi) (?<![\\\\\\\\w:-])\\\\n(?:\\\\n    # HTML\\\\n    a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|bgsound\\\\n  | big|blink|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|command\\\\n  | content|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|element|em|embed|fieldset\\\\n  | figcaption|figure|font|footer|form|frame|frameset|h[1-6]|head|header|hgroup|hr|html|i\\\\n  | iframe|image|img|input|ins|isindex|kbd|keygen|label|legend|li|link|listing|main|map|mark\\\\n  | marquee|math|menu|menuitem|meta|meter|multicol|nav|nextid|nobr|noembed|noframes|noscript\\\\n  | object|ol|optgroup|option|output|p|param|picture|plaintext|pre|progress|q|rb|rp|rt|rtc\\\\n  | ruby|s|samp|script|section|select|shadow|slot|small|source|spacer|span|strike|strong\\\\n  | style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr\\\\n  | track|tt|u|ul|var|video|wbr|xmp\\\\n\\\\n  # SVG\\\\n  | altGlyph|altGlyphDef|altGlyphItem|animate|animateColor|animateMotion|animateTransform\\\\n  | circle|clipPath|color-profile|cursor|defs|desc|discard|ellipse|feBlend|feColorMatrix\\\\n  | feComponentTransfer|feComposite|feConvolveMatrix|feDiffuseLighting|feDisplacementMap\\\\n  | feDistantLight|feDropShadow|feFlood|feFuncA|feFuncB|feFuncG|feFuncR|feGaussianBlur\\\\n  | feImage|feMerge|feMergeNode|feMorphology|feOffset|fePointLight|feSpecularLighting\\\\n  | feSpotLight|feTile|feTurbulence|filter|font-face|font-face-format|font-face-name\\\\n  | font-face-src|font-face-uri|foreignObject|g|glyph|glyphRef|hatch|hatchpath|hkern\\\\n  | line|linearGradient|marker|mask|mesh|meshgradient|meshpatch|meshrow|metadata\\\\n  | missing-glyph|mpath|path|pattern|polygon|polyline|radialGradient|rect|set|solidcolor\\\\n  | stop|svg|switch|symbol|text|textPath|tref|tspan|use|view|vkern\\\\n\\\\n  # MathML\\\\n  | annotation|annotation-xml|maction|maligngroup|malignmark|math|menclose|merror|mfenced\\\\n  | mfrac|mglyph|mi|mlabeledtr|mlongdiv|mmultiscripts|mn|mo|mover|mpadded|mphantom|mroot\\\\n  | mrow|ms|mscarries|mscarry|msgroup|msline|mspace|msqrt|msrow|mstack|mstyle|msub|msubsup\\\\n  | msup|mtable|mtd|mtext|mtr|munder|munderover|semantics\\\\n)\\\\n(?=[+~>\\\\\\\\s,.\\\\\\\\#|){:\\\\\\\\[]|/\\\\\\\\*|$)\\\",\\n\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.css\\\"\\n\\t\\t},\\n\\t\\t\\\"unicode-range\\\": {\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.other.unicode-range.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.dash.unicode-range.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"match\\\": \\\"(?<![\\\\\\\\w-])[Uu]\\\\\\\\+[0-9A-Fa-f?]{1,6}(?:(-)[0-9A-Fa-f]{1,6})?(?![\\\\\\\\w-])\\\"\\n\\t\\t},\\n\\t\\t\\\"url\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"(?i)(?<![\\\\\\\\w@-])(url)(\\\\\\\\()\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.url.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.begin.bracket.round.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\)\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.section.function.end.bracket.round.css\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.function.url.css\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"[^'\\\\\\\")\\\\\\\\s]+\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"variable.parameter.url.css\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment-block\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#escapes\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t}\\n}\"","module.exports = \"{\\n\\t\\\"information_for_contributors\\\": [\\n\\t\\t\\\"This file has been converted from https://github.com/textmate/html.tmbundle/blob/master/Syntaxes/HTML.plist\\\",\\n\\t\\t\\\"If you want to provide a fix or improvement, please create a pull request against the original repository.\\\",\\n\\t\\t\\\"Once accepted there, we are happy to receive an update request.\\\"\\n\\t],\\n\\t\\\"version\\\": \\\"https://github.com/textmate/html.tmbundle/commit/a723f08ebd49c67c22aca08dd8f17d0bf836ec93\\\",\\n\\t\\\"name\\\": \\\"HTML\\\",\\n\\t\\\"scopeName\\\": \\\"text.html.basic\\\",\\n\\t\\\"injections\\\": {\\n\\t\\t\\\"R:text.html - (comment.block, text.html source)\\\": {\\n\\t\\t\\t\\\"comment\\\": \\\"Use R: to ensure this matches after any other injections.\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"<\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.bad-angle-bracket.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t},\\n\\t\\\"patterns\\\": [\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(<)([a-zA-Z][a-zA-Z0-9:-]*)(?=[^>]*></\\\\\\\\2>)\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(>(<)/)(\\\\\\\\2)(>)\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.scope.between-tag-pair.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"4\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.any.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(<\\\\\\\\?)(xml)\\\",\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.xml.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(\\\\\\\\?>)\\\",\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.preprocessor.xml.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-generic-attribute\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string-double-quoted\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string-single-quoted\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"<!--\\\",\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"--\\\\\\\\s*>\\\",\\n\\t\\t\\t\\\"name\\\": \\\"comment.block.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"--\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.bad-comments-or-CDATA.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"<!\\\",\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\">\\\",\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.sgml.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?i:DOCTYPE)\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.doctype.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=>)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.sgml.doctype.html\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\"[^\\\\\\\">]*\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.double.doctype.identifiers-and-DTDs.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\[CDATA\\\\\\\\[\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"]](?=>)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.other.inline-data.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(\\\\\\\\s*)(?!--|>)\\\\\\\\S(\\\\\\\\s*)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.bad-comments-or-CDATA.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(^[ \\\\\\\\t]+)?(?=<(?i:style))\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.whitespace.embedded.leading.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(?!\\\\\\\\G)([ \\\\\\\\t]*$\\\\\\\\n?)?\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.whitespace.embedded.trailing.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(<)((?i:style))\\\\\\\\b\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.style.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(/>)|((<)/)((?i:style))(>)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.style.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.css\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"4\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"5\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.embedded.block.html\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=/>)|(>)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.style.html\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=</(?i:style))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.css\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"source.css\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(^[ \\\\\\\\t]+)?(?=<(?i:script))\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.whitespace.embedded.leading.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(?!\\\\\\\\G)([ \\\\\\\\t]*$\\\\\\\\n?)?\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.whitespace.embedded.trailing.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(<)((?i:script))\\\\\\\\b\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(/>)|(/)((?i:script))(>)\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"4\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.embedded.block.html\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=/>|/)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(>)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"((<))(?=/(?i:script))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=</(?i:script))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.js\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(^[ \\\\\\\\t]+)?(?=//)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.whitespace.comment.leading.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"//\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=</script)|\\\\\\\\n\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.double-slash.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"/\\\\\\\\*\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\*/|(?=</script)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"comment.block.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"source.js\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?i:(?=/?>|type(?=[\\\\\\\\s=])(?!\\\\\\\\s*=\\\\\\\\s*('|\\\\\\\"|)(text/(javascript|ecmascript|babel)|application/((x-)?javascript|ecmascript|babel)|module)[\\\\\\\\s\\\\\\\"'>])))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?=(?i:type\\\\\\\\s*=\\\\\\\\s*('|\\\\\\\"|)(text/(x-handlebars|(x-(handlebars-)?|ng-)?template|html)[\\\\\\\\s\\\\\\\"'>])))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"((<))(?=/(?i:script))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"text.html.basic\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(>)|(?=/>)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=</(?i:script))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"text.html.basic\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"text.html.basic\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?=(?i:type))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(<)(?=/(?i:script))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\G\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(>)|(?=/>)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.tag.metadata.script.html\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(?!\\\\\\\\G)\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"end\\\": \\\"(?=</(?i:script))\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.unknown\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(</?)((?i:body|head|html)\\\\\\\\b)\\\",\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.structure.any.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(>)\\\",\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.structure.any.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(</?)((?i:address|blockquote|dd|div|section|article|aside|header|footer|nav|menu|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|pre)\\\\\\\\b)\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.block.any.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(>)\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.block.any.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\\\\\\\\b(?!-))\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.inline.any.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"((?: ?/)?>)\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.inline.any.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"begin\\\": \\\"(</?)([a-zA-Z][a-zA-Z0-9:-]*)\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.begin.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.name.tag.other.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(/?>)\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.tag.end.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"meta.tag.other.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-stuff\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"include\\\": \\\"#entities\\\"\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\t\\\"match\\\": \\\"<>\\\",\\n\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.incomplete.html\\\"\\n\\t\\t}\\n\\t],\\n\\t\\\"repository\\\": {\\n\\t\\t\\\"embedded-code\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#smarty\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#python\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"entities\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"3\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.entity.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(&)([a-zA-Z0-9]+|#[0-9]+|#[xX][0-9a-fA-F]+)(;)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"constant.character.entity.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"&\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"invalid.illegal.bad-ampersand.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"python\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"(?:^\\\\\\\\s*)<\\\\\\\\?python(?!.*\\\\\\\\?>)\\\",\\n\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\?>(?:\\\\\\\\s*$\\\\\\\\n)?\\\",\\n\\t\\t\\t\\\"name\\\": \\\"source.python.embedded.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"source.python\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"smarty\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"(\\\\\\\\{(literal)\\\\\\\\})\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.smarty.embedded.html\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.function.built-in.smarty\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(\\\\\\\\{/(literal)\\\\\\\\})\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"{{|{\\\",\\n\\t\\t\\t\\t\\t\\\"disabled\\\": 1,\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"}}|}\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"source.smarty.embedded.html\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"source.smarty\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"string-double-quoted\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"string.quoted.double.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#entities\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"string-single-quoted\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"'\\\",\\n\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"'\\\",\\n\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"name\\\": \\\"string.quoted.single.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#entities\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"tag-generic-attribute\\\": {\\n\\t\\t\\t\\\"match\\\": \\\"(?<=[^=])\\\\\\\\b([a-zA-Z0-9:-]+)\\\",\\n\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.html\\\"\\n\\t\\t},\\n\\t\\t\\\"tag-id-attribute\\\": {\\n\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\b(id)\\\\\\\\b\\\\\\\\s*(=)\\\",\\n\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\\"1\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"entity.other.attribute-name.id.html\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"2\\\": {\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.key-value.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\t\\\"end\\\": \\\"(?!\\\\\\\\G)(?<='|\\\\\\\"|[^\\\\\\\\s<>/])\\\",\\n\\t\\t\\t\\\"name\\\": \\\"meta.attribute-with-value.id.html\\\",\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"contentName\\\": \\\"meta.toc-list.id.html\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\"\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.double.html\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#entities\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"'\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.begin.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"contentName\\\": \\\"meta.toc-list.id.html\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"'\\\",\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.string.end.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.quoted.single.html\\\",\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#entities\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"meta.toc-list.id.html\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(?<==)(?:[^\\\\\\\\s<>/'\\\\\\\"]|/(?!>))+\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"string.unquoted.html\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"tag-stuff\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-id-attribute\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#tag-generic-attribute\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string-double-quoted\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#string-single-quoted\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#embedded-code\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"include\\\": \\\"#unquoted-attribute\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"unquoted-attribute\\\": {\\n\\t\\t\\t\\\"match\\\": \\\"(?<==)(?:[^\\\\\\\\s<>/'\\\\\\\"]|/(?!>))+\\\",\\n\\t\\t\\t\\\"name\\\": \\\"string.unquoted.html\\\"\\n\\t\\t}\\n\\t}\\n}\"","module.exports = function() {\n  return new Worker(\"/\" + \"monaco-typings-ata.03a9901c.worker.js\");\n};","'use strict';\n\nmodule.exports = LRUCache;\n\n// This will be a proper iterable 'Map' in engines that support it,\n// or a fakey-fake PseudoMap in older versions.\nvar Map = require('pseudomap');\nvar util = require('util');\n\n// A linked list to keep track of recently-used-ness\nvar Yallist = require('yallist');\n\n// use symbols if possible, otherwise just _props\nvar hasSymbol = typeof Symbol === 'function';\nvar makeSymbol;\nif (hasSymbol) {\n  makeSymbol = function(key) {\n    return Symbol(key);\n  };\n} else {\n  makeSymbol = function(key) {\n    return '_' + key;\n  };\n}\n\nvar MAX = makeSymbol('max');\nvar LENGTH = makeSymbol('length');\nvar LENGTH_CALCULATOR = makeSymbol('lengthCalculator');\nvar ALLOW_STALE = makeSymbol('allowStale');\nvar MAX_AGE = makeSymbol('maxAge');\nvar DISPOSE = makeSymbol('dispose');\nvar NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet');\nvar LRU_LIST = makeSymbol('lruList');\nvar CACHE = makeSymbol('cache');\n\nfunction naiveLength() {\n  return 1;\n}\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nfunction LRUCache(options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options);\n  }\n\n  if (typeof options === 'number') {\n    options = { max: options };\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  var max = (this[MAX] = options.max);\n  // Kind of weird to have a default max of Infinity, but oh well.\n  if (!max || !(typeof max === 'number') || max <= 0) {\n    this[MAX] = Infinity;\n  }\n\n  var lc = options.length || naiveLength;\n  if (typeof lc !== 'function') {\n    lc = naiveLength;\n  }\n  this[LENGTH_CALCULATOR] = lc;\n\n  this[ALLOW_STALE] = options.stale || false;\n  this[MAX_AGE] = options.maxAge || 0;\n  this[DISPOSE] = options.dispose;\n  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n  this.reset();\n}\n\n// resize the cache when the max changes.\nObject.defineProperty(LRUCache.prototype, 'max', {\n  set: function(mL) {\n    if (!mL || !(typeof mL === 'number') || mL <= 0) {\n      mL = Infinity;\n    }\n    this[MAX] = mL;\n    trim(this);\n  },\n  get: function() {\n    return this[MAX];\n  },\n  enumerable: true,\n});\n\nObject.defineProperty(LRUCache.prototype, 'allowStale', {\n  set: function(allowStale) {\n    this[ALLOW_STALE] = !!allowStale;\n  },\n  get: function() {\n    return this[ALLOW_STALE];\n  },\n  enumerable: true,\n});\n\nObject.defineProperty(LRUCache.prototype, 'maxAge', {\n  set: function(mA) {\n    if (!mA || !(typeof mA === 'number') || mA < 0) {\n      mA = 0;\n    }\n    this[MAX_AGE] = mA;\n    trim(this);\n  },\n  get: function() {\n    return this[MAX_AGE];\n  },\n  enumerable: true,\n});\n\n// resize the cache when the lengthCalculator changes.\nObject.defineProperty(LRUCache.prototype, 'lengthCalculator', {\n  set: function(lC) {\n    if (typeof lC !== 'function') {\n      lC = naiveLength;\n    }\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC;\n      this[LENGTH] = 0;\n      this[LRU_LIST].forEach(function(hit) {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n        this[LENGTH] += hit.length;\n      }, this);\n    }\n    trim(this);\n  },\n  get: function() {\n    return this[LENGTH_CALCULATOR];\n  },\n  enumerable: true,\n});\n\nObject.defineProperty(LRUCache.prototype, 'length', {\n  get: function() {\n    return this[LENGTH];\n  },\n  enumerable: true,\n});\n\nObject.defineProperty(LRUCache.prototype, 'itemCount', {\n  get: function() {\n    return this[LRU_LIST].length;\n  },\n  enumerable: true,\n});\n\nLRUCache.prototype.rforEach = function(fn, thisp) {\n  thisp = thisp || this;\n  for (var walker = this[LRU_LIST].tail; walker !== null; ) {\n    var prev = walker.prev;\n    forEachStep(this, fn, walker, thisp);\n    walker = prev;\n  }\n};\n\nfunction forEachStep(self, fn, node, thisp) {\n  var hit = node.value;\n  if (isStale(self, hit)) {\n    del(self, node);\n    if (!self[ALLOW_STALE]) {\n      hit = undefined;\n    }\n  }\n  if (hit) {\n    fn.call(thisp, hit.value, hit.key, self);\n  }\n}\n\nLRUCache.prototype.forEach = function(fn, thisp) {\n  thisp = thisp || this;\n  for (var walker = this[LRU_LIST].head; walker !== null; ) {\n    var next = walker.next;\n    forEachStep(this, fn, walker, thisp);\n    walker = next;\n  }\n};\n\nLRUCache.prototype.keys = function() {\n  return this[LRU_LIST].toArray().map(function(k) {\n    return k.key;\n  }, this);\n};\n\nLRUCache.prototype.values = function() {\n  return this[LRU_LIST].toArray().map(function(k) {\n    return k.value;\n  }, this);\n};\n\nLRUCache.prototype.reset = function() {\n  if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {\n    this[LRU_LIST].forEach(function(hit) {\n      this[DISPOSE](hit.key, hit.value);\n    }, this);\n  }\n\n  this[CACHE] = new Map(); // hash of items by key\n  this[LRU_LIST] = new Yallist(); // list of items in order of use recency\n  this[LENGTH] = 0; // length of items in the list\n};\n\nLRUCache.prototype.dump = function() {\n  return this[LRU_LIST].map(function(hit) {\n    if (!isStale(this, hit)) {\n      return {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0),\n      };\n    }\n  }, this)\n    .toArray()\n    .filter(function(h) {\n      return h;\n    });\n};\n\nLRUCache.prototype.dumpLru = function() {\n  return this[LRU_LIST];\n};\n\nLRUCache.prototype.inspect = function(n, opts) {\n  var str = 'LRUCache {';\n  var extras = false;\n\n  var as = this[ALLOW_STALE];\n  if (as) {\n    str += '\\n  allowStale: true';\n    extras = true;\n  }\n\n  var max = this[MAX];\n  if (max && max !== Infinity) {\n    if (extras) {\n      str += ',';\n    }\n    str += '\\n  max: ' + util.inspect(max, opts);\n    extras = true;\n  }\n\n  var maxAge = this[MAX_AGE];\n  if (maxAge) {\n    if (extras) {\n      str += ',';\n    }\n    str += '\\n  maxAge: ' + util.inspect(maxAge, opts);\n    extras = true;\n  }\n\n  var lc = this[LENGTH_CALCULATOR];\n  if (lc && lc !== naiveLength) {\n    if (extras) {\n      str += ',';\n    }\n    str += '\\n  length: ' + util.inspect(this[LENGTH], opts);\n    extras = true;\n  }\n\n  var didFirst = false;\n  this[LRU_LIST].forEach(function(item) {\n    if (didFirst) {\n      str += ',\\n  ';\n    } else {\n      if (extras) {\n        str += ',\\n';\n      }\n      didFirst = true;\n      str += '\\n  ';\n    }\n    var key = util\n      .inspect(item.key)\n      .split('\\n')\n      .join('\\n  ');\n    var val = { value: item.value };\n    if (item.maxAge !== maxAge) {\n      val.maxAge = item.maxAge;\n    }\n    if (lc !== naiveLength) {\n      val.length = item.length;\n    }\n    if (isStale(this, item)) {\n      val.stale = true;\n    }\n\n    val = util\n      .inspect(val, opts)\n      .split('\\n')\n      .join('\\n  ');\n    str += key + ' => ' + val;\n  });\n\n  if (didFirst || extras) {\n    str += '\\n';\n  }\n  str += '}';\n\n  return str;\n};\n\nLRUCache.prototype.set = function(key, value, maxAge) {\n  maxAge = maxAge || this[MAX_AGE];\n\n  var now = maxAge ? Date.now() : 0;\n  var len = this[LENGTH_CALCULATOR](value, key);\n\n  if (this[CACHE].has(key)) {\n    if (len > this[MAX]) {\n      del(this, this[CACHE].get(key));\n      return false;\n    }\n\n    var node = this[CACHE].get(key);\n    var item = node.value;\n\n    // dispose of the old one before overwriting\n    // split out into 2 ifs for better coverage tracking\n    if (this[DISPOSE]) {\n      if (!this[NO_DISPOSE_ON_SET]) {\n        this[DISPOSE](key, item.value);\n      }\n    }\n\n    item.now = now;\n    item.maxAge = maxAge;\n    item.value = value;\n    this[LENGTH] += len - item.length;\n    item.length = len;\n    this.get(key);\n    trim(this);\n    return true;\n  }\n\n  var hit = new Entry(key, value, len, now, maxAge);\n\n  // oversized objects fall out of cache automatically.\n  if (hit.length > this[MAX]) {\n    if (this[DISPOSE]) {\n      this[DISPOSE](key, value);\n    }\n    return false;\n  }\n\n  this[LENGTH] += hit.length;\n  this[LRU_LIST].unshift(hit);\n  this[CACHE].set(key, this[LRU_LIST].head);\n  trim(this);\n  return true;\n};\n\nLRUCache.prototype.has = function(key) {\n  if (!this[CACHE].has(key)) return false;\n  var hit = this[CACHE].get(key).value;\n  if (isStale(this, hit)) {\n    return false;\n  }\n  return true;\n};\n\nLRUCache.prototype.get = function(key) {\n  return get(this, key, true);\n};\n\nLRUCache.prototype.peek = function(key) {\n  return get(this, key, false);\n};\n\nLRUCache.prototype.pop = function() {\n  var node = this[LRU_LIST].tail;\n  if (!node) return null;\n  del(this, node);\n  return node.value;\n};\n\nLRUCache.prototype.del = function(key) {\n  del(this, this[CACHE].get(key));\n};\n\nLRUCache.prototype.load = function(arr) {\n  // reset the cache\n  this.reset();\n\n  var now = Date.now();\n  // A previous serialized cache has the most recent items first\n  for (var l = arr.length - 1; l >= 0; l--) {\n    var hit = arr[l];\n    var expiresAt = hit.e || 0;\n    if (expiresAt === 0) {\n      // the item was created without expiration in a non aged cache\n      this.set(hit.k, hit.v);\n    } else {\n      var maxAge = expiresAt - now;\n      // dont add already expired items\n      if (maxAge > 0) {\n        this.set(hit.k, hit.v, maxAge);\n      }\n    }\n  }\n};\n\nLRUCache.prototype.prune = function() {\n  var self = this;\n  this[CACHE].forEach(function(value, key) {\n    get(self, key, false);\n  });\n};\n\nfunction get(self, key, doUse) {\n  var node = self[CACHE].get(key);\n  if (node) {\n    var hit = node.value;\n    if (isStale(self, hit)) {\n      del(self, node);\n      if (!self[ALLOW_STALE]) hit = undefined;\n    } else {\n      if (doUse) {\n        self[LRU_LIST].unshiftNode(node);\n      }\n    }\n    if (hit) hit = hit.value;\n  }\n  return hit;\n}\n\nfunction isStale(self, hit) {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {\n    return false;\n  }\n  var stale = false;\n  var diff = Date.now() - hit.now;\n  if (hit.maxAge) {\n    stale = diff > hit.maxAge;\n  } else {\n    stale = self[MAX_AGE] && diff > self[MAX_AGE];\n  }\n  return stale;\n}\n\nfunction trim(self) {\n  if (self[LENGTH] > self[MAX]) {\n    for (\n      var walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;\n\n    ) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      var prev = walker.prev;\n      del(self, walker);\n      walker = prev;\n    }\n  }\n}\n\nfunction del(self, node) {\n  if (node) {\n    var hit = node.value;\n    if (self[DISPOSE]) {\n      self[DISPOSE](hit.key, hit.value);\n    }\n    self[LENGTH] -= hit.length;\n    self[CACHE].delete(hit.key);\n    self[LRU_LIST].removeNode(node);\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry(key, value, length, now, maxAge) {\n  this.key = key;\n  this.value = value;\n  this.length = length;\n  this.now = now;\n  this.maxAge = maxAge || 0;\n}\n","import styled, { css } from 'styled-components';\nimport NotSyncedIcon from 'react-icons/lib/go/primitive-dot';\n\nexport const Container = styled.div`\n  position: absolute;\n\n  top: 0;\n  left: 0;\n  right: 0;\n\n  z-index: 60;\n\n  margin: auto;\n  padding-bottom: 0.25rem;\n\n  background-color: ${props => props.theme.background};\n\n  max-width: 650px;\n  width: 100%;\n\n  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.6);\n`;\n\nexport const InputContainer = styled.div`\n  padding: 0.5rem;\n  input {\n    width: 100%;\n  }\n`;\n\nexport const Items = styled.div`\n  max-height: 500px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nexport const Entry = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-size: 0.875rem;\n  padding: 0.25rem 0.75rem;\n  cursor: pointer;\n\n  ${({ isNotSynced }) =>\n    isNotSynced &&\n    css`\n      padding-left: 2rem;\n    `};\n  color: rgba(255, 255, 255, 0.8);\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      background-color: ${props => props.theme.secondary.clearer(0.7)};\n    `};\n`;\n\nexport const NotSyncedIconWithMargin = styled(NotSyncedIcon)`\n  position: absolute;\n  left: 0.75rem;\n  top: 0;\n  color: ${props => props.theme.templateColor || props.theme.secondary};\n  vertical-align: middle;\n\n  margin-top: 6px;\n`;\n\nexport const CurrentModuleText = styled.div`\n  position: absolute;\n  right: 0.75rem;\n  font-weight: 500;\n  color: ${props => props.theme.secondary};\n`;\n\nexport const Name = styled.span`\n  margin: 0 0.5rem;\n`;\n\nexport const Path = styled.span`\n  margin: 0 0.25rem;\n  font-weight: 400;\n  color: rgba(255, 255, 255, 0.5);\n`;\n","import * as React from 'react';\nimport { sortBy, groupBy, flatten } from 'lodash-es';\nimport Downshift from 'downshift';\nimport matchSorter from 'match-sorter';\nimport { getModulePath } from '@codesandbox/common/lib/sandbox/modules';\nimport Input from '@codesandbox/common/lib/components/Input';\nimport EntryIcons from 'app/pages/Sandbox/Editor/Workspace/Files/DirectoryEntry/Entry/EntryIcons';\n// eslint-disable-next-line import/extensions\nimport getType from 'app/utils/get-type.ts';\nimport { ESC } from '@codesandbox/common/lib/utils/keycodes';\nimport {\n  Container,\n  InputContainer,\n  Items,\n  Entry,\n  NotSyncedIconWithMargin,\n  CurrentModuleText,\n  Name,\n  Path,\n} from './elements';\n\nexport default class FuzzySearch extends React.PureComponent {\n  // This is a precached map of paths to module\n  paths = {};\n\n  UNSAFE_componentWillMount() {\n    const { modules, directories } = this.props;\n    const modulePathData = modules.map(m => {\n      const path = getModulePath(modules, directories, m.id);\n      return {\n        m,\n        path,\n        depth: path.split('/').length,\n      };\n    });\n\n    const groupedPaths = groupBy(modulePathData, n => n.depth);\n    const sortedPaths = Object.values(groupedPaths).map(group =>\n      sortBy(group, n => n.path)\n    );\n    const flattenedPaths = flatten(sortedPaths);\n\n    this.paths = flattenedPaths.reduce(\n      (paths, { m, path }) => ({\n        ...paths,\n        [m.id]: { path: path.replace('/', ''), m },\n      }),\n      {}\n    );\n  }\n\n  itemToString = m => (m ? m.path : '');\n\n  getItems = (value = '') => {\n    const pathArray = Object.keys(this.paths).map(id => this.paths[id]);\n\n    return matchSorter(pathArray, value, { keys: ['path'] });\n  };\n\n  onChange = item => {\n    this.props.setCurrentModule(item.m.id);\n  };\n\n  handleKeyUp = e => {\n    if (e.keyCode === ESC) {\n      this.props.closeFuzzySearch();\n    }\n  };\n\n  render() {\n    const { currentModuleId } = this.props;\n    return (\n      <Container>\n        <Downshift\n          defaultHighlightedIndex={0}\n          defaultIsOpen\n          onChange={this.onChange}\n          itemToString={this.itemToString}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            selectedItem,\n            inputValue,\n            highlightedIndex,\n          }) => (\n            <div style={{ width: '100%' }}>\n              <InputContainer>\n                <Input\n                  {...getInputProps({\n                    ref: el => el && el.focus(),\n                    onKeyUp: this.handleKeyUp,\n                    // Timeout so the fuzzy handler can still select the module\n                    onBlur: () => setTimeout(this.props.closeFuzzySearch, 100),\n                  })}\n                />\n              </InputContainer>\n              <Items>\n                {this.getItems(inputValue).map((item, index) => (\n                  <Entry\n                    {...getItemProps({\n                      item,\n                      index,\n                      isActive: highlightedIndex === index,\n                      isSelected: selectedItem === item,\n                    })}\n                    key={item.m.id}\n                    isNotSynced={item.m.isNotSynced}\n                  >\n                    {item.m.isNotSynced && <NotSyncedIconWithMargin />}\n                    <EntryIcons\n                      isNotSynced={item.m.isNotSynced}\n                      type={getType(item.m.title)}\n                      error={item.m.errors && item.m.errors.length > 0}\n                    />\n                    <Name>{item.m.title}</Name>\n                    {item.m.title !== this.itemToString(item) && (\n                      <Path>{this.itemToString(item)}</Path>\n                    )}\n                    {item.m.id === currentModuleId && (\n                      <CurrentModuleText>currently opened</CurrentModuleText>\n                    )}\n                  </Entry>\n                ))}\n              </Items>\n            </div>\n          )}\n        </Downshift>\n      </Container>\n    );\n  }\n}\n","const monacoTextmate1 = require('monaco-textmate');\n\nclass TokenizerState {\n  constructor(_ruleStack) {\n    this._ruleStack = _ruleStack;\n  }\n\n  get ruleStack() {\n    return this._ruleStack;\n  }\n\n  clone() {\n    return new TokenizerState(this._ruleStack);\n  }\n\n  equals(other) {\n    if (\n      !other ||\n      !(other instanceof TokenizerState) ||\n      other !== this ||\n      other._ruleStack !== this._ruleStack\n    ) {\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * Wires up monaco-editor with monaco-textmate\n *\n * @param monaco monaco namespace this operation should apply to (usually the `monaco` global unless you have some other setup)\n * @param registry TmGrammar `Registry` this wiring should rely on to provide the grammars\n * @param languages `Map` of language ids (string) to TM names (string)\n */\nexport function wireTmGrammars(monaco, registry, languages) {\n  return Promise.all(\n    Array.from(languages.keys()).map(async languageId => {\n      try {\n        const grammar = await registry.loadGrammar(languages.get(languageId));\n\n        monaco.languages.setTokensProvider(languageId, {\n          getInitialState: () => new TokenizerState(monacoTextmate1.INITIAL),\n          tokenize: (line, state) => {\n            const res = grammar.tokenizeLine(line, state.ruleStack);\n\n            return {\n              endState: new TokenizerState(res.ruleStack),\n              tokens: res.tokens.map(token => ({\n                ...token,\n                // TODO: At the moment, monaco-editor doesn't seem to accept array of scopes\n                scopes: token.scopes[token.scopes.length - 1],\n              })),\n            };\n          },\n        });\n      } catch (e) {\n        if (process.env.NODE_ENV === 'development') {\n          console.warn(e); // eslint-disable-line\n        }\n      }\n    })\n  );\n}\n","import { loadWASM } from 'onigasm'; // peer dependency of 'monaco-textmate'\nimport { Registry } from 'monaco-textmate'; // peer dependency\nimport { wireTmGrammars } from './set-grammars';\n\n/* eslint-disable */\nimport cssGrammar from '!raw-loader!./tmGrammars/css.json.tmLanguage';\nimport htmlGrammar from '!raw-loader!./tmGrammars/html.json.tmLanguage';\nimport tsGrammar from '!raw-loader!./tmGrammars/TypeScriptReact.tmLanguage';\n/* eslint-enable */\n\nlet grammarsLoaded = false;\n\nexport async function liftOff(monaco) {\n  if (grammarsLoaded) {\n    return;\n  }\n  grammarsLoaded = true;\n  // eslint-disable-next-line global-require\n  await loadWASM('/public/onigasm/2.2.1/onigasm.wasm'); // See https://www.npmjs.com/package/onigasm#light-it-up\n\n  const registry = new Registry({\n    getGrammarDefinition: async scopeName => {\n      if (scopeName === 'source.css') {\n        return {\n          format: 'json',\n          content: cssGrammar,\n        };\n      }\n      if (scopeName === 'text.html.basic') {\n        return {\n          format: 'json',\n          content: htmlGrammar,\n        };\n      }\n\n      return {\n        format: 'plist',\n        content: tsGrammar,\n      };\n    },\n  });\n\n  // map of monaco \"language id's\" to TextMate scopeNames\n  const grammars = new Map();\n  grammars.set('css', 'source.css');\n  grammars.set('html', 'text.html.basic');\n  grammars.set('vue', 'text.html.basic');\n  grammars.set('typescript', 'source.tsx');\n  grammars.set('javascript', 'source.js');\n\n  await wireTmGrammars(monaco, registry, grammars);\n}\n","import { indexToLineAndColumn } from 'app/utils/monaco-index-converter';\nimport { css } from 'glamor';\n\nconst fadeIn = css.keyframes('fadeIn', {\n  // optional name\n  '0%': { opacity: 0 },\n  '100%': { opacity: 1 },\n});\n\nconst fadeOut = css.keyframes('fadeOut', {\n  // optional name\n  '0%': { opacity: 1 },\n  '100%': { opacity: 0 },\n});\n\nconst userClassesGenerated = {};\nconst userSelectionDecorations = {};\n\nexport function updateUserSelections(\n  monaco,\n  editor,\n  currentModule,\n  userSelections: Array<\n    | {\n        userId: string,\n        selection: null,\n      }\n    | {\n        userId: string,\n        name: string,\n        selection: any,\n        color: Array<number>,\n      }\n  >\n) {\n  if (!editor.getModel()) {\n    return;\n  }\n\n  const lines = editor.getModel().getLinesContent() || [];\n\n  userSelections.forEach(data => {\n    const { userId } = data;\n\n    const decorationId = currentModule.shortid + userId;\n    if (data.selection === null) {\n      userSelectionDecorations[decorationId] = editor.deltaDecorations(\n        userSelectionDecorations[decorationId] || [],\n        [],\n        data.userId\n      );\n\n      return;\n    }\n\n    const decorations = [];\n    const { selection, color, name } = data;\n\n    if (selection) {\n      const addCursor = (position, className) => {\n        const cursorPos = indexToLineAndColumn(lines, position);\n\n        decorations.push({\n          range: new monaco.Range(\n            cursorPos.lineNumber,\n            cursorPos.column,\n            cursorPos.lineNumber,\n            cursorPos.column\n          ),\n          options: {\n            className: userClassesGenerated[className],\n          },\n        });\n      };\n\n      const addSelection = (start, end, className) => {\n        const from = indexToLineAndColumn(lines, start);\n        const to = indexToLineAndColumn(lines, end);\n\n        decorations.push({\n          range: new monaco.Range(\n            from.lineNumber,\n            from.column,\n            to.lineNumber,\n            to.column\n          ),\n          options: {\n            className: userClassesGenerated[className],\n          },\n        });\n      };\n\n      const prefix = color.join('-') + userId;\n      const cursorClassName = prefix + '-cursor';\n      const secondaryCursorClassName = prefix + '-secondary-cursor';\n      const selectionClassName = prefix + '-selection';\n      const secondarySelectionClassName = prefix + '-secondary-selection';\n\n      if (!userClassesGenerated[cursorClassName]) {\n        const nameStyles = {\n          content: name,\n          position: 'absolute',\n          top: -17,\n          backgroundColor: `rgb(${color[0]}, ${color[1]}, ${color[2]})`,\n          zIndex: 20,\n          color:\n            color[0] + color[1] + color[2] > 500\n              ? 'rgba(0, 0, 0, 0.8)'\n              : 'white',\n          padding: '2px 4px',\n          borderRadius: 2,\n          borderBottomLeftRadius: 0,\n          fontSize: '.75rem',\n          fontWeight: 600,\n          userSelect: 'none',\n          pointerEvents: 'none',\n          width: 'max-content',\n        };\n        userClassesGenerated[cursorClassName] = `${css({\n          backgroundColor: `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.8)`,\n          width: '2px !important',\n          cursor: 'text',\n          zIndex: 30,\n          ':before': {\n            animation: `${fadeOut} 0.3s`,\n            animationDelay: '1s',\n            animationFillMode: 'forwards',\n            opacity: 1,\n            ...nameStyles,\n          },\n          ':hover': {\n            ':before': {\n              animation: `${fadeIn} 0.3s`,\n              animationFillMode: 'forwards',\n              opacity: 0,\n              ...nameStyles,\n            },\n          },\n        })}`;\n      }\n\n      if (!userClassesGenerated[secondaryCursorClassName]) {\n        userClassesGenerated[secondaryCursorClassName] = `${css({\n          backgroundColor: `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.6)`,\n          width: '2px !important',\n        })}`;\n      }\n\n      if (!userClassesGenerated[selectionClassName]) {\n        userClassesGenerated[selectionClassName] = `${css({\n          backgroundColor: `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.3)`,\n          borderRadius: '3px',\n          minWidth: 7.6,\n        })}`;\n      }\n\n      if (!userClassesGenerated[secondarySelectionClassName]) {\n        userClassesGenerated[secondarySelectionClassName] = `${css({\n          backgroundColor: `rgba(${color[0]}, ${color[1]}, ${color[2]}, 0.2)`,\n          borderRadius: '3px',\n          minWidth: 7.6,\n        })}`;\n      }\n\n      addCursor(selection.primary.cursorPosition, cursorClassName);\n      if (selection.primary.selection.length) {\n        addSelection(\n          selection.primary.selection[0],\n          selection.primary.selection[1],\n          selectionClassName\n        );\n      }\n\n      if (selection.secondary.length) {\n        selection.secondary.forEach(s => {\n          addCursor(s.cursorPosition, secondaryCursorClassName);\n\n          if (s.selection.length) {\n            addSelection(\n              s.selection[0],\n              s.selection[1],\n              secondarySelectionClassName\n            );\n          }\n        });\n      }\n    }\n\n    // Allow new model to attach in case it's attaching\n    requestAnimationFrame(() => {\n      userSelectionDecorations[decorationId] = editor.deltaDecorations(\n        userSelectionDecorations[decorationId] || [],\n        decorations,\n        userId\n      );\n    });\n  });\n}\n","import { dirname, join } from 'path';\n\nimport { getModulePath } from '@codesandbox/common/lib/sandbox/modules';\nimport getTemplate from '@codesandbox/common/lib/templates';\nimport type {\n  Directory,\n  Module,\n  ModuleCorrection,\n  ModuleError,\n  Sandbox,\n} from '@codesandbox/common/lib/types';\nimport delay from '@codesandbox/common/lib/utils/delay';\nimport { getTextOperation } from '@codesandbox/common/lib/utils/diff';\nimport FuzzySearch from 'app/components/CodeEditor/FuzzySearch';\nimport type { Editor, Props } from 'app/components/CodeEditor/types';\nimport {\n  indexToLineAndColumn,\n  lineAndColumnToIndex,\n} from 'app/utils/monaco-index-converter';\nimport { actions, dispatch, listen } from 'codesandbox-api';\nimport { debounce } from 'lodash-es';\nimport { TextOperation } from 'ot';\nimport * as React from 'react';\nimport { withTheme } from 'styled-components';\n/* eslint-disable import/no-webpack-loader-syntax, import/default */\nimport LinterWorker from 'worker-loader?publicPath=/&name=monaco-linter.[hash:8].worker.js!app/overmind/effects/vscode/LinterWorker';\nimport TypingsFetcherWorker from 'worker-loader?publicPath=/&name=monaco-typings-ata.[hash:8].worker.js!./workers/fetch-dependency-typings';\n\nimport defineTheme from './define-theme';\nimport { CodeContainer, Container } from './elements';\nimport eventToTransform from './event-to-transform';\nimport { liftOff } from './grammars/configure-tokenizer';\nimport { updateUserSelections } from './live-decorations';\nimport getMode from './mode';\nimport MonacoEditorComponent from './MonacoReactComponent';\nimport getSettings from './settings';\n\n/* eslint-enable import/no-webpack-loader-syntax, import/default */\n\ntype State = {\n  fuzzySearchEnabled: boolean,\n};\n\nfunction getSelection(lines, selection) {\n  const startSelection = lineAndColumnToIndex(\n    lines,\n    selection.startLineNumber,\n    selection.startColumn\n  );\n  const endSelection = lineAndColumnToIndex(\n    lines,\n    selection.endLineNumber,\n    selection.endColumn\n  );\n\n  return {\n    selection:\n      startSelection === endSelection ? [] : [startSelection, endSelection],\n    cursorPosition: lineAndColumnToIndex(\n      lines,\n      selection.positionLineNumber,\n      selection.positionColumn\n    ),\n  };\n}\n\nlet modelCache = {};\n\n/**\n * This editor is like a slim version of our VSCode editor. It's used in the embed.\n */\nclass MonacoEditor extends React.Component<Props, State> implements Editor {\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n  };\n\n  sandbox: $PropertyType<Props, 'sandbox'>;\n  currentModule: $PropertyType<Props, 'currentModule'>;\n  settings: $PropertyType<Props, 'settings'>;\n  dependencies: ?$PropertyType<Props, 'dependencies'>;\n  tsconfig: ?$PropertyType<Props, 'tsconfig'>;\n  disposeInitializer: ?() => void;\n  syntaxWorker: ?Worker;\n  lintWorker: ?Worker;\n  typingsFetcherWorker: ?Worker;\n  editor: any;\n  monaco: any;\n  receivingCode: ?boolean = false;\n  transpilationListener: ?Function;\n  sizeProbeInterval: ?number;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      fuzzySearchEnabled: false,\n    };\n    this.sandbox = props.sandbox;\n    this.currentModule = props.currentModule;\n    this.settings = props.settings;\n    this.dependencies = props.dependencies;\n\n    this.tsconfig = props.tsconfig;\n\n    this.lintWorker = null;\n    this.typingsFetcherWorker = null;\n    this.sizeProbeInterval = null;\n\n    this.resizeEditor = debounce(this.resizeEditor, 150);\n    this.commitLibChanges = debounce(this.commitLibChanges, 300);\n    this.onSelectionChangedDebounced = debounce(\n      this.onSelectionChangedDebounced,\n      500\n    );\n\n    this.transpilationListener = this.setupTranspilationListener();\n  }\n\n  shouldComponentUpdate(nextProps: Props) {\n    if (\n      this.props.width !== nextProps.width ||\n      this.props.height !== nextProps.height\n    ) {\n      this.resizeEditorInstantly();\n    }\n\n    if (\n      this.props.absoluteWidth &&\n      this.props.absoluteHeight &&\n      (this.props.absoluteWidth !== nextProps.absoluteWidth ||\n        this.props.absoluteHeight !== nextProps.absoluteHeight)\n    ) {\n      this.resizeEditor();\n    }\n\n    if (this.props.readOnly !== nextProps.readOnly && this.editor) {\n      this.editor.updateOptions({ readOnly: !!nextProps.readOnly });\n    }\n\n    if (this.props.theme.vscodeTheme !== nextProps.theme.vscodeTheme) {\n      defineTheme(this.monaco, nextProps.theme.vscodeTheme);\n    }\n\n    return false;\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.resizeEditor);\n    // Make sure that everything has run before disposing, to prevent any inconsistensies\n\n    this.disposeModules(this.sandbox.modules);\n    if (this.editor) {\n      this.editor.dispose();\n    }\n    if (this.lintWorker) {\n      this.lintWorker.terminate();\n    }\n    if (this.typingsFetcherWorker) {\n      this.typingsFetcherWorker.terminate();\n    }\n    if (this.transpilationListener) {\n      this.transpilationListener();\n    }\n    clearInterval(this.sizeProbeInterval);\n\n    if (this.disposeInitializer) {\n      this.disposeInitializer();\n    }\n  }\n\n  setupTranspilationListener() {\n    return listen(({ type, code, path }) => {\n      if (type === 'add-extra-lib') {\n        const dtsPath = `${path}.d.ts`;\n        this.monaco.languages.typescript.typescriptDefaults._extraLibs[\n          `file:///${dtsPath}`\n        ] = code;\n        this.commitLibChanges();\n      }\n    });\n  }\n\n  configureEditor = async (editor: any, monaco: any) => {\n    this.editor = editor;\n    this.monaco = monaco;\n\n    // eslint-disable-next-line no-underscore-dangle\n    window.CSEditor = {\n      editor: this.editor,\n      monaco: this.monaco,\n    };\n\n    requestAnimationFrame(() => {\n      this.setupWorkers();\n      editor.onDidChangeModelContent(e => {\n        const { isLive, sendTransforms } = this.props;\n\n        if (isLive && sendTransforms && !this.receivingCode) {\n          this.sendChangeOperations(e);\n        }\n\n        this.handleChange();\n      });\n    });\n\n    monaco.languages.typescript.typescriptDefaults.setMaximumWorkerIdleTime(-1);\n    monaco.languages.typescript.javascriptDefaults.setMaximumWorkerIdleTime(-1);\n\n    monaco.languages.typescript.typescriptDefaults.setEagerModelSync(true);\n    monaco.languages.typescript.javascriptDefaults.setEagerModelSync(true);\n\n    this.setCompilerOptions();\n\n    const { sandbox } = this;\n    const { currentModule } = this;\n\n    liftOff(monaco);\n\n    this.initializeModules(sandbox.modules);\n    await this.openNewModel(currentModule);\n\n    window.addEventListener('resize', this.resizeEditor);\n    this.sizeProbeInterval = setInterval(() => {\n      if (this.props.absoluteWidth && this.props.absoluteHeight) {\n        return;\n      }\n\n      this.resizeEditorInstantly();\n    }, 3000);\n\n    const { dependencies } = this;\n    if (dependencies != null) {\n      if (Object.keys(dependencies)) {\n        setTimeout(\n          () => {\n            this.fetchDependencyTypings(dependencies);\n            this.getConfigSchemas();\n          },\n          this.hasNativeTypescript() ? 500 : 5000\n        );\n      }\n    }\n\n    editor.addAction({\n      // An unique identifier of the contributed action.\n      id: 'fuzzy-search',\n\n      // A label of the action that will be presented to the user.\n      label: 'Open Module',\n\n      // An optional array of keybindings for the action.\n      keybindings: [monaco.KeyMod.CtrlCmd | monaco.KeyCode.KEY_P], // eslint-disable-line no-bitwise\n\n      // A precondition for this action.\n      precondition: null,\n\n      // A rule to evaluate on top of the precondition in order to dispatch the keybindings.\n      keybindingContext: null,\n\n      contextMenuGroupId: 'navigation',\n\n      contextMenuOrder: 1.5,\n\n      // Method that will be executed when the action is triggered.\n      // @param editor The editor instance is passed in as a convinience\n      run: () => {\n        this.setState(\n          {\n            fuzzySearchEnabled: true,\n          },\n          () => this.forceUpdate()\n        );\n      },\n    });\n\n    editor.onDidChangeCursorSelection(selectionChange => {\n      // TODO: add another debounced action to send the current data. So we can\n      // have the correct cursor pos no matter what\n      const { onSelectionChanged, isLive } = this.props;\n      // Reason 3 is update by mouse or arrow keys\n      if (isLive && editor.getModel()) {\n        const lines = editor.getModel().getLinesContent() || [];\n        const data = {\n          primary: getSelection(lines, selectionChange.selection),\n          secondary: selectionChange.secondarySelections.map(s =>\n            getSelection(lines, s)\n          ),\n        };\n        if (\n          (selectionChange.reason === 3 ||\n            /* alt + shift + arrow keys */ selectionChange.source ===\n              'moveWordCommand' ||\n            /* click inside a selection */ selectionChange.source === 'api') &&\n          onSelectionChanged\n        ) {\n          this.onSelectionChangedDebounced.cancel();\n          onSelectionChanged({\n            selection: data,\n            moduleShortid: this.currentModule.shortid,\n          });\n        } else {\n          // This is just on typing, we send a debounced selection update as a\n          // safeguard to make sure we are in sync\n          this.onSelectionChangedDebounced({\n            selection: data,\n            moduleShortid: this.currentModule.shortid,\n          });\n        }\n      }\n    });\n\n    if (this.props.onInitialized) {\n      this.disposeInitializer = this.props.onInitialized(this);\n    }\n\n    // TODO remove this as soon as we solve the keybinding issues\n    editor.addCommand(\n      // eslint-disable-next-line\n      this.monaco.KeyMod.CtrlCmd | this.monaco.KeyCode.KEY_S,\n      () => {\n        const { onSave } = this.props;\n        if (onSave) {\n          onSave(this.getCode());\n        }\n      }\n    );\n\n    this.registerAutoCompletions();\n  };\n\n  setCompilerOptions = () => {\n    const hasNativeTypescript = this.hasNativeTypescript();\n    const existingConfig = this.tsconfig ? this.tsconfig.compilerOptions : {};\n    const jsxFactory = existingConfig.jsxFactory || 'React.createElement';\n    const reactNamespace = existingConfig.reactNamespace || 'React';\n\n    const compilerDefaults = {\n      jsxFactory,\n      reactNamespace,\n      jsx: this.monaco.languages.typescript.JsxEmit.React,\n      target: this.monaco.languages.typescript.ScriptTarget.ES2016,\n      allowNonTsExtensions: !hasNativeTypescript,\n      moduleResolution: this.monaco.languages.typescript.ModuleResolutionKind\n        .NodeJs,\n      module: hasNativeTypescript\n        ? this.monaco.languages.typescript.ModuleKind.ES2015\n        : this.monaco.languages.typescript.ModuleKind.System,\n      experimentalDecorators: true,\n      noEmit: true,\n      allowJs: true,\n      typeRoots: ['node_modules/@types'],\n\n      forceConsistentCasingInFileNames:\n        hasNativeTypescript && existingConfig.forceConsistentCasingInFileNames,\n      noImplicitReturns:\n        hasNativeTypescript && existingConfig.noImplicitReturns,\n      noImplicitThis: hasNativeTypescript && existingConfig.noImplicitThis,\n      noImplicitAny: hasNativeTypescript && existingConfig.noImplicitAny,\n      strictNullChecks: hasNativeTypescript && existingConfig.strictNullChecks,\n      suppressImplicitAnyIndexErrors:\n        hasNativeTypescript && existingConfig.suppressImplicitAnyIndexErrors,\n      noUnusedLocals: hasNativeTypescript && existingConfig.noUnusedLocals,\n\n      newLine: this.monaco.languages.typescript.NewLineKind.LineFeed,\n    };\n\n    this.monaco.languages.typescript.typescriptDefaults.setCompilerOptions(\n      compilerDefaults\n    );\n    this.monaco.languages.typescript.javascriptDefaults.setCompilerOptions(\n      compilerDefaults\n    );\n\n    this.monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: !hasNativeTypescript,\n    });\n  };\n\n  setReceivingCode = (receiving: boolean) => {\n    this.receivingCode = receiving;\n  };\n\n  setTSConfig = (config: Object) => {\n    this.tsconfig = config;\n\n    this.setCompilerOptions();\n  };\n\n  changeModule = (\n    newModule: Module,\n    errors?: Array<ModuleError>,\n    corrections?: Array<ModuleCorrection>\n  ) => {\n    const oldModule = this.currentModule;\n\n    this.swapDocuments(oldModule, newModule).then(() => {\n      this.currentModule = newModule;\n\n      if (errors) {\n        this.setErrors(errors);\n      }\n\n      if (corrections) {\n        this.setCorrections(corrections);\n      }\n\n      if (this.props.onCodeReceived) {\n        // Whenever the user changes a module we set up a state that defines\n        // that the changes of code are not sent to live users. We need to reset\n        // this state when we're doing changing modules\n        this.props.onCodeReceived();\n        this.liveOperationCode = '';\n      }\n    });\n  };\n\n  onSelectionChangedDebounced = data => {\n    if (this.props.onSelectionChanged) {\n      this.props.onSelectionChanged(data);\n    }\n  };\n\n  liveOperationCode = '';\n\n  sendChangeOperations = changeEvent => {\n    const { sendTransforms, isLive, onCodeReceived } = this.props;\n\n    if (sendTransforms && changeEvent.changes) {\n      this.liveOperationCode =\n        this.liveOperationCode || this.currentModule.code || '';\n      try {\n        const { operation, newCode } = eventToTransform(\n          changeEvent,\n          this.liveOperationCode\n        );\n\n        this.liveOperationCode = newCode;\n\n        sendTransforms(operation);\n      } catch (e) {\n        // Something went wrong while composing the operation, so we're opting for a full sync\n        console.error(e);\n\n        this.props.onModuleStateMismatch();\n      }\n\n      requestAnimationFrame(() => {\n        this.liveOperationCode = '';\n      });\n    } else if (!isLive && onCodeReceived) {\n      onCodeReceived();\n    }\n  };\n\n  userClassesGenerated = {};\n  userSelectionDecorations = {};\n\n  updateUserSelections = (\n    userSelections: Array<\n      | {\n          userId: string,\n          selection: null,\n        }\n      | {\n          userId: string,\n          name: string,\n          selection: any,\n          color: Array<number>,\n        }\n    >\n  ) => {\n    updateUserSelections(\n      this.monaco,\n      this.editor,\n      this.currentModule,\n      userSelections\n    );\n  };\n\n  changeSandbox = (\n    newSandbox: Sandbox,\n    newCurrentModule: Module,\n    dependencies: $PropertyType<Props, 'dependencies'>\n  ): Promise<null> =>\n    new Promise(resolve => {\n      const oldSandbox = this.sandbox;\n\n      this.sandbox = newSandbox;\n      this.currentModule = newCurrentModule;\n      this.dependencies = dependencies;\n\n      // Reset models, dispose old ones\n      this.disposeModules(oldSandbox.modules);\n\n      // Do in setTimeout, since disposeModules is async\n      setTimeout(() => {\n        this.getConfigSchemas();\n        // Initialize new models\n        this.initializeModules(newSandbox.modules)\n          .then(() => this.openNewModel(newCurrentModule))\n          .then(resolve);\n      });\n    });\n\n  changeCode = (code: string, moduleId?: string) => {\n    if (\n      code !== this.getCode() &&\n      (!moduleId || this.currentModule.id === moduleId)\n    ) {\n      this.updateCode(code);\n      this.lint(\n        code,\n        this.currentModule.title,\n        this.editor.getModel().getVersionId()\n      );\n    }\n  };\n\n  applyOperationToModel = (operation, pushStack) => {\n    const model = this.editor.getModel();\n\n    const results = [];\n    let index = 0;\n    for (let i = 0; i < operation.ops.length; i++) {\n      const op = operation.ops[i];\n      if (TextOperation.isRetain(op)) {\n        index += op;\n      } else if (TextOperation.isInsert(op)) {\n        const { lineNumber, column } = indexToLineAndColumn(\n          model.getLinesContent() || [],\n          index\n        );\n        const range = new this.monaco.Range(\n          lineNumber,\n          column,\n          lineNumber,\n          column\n        );\n        results.push({\n          range,\n          text: op,\n          forceMoveMarkers: true,\n        });\n      } else if (TextOperation.isDelete(op)) {\n        const lines = model.getLinesContent() || [];\n        const from = indexToLineAndColumn(lines, index);\n        const to = indexToLineAndColumn(lines, index - op);\n        results.push({\n          range: new this.monaco.Range(\n            from.lineNumber,\n            from.column,\n            to.lineNumber,\n            to.column\n          ),\n          text: '',\n        });\n        index -= op;\n      }\n    }\n\n    if (pushStack) {\n      model.pushEditOperations([], results);\n    } else {\n      model.applyEdits(results);\n    }\n  };\n\n  applyOperations = (operations: { [moduleShortid: string]: any }) => {\n    const operationsJSON = operations.toJSON();\n\n    Object.keys(operationsJSON).forEach(moduleShortid => {\n      const operation = TextOperation.fromJSON(operationsJSON[moduleShortid]);\n\n      if (moduleShortid !== this.currentModule.shortid) {\n        // Apply the code to the current module code itself\n        const module = this.sandbox.modules.find(\n          m => m.shortid === moduleShortid\n        );\n\n        if (!module) {\n          return;\n        }\n\n        try {\n          const code = operation.apply(module.code || '');\n          if (this.props.onChange) {\n            this.props.onChange(code, module.shortid);\n          }\n        } catch (e) {\n          // Something went wrong while applying\n          this.props.onModuleStateMismatch();\n        }\n        return;\n      }\n\n      this.liveOperationCode = '';\n      this.applyOperationToModel(operation);\n    });\n  };\n\n  changeDependencies = (\n    dependencies: ?$PropertyType<Props, 'dependencies'>\n  ) => {\n    this.dependencies = dependencies;\n    if (dependencies) {\n      this.fetchDependencyTypings(dependencies);\n    }\n  };\n\n  changeSettings = (settings: $PropertyType<Props, 'settings'>) => {\n    this.settings = settings;\n    if (settings.lintEnabled && !this.lintWorker) {\n      this.setupLintWorker();\n    }\n\n    this.editor.updateOptions(this.getEditorOptions());\n    this.forceUpdate();\n  };\n\n  updateModules = () => {\n    const { sandbox } = this;\n\n    sandbox.modules.forEach(module => {\n      if (modelCache[module.id] && modelCache[module.id].model) {\n        const path = getModulePath(\n          sandbox.modules,\n          sandbox.directories,\n          module.id\n        );\n\n        if (path === '') {\n          // Parent dir got deleted\n          this.disposeModel(module.id);\n          return;\n        }\n\n        // Check for changed path, if that's\n        // the case create a new model with corresponding tag, ditch the other model\n        if (path !== modelCache[module.id].model.uri.path) {\n          const isCurrentlyOpened =\n            this.editor.getModel() === modelCache[module.id].model;\n\n          if (isCurrentlyOpened) {\n            // Unload model, we're going to dispose it\n            this.editor.setModel(null);\n          }\n\n          this.disposeModel(module.id);\n\n          this.createModel(module, sandbox.modules, sandbox.directories).then(\n            newModel => {\n              if (isCurrentlyOpened) {\n                // Open it again if it was open\n                this.editor.setModel(newModel);\n              }\n            }\n          );\n        }\n      }\n    });\n\n    // Also check for deleted modules\n    Object.keys(modelCache).forEach(moduleId => {\n      // This module got deleted, dispose it\n      if (!sandbox.modules.find(m => m.id === moduleId)) {\n        this.disposeModel(moduleId);\n      }\n    });\n  };\n\n  setErrors = (errors: Array<ModuleError>) => {\n    if (errors.length > 0) {\n      const currentPath = this.editor.getModel().uri.path;\n      const thisModuleErrors = errors.filter(\n        error => error.path === currentPath\n      );\n      const errorMarkers = thisModuleErrors\n        .map(error => {\n          if (error) {\n            return {\n              severity: this.monaco.MarkerSeverity.Error,\n              startColumn: 1,\n              startLineNumber: error.line,\n              endColumn: error.columnEnd || error.column,\n              endLineNumber: error.lineEnd || error.line + 1,\n              message: error.message,\n            };\n          }\n\n          return null;\n        })\n        .filter(x => x);\n\n      this.monaco.editor.setModelMarkers(\n        this.editor.getModel(),\n        'error',\n        errorMarkers\n      );\n    } else {\n      this.monaco.editor.setModelMarkers(this.editor.getModel(), 'error', []);\n    }\n  };\n\n  setCorrections = (corrections: Array<ModuleCorrection>) => {\n    if (corrections.length > 0) {\n      const currentPath = this.editor.getModel().uri.path;\n\n      const correctionMarkers = corrections\n        .filter(correction => correction.path === currentPath)\n        .map(correction => {\n          if (correction) {\n            return {\n              severity:\n                correction.severity === 'warning'\n                  ? this.monaco.MarkerSeverity.Warning\n                  : this.monaco.MarkerSeverity.Notice,\n              startColumn: correction.column,\n              startLineNumber: correction.line,\n              endColumn: correction.columnEnd || 1,\n              endLineNumber: correction.lineEnd || correction.line + 1,\n              message: correction.message,\n              source: correction.source,\n            };\n          }\n\n          return null;\n        })\n        .filter(x => x);\n\n      this.monaco.editor.setModelMarkers(\n        this.editor.getModel(),\n        'correction',\n        correctionMarkers\n      );\n    } else {\n      this.monaco.editor.setModelMarkers(\n        this.editor.getModel(),\n        'correction',\n        []\n      );\n    }\n  };\n\n  registerAutoCompletions = () => {\n    this.monaco.languages.registerCompletionItemProvider('typescript', {\n      triggerCharacters: ['\"', \"'\", '.'],\n      provideCompletionItems: (model, position) => {\n        // Get editor content before the pointer\n        const textUntilPosition = model.getValueInRange(\n          {\n            startLineNumber: 1,\n            startColumn: 1,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column,\n          },\n          1\n        );\n\n        if (\n          /(([\\s|\\n]from\\s)|(\\brequire\\b\\())[\"|']\\.*$/.test(textUntilPosition)\n        ) {\n          // It's probably a `import` statement or `require` call\n          if (textUntilPosition.endsWith('.')) {\n            // User is trying to import a file\n            const prefix = textUntilPosition.match(/[./]+$/)[0];\n\n            const modulesByPath = new WeakMap();\n            this.sandbox.modules.forEach(module => {\n              const path = getModulePath(\n                this.sandbox.modules,\n                this.sandbox.directories,\n                module.id\n              );\n\n              modulesByPath.set(\n                module,\n                path.indexOf('/') === -1 ? '/' + path : path\n              );\n            });\n\n            const currentModulePath = modulesByPath.get(this.currentModule);\n            if (!currentModulePath) {\n              return null;\n            }\n\n            const relativePath = join(dirname(currentModulePath), prefix);\n            return this.sandbox.modules\n              .filter(m => {\n                const path = modulesByPath.get(m);\n\n                return (\n                  path &&\n                  m.id !== this.currentModule.id &&\n                  path.startsWith(relativePath)\n                );\n              })\n              .map(module => {\n                let path = modulesByPath.get(module);\n\n                if (!path) return null;\n\n                // Don't keep extension for JS files\n                if (path.endsWith('.js')) {\n                  path = path.replace(/\\.js$/, '');\n                }\n\n                // Don't keep extension for TS files\n                if (path.endsWith('.ts')) {\n                  path = path.replace(/\\.ts$/, '');\n                }\n\n                return {\n                  label:\n                    prefix +\n                    path.replace(relativePath, relativePath === '/' ? '/' : ''),\n                  insertText: path.slice(\n                    relativePath === '/' ? 0 : relativePath.length\n                  ),\n                  kind: this.monaco.languages.CompletionItemKind.File,\n                };\n              })\n              .filter(Boolean);\n          }\n          const deps = this.dependencies;\n          if (deps) {\n            // User is trying to import a dependency\n            return Object.keys(deps).map(name => ({\n              label: name,\n              detail: deps[name],\n              kind: this.monaco.languages.CompletionItemKind.Module,\n            }));\n          }\n\n          return [];\n        }\n        return [];\n      },\n    });\n  };\n\n  setupTypeWorker = () => {\n    this.typingsFetcherWorker = new TypingsFetcherWorker();\n    const regex = /node_modules\\/(@types\\/.*?)\\//;\n\n    this.fetchDependencyTypings(this.dependencies || {});\n\n    if (this.typingsFetcherWorker) {\n      this.typingsFetcherWorker.addEventListener('message', event => {\n        const { sandbox } = this;\n        const dependencies = this.dependencies || sandbox.npmDependencies;\n\n        Object.keys(event.data).forEach((path: string) => {\n          const typings = event.data[path];\n          if (\n            path.startsWith('node_modules/@types') &&\n            this.hasNativeTypescript()\n          ) {\n            const match = path.match(regex);\n            if (match && match[1]) {\n              const dependency = match[1];\n\n              if (\n                !Object.keys(dependencies).includes(dependency) &&\n                this.props.onNpmDependencyAdded\n              ) {\n                this.props.onNpmDependencyAdded(dependency);\n              }\n            }\n          }\n\n          this.addLib(typings, '/' + path);\n        });\n      });\n    }\n  };\n\n  setupLintWorker = () => {\n    if (!this.lintWorker) {\n      this.lintWorker = new LinterWorker();\n\n      this.lintWorker.addEventListener('message', event => {\n        const { markers, version } = event.data;\n        requestAnimationFrame(() => {\n          if (this.editor.getModel()) {\n            const modelPath = this.editor.getModel().uri.path;\n            dispatch(actions.correction.clear(modelPath, 'eslint'));\n\n            if (version === this.editor.getModel().getVersionId()) {\n              markers.forEach(marker => {\n                dispatch(\n                  actions.correction.show(marker.message, {\n                    line: marker.startLineNumber,\n                    column: marker.startColumn,\n                    lineEnd: marker.endLineNumber,\n                    columnEnd: marker.endColumn,\n                    source: 'eslint',\n                    severity: marker.severity === 2 ? 'warning' : 'notice',\n                    path: modelPath,\n                  })\n                );\n              });\n            }\n          }\n        });\n      });\n\n      this.lint = debounce(this.lint, 400);\n\n      requestAnimationFrame(() => {\n        if (this.editor.getModel()) {\n          this.lint(\n            this.getCode(),\n            this.currentModule.title,\n            this.editor.getModel().getVersionId()\n          );\n        }\n      });\n    }\n  };\n\n  setupWorkers = () => {\n    const { settings } = this;\n\n    if (settings.lintEnabled) {\n      // Delay this one, as initialization is very heavy\n      setTimeout(() => {\n        this.setupLintWorker();\n      }, 5000);\n    }\n\n    if (settings.autoDownloadTypes) {\n      this.setupTypeWorker();\n    }\n  };\n\n  updateDecorations = async (classifications: Array<Object>) => {\n    const decorations = classifications.map(classification => ({\n      range: new this.monaco.Range(\n        classification.startLine,\n        classification.start,\n        classification.endLine,\n        classification.end\n      ),\n      options: {\n        inlineClassName: classification.type\n          ? `${classification.kind} ${classification.type}-of-${classification.parentKind}`\n          : classification.kind,\n      },\n    }));\n\n    const { currentModule } = this;\n    const modelInfo = await this.getModelById(currentModule.id);\n\n    modelInfo.decorations = this.editor.deltaDecorations(\n      modelInfo.decorations || [],\n      decorations\n    );\n  };\n\n  disposeModel = (id: string) => {\n    if (modelCache[id]) {\n      try {\n        if (modelCache[id].model && !modelCache[id].model.isDisposed()) {\n          modelCache[id].model.dispose();\n        }\n        if (modelCache[id].lib && !modelCache[id].lib.isDisposed()) {\n          modelCache[id].lib.dispose();\n        }\n\n        delete modelCache[id];\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  };\n\n  swapDocuments = (currentModule: Module, nextModule: Module) => {\n    // We get the id here because we don't want currentModule to mutate in the meantime.\n    // If the module changes in the store, and we use it here it will otherwise\n    // throw an error 'Cannot use detached model'. So that's why we get the desired values first.\n    const { id } = currentModule;\n\n    return new Promise(resolve => {\n      // We load this in a later moment so the rest of the ui already updates before the editor\n      // this will give a perceived speed boost. Inspiration from vscode team\n      setTimeout(async () => {\n        if (modelCache[id]) {\n          const { sandbox } = this;\n          const path = getModulePath(sandbox.modules, sandbox.directories, id);\n\n          modelCache[id].viewState = this.editor.saveViewState();\n          if (modelCache[id].lib) {\n            // We let Monaco know what the latest code is of this file by removing\n            // the old extraLib definition and defining a new one.\n            modelCache[id].lib.dispose();\n            modelCache[id].lib = this.addLib(currentModule.code || '', path);\n          }\n        }\n\n        await this.openNewModel(nextModule);\n        this.editor.focus();\n        resolve();\n      }, 50);\n    });\n  };\n\n  updateCode(code: string = '') {\n    const operation = getTextOperation(this.getCode(), code);\n\n    if (!this.receivingCode) {\n      // For the live operation we need to send the operation based on the old code,\n      // that's why we set the 'liveOperationCode' to the last code so the operation\n      // will be applied on that code instead of `currentModule.code`\n      this.liveOperationCode = this.getCode();\n    }\n\n    this.applyOperationToModel(operation, true);\n  }\n\n  lint = async (code: string, title: string, version: number) => {\n    const mode = (await getMode(title, this.monaco)) || 'typescript';\n    if (this.settings.lintEnabled) {\n      if (mode === 'javascript' || mode === 'vue') {\n        if (this.lintWorker) {\n          this.lintWorker.postMessage({\n            code,\n            title,\n            version,\n            template: this.sandbox.template,\n          });\n        }\n      }\n    }\n  };\n\n  handleChange = () => {\n    const newCode = this.editor.getModel().getValue(1) || '';\n    const { currentModule } = this;\n    const { title } = currentModule;\n\n    const oldCode = this.currentModule.code || '';\n\n    const codeEquals =\n      oldCode.replace(/\\r\\n/g, '\\n') === newCode.replace(/\\r\\n/g, '\\n');\n\n    if (!codeEquals) {\n      if (this.props.onChange) {\n        this.props.onChange(newCode, this.currentModule.shortid);\n      }\n\n      this.lint(newCode, title, this.editor.getModel().getVersionId());\n    }\n  };\n\n  hasNativeTypescript = () => {\n    const { sandbox } = this;\n\n    // Add a quick hack for CRA+TS that will be removed when we fully made the switch to\n    // VSCode\n    const template = getTemplate(sandbox.template);\n    if (template.name === 'create-react-app') {\n      return sandbox.modules.some(m => m.title.endsWith('.tsx'));\n    }\n    return template.isTypescript;\n  };\n\n  fetchedSchemas = {};\n\n  getConfigSchemas = async () => {\n    const { sandbox } = this;\n    const template = getTemplate(sandbox.template);\n\n    const configurations = template.configurationFiles;\n    // $FlowIssue\n    const schemas: Array<{\n      fileName: string,\n      schema: Object,\n      uri: string,\n    }> = (\n      await Promise.all(\n        Object.keys(configurations).map(async p => {\n          const config = configurations[p];\n\n          if (this.fetchedSchemas[config.title]) {\n            return null;\n          }\n\n          if (config.schema) {\n            try {\n              const schema = await fetch(config.schema).then(x => x.json());\n              return { fileName: config.title, schema, uri: config.schema };\n            } catch (e) {\n              return null;\n            }\n          }\n          return null;\n        })\n      )\n    ).filter(x => x);\n\n    const monacoSchemas = schemas.map(data => {\n      this.fetchedSchemas[data.fileName] = true;\n\n      return {\n        uri: data.uri,\n        fileMatch: [data.fileName],\n        schema: data.schema,\n      };\n    });\n\n    this.monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n      validate: true,\n      schemas: [\n        ...this.monaco.languages.json.jsonDefaults._diagnosticsOptions.schemas,\n        ...monacoSchemas,\n      ],\n    });\n  };\n\n  closeFuzzySearch = () => {\n    this.setState({ fuzzySearchEnabled: false }, () => this.forceUpdate());\n    this.editor.focus();\n  };\n\n  fetchDependencyTypings = (dependencies: Object) => {\n    if (this.typingsFetcherWorker) {\n      this.monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions(\n        {\n          noSemanticValidation: true,\n          noSyntaxValidation: !this.hasNativeTypescript(),\n        }\n      );\n      this.typingsFetcherWorker.postMessage({ dependencies });\n    }\n  };\n\n  disposeModules = (modules: Array<Module>) => {\n    if (this.editor) {\n      this.editor.setModel(null);\n    }\n\n    if (this.monaco) {\n      modules.forEach(m => {\n        this.disposeModel(m.id);\n      });\n    }\n\n    modelCache = {};\n  };\n\n  initializeModules = (modules: Array<Module>) =>\n    Promise.all(modules.map(module => this.createModel(module, modules)));\n\n  resizeEditor = () => {\n    this.resizeEditorInstantly();\n  };\n\n  resizeEditorInstantly = () => {\n    this.forceUpdate(() => {\n      if (this.editor) {\n        this.editor.layout();\n      }\n    });\n  };\n\n  addLib = (code: string, path: string) => {\n    const fullPath = `file://${path}`;\n\n    const existingLib = this.monaco.languages.typescript.typescriptDefaults.getExtraLibs()[\n      fullPath\n    ];\n    // Only add it if it has been added before, we don't care about the contents\n    // of the libs, only if they've been added.\n\n    if (!existingLib) {\n      // We add it manually, and commit the changes manually\n      // eslint-disable-next-line no-underscore-dangle\n      this.monaco.languages.typescript.typescriptDefaults._extraLibs[\n        fullPath\n      ] = code;\n      this.commitLibChanges();\n    }\n  };\n\n  /**\n   * We manually commit lib changes, because if do this for *every* change we will\n   * reload the whole TS worker & AST for every change. This method is debounced\n   * by 300ms.\n   */\n  commitLibChanges = () => {\n    // eslint-disable-next-line no-underscore-dangle\n    this.monaco.languages.typescript.typescriptDefaults._onDidChange.fire(\n      this.monaco.languages.typescript.typescriptDefaults\n    );\n\n    this.monaco.languages.typescript.typescriptDefaults.setDiagnosticsOptions({\n      noSemanticValidation: false,\n      noSyntaxValidation: !this.hasNativeTypescript(),\n    });\n  };\n\n  creatingModelMap = {};\n\n  createModel = (\n    module: Module,\n    modules: Array<Module> = this.sandbox.modules,\n    directories: Array<Directory> = this.sandbox.directories\n  ) => {\n    // Prevent race conditions\n    this.creatingModelMap[module.id] =\n      this.creatingModelMap[module.id] ||\n      (async () => {\n        // Remove the first slash, as this will otherwise create errors in monaco\n        const path = getModulePath(modules, directories, module.id);\n        if (path) {\n          // We need to add this as a lib specifically to Monaco, because Monaco\n          // tends to lose type definitions if you don't touch a file for a while.\n          // Related issue: https://github.com/Microsoft/monaco-editor/issues/461\n          const lib = this.addLib(module.code || '', path);\n\n          const mode =\n            (await getMode(module.title, this.monaco)) || 'typescript';\n\n          if (\n            mode !== 'javascript' &&\n            mode !== 'typescript' &&\n            this.monaco.languages.getEncodedLanguageId(mode) === null\n          ) {\n            // In this case the language still needs to load, if we load the model immediately it will get\n            // the plaintext value. So when the language loads we set the new model\n            // eslint-disable-next-line no-constant-condition\n\n            while (this.monaco.languages.getEncodedLanguageId(mode) === null) {\n              await delay(100); // eslint-disable-line\n            }\n          }\n\n          const model = this.monaco.editor.createModel(\n            module.code || '',\n            mode === 'javascript' ? 'typescript' : mode,\n            new this.monaco.Uri({ path, scheme: 'file' })\n          );\n\n          model.updateOptions({ tabSize: this.props.settings.tabWidth });\n\n          modelCache[module.id] = modelCache[module.id] || {\n            model: null,\n            decorations: [],\n            viewState: null,\n          };\n          modelCache[module.id].model = model;\n          modelCache[module.id].lib = lib;\n\n          delete this.creatingModelMap[module.id];\n          return model;\n        }\n\n        delete this.creatingModelMap[module.id];\n        return undefined;\n      })();\n\n    return this.creatingModelMap[module.id];\n  };\n\n  getModelById = async (id: string) => {\n    const { modules } = this.sandbox;\n\n    if (!modelCache[id] || !modelCache[id].model) {\n      const module = modules.find(m => m.id === id);\n\n      if (module) {\n        await this.createModel(module);\n      }\n    }\n\n    return modelCache[id];\n  };\n\n  getModelByShortid = async (shortid: string) => {\n    const module = this.sandbox.modules.find(m => m.shortid === shortid);\n\n    if (!module) {\n      throw new Error('Cannot find module with shortid: ' + shortid);\n    }\n    return this.getModelById(module.id);\n  };\n\n  openNewModel = async (module: Module) => {\n    const { id, code: newCode, title } = module;\n    const modelInfo = await this.getModelById(id);\n\n    // Mark receiving code so that the editor won't send all changed code to the\n    // other clients.\n    this.receivingCode = true;\n\n    if (newCode !== modelInfo.model.getValue(1)) {\n      modelInfo.model.setValue(newCode);\n    }\n\n    this.currentModule = module;\n    this.editor.setModel(modelInfo.model);\n    this.receivingCode = false;\n\n    requestAnimationFrame(() => {\n      if (modelInfo.viewState) {\n        this.editor.restoreViewState(modelInfo.viewState);\n      }\n\n      this.lint(\n        modelInfo.model.getValue(1),\n        title,\n        modelInfo.model.getVersionId()\n      );\n    });\n  };\n\n  setCurrentModule = (moduleId: string) => {\n    this.closeFuzzySearch();\n\n    const module = this.sandbox.modules.find(m => m.id === moduleId);\n    if (module) {\n      if (this.props.onModuleChange) {\n        this.props.onModuleChange(moduleId);\n      }\n    }\n  };\n\n  openReference = model => {\n    const foundModuleId = Object.keys(modelCache).find(\n      mId => modelCache[mId].model === model\n    );\n\n    if (foundModuleId) {\n      this.setCurrentModule(foundModuleId);\n    }\n\n    // const selection = data.options.selection;\n    // if (selection) {\n    //   if (\n    //     typeof selection.endLineNumber === 'number' &&\n    //     typeof selection.endColumn === 'number'\n    //   ) {\n    //     this.editor.setSelection(selection);\n    //     this.editor.revealRangeInCenter(selection);\n    //   } else {\n    //     const pos = {\n    //       lineNumber: selection.startLineNumber,\n    //       column: selection.startColumn,\n    //     };\n    //     this.editor.setPosition(pos);\n    //     this.editor.revealPositionInCenter(pos);\n    //   }\n    // }\n\n    return Promise.resolve({\n      getControl: () => this.editor,\n    });\n  };\n\n  getCode = () =>\n    this.editor.getValue({\n      lineEnding: '\\n',\n    });\n\n  handleSaveCode = async () => {\n    const { onSave } = this.props;\n    if (onSave) {\n      onSave(this.getCode() || '');\n    }\n  };\n\n  getEditorOptions = () => {\n    const { settings } = this;\n    const { currentModule } = this;\n\n    return {\n      ...getSettings(settings),\n      ariaLabel: currentModule.title,\n      readOnly: !!this.props.readOnly,\n    };\n  };\n\n  render() {\n    const { hideNavigation } = this.props;\n\n    const { sandbox } = this;\n    const { currentModule } = this;\n    const options = this.getEditorOptions();\n\n    return (\n      <Container>\n        <CodeContainer hideNavigation={hideNavigation}>\n          {this.state.fuzzySearchEnabled && (\n            <FuzzySearch\n              closeFuzzySearch={this.closeFuzzySearch}\n              setCurrentModule={this.setCurrentModule}\n              modules={sandbox.modules}\n              directories={sandbox.directories}\n              currentModuleId={currentModule.id}\n            />\n          )}\n          <MonacoEditorComponent\n            width=\"100%\"\n            height=\"100%\"\n            theme=\"CodeSandbox\"\n            options={options}\n            editorDidMount={this.configureEditor}\n            editorWillMount={monaco =>\n              defineTheme(monaco, this.props.theme.vscodeTheme)\n            }\n            getEditorOptions={this.getEditorOptions}\n            openReference={this.openReference}\n          />\n        </CodeContainer>\n      </Container>\n    );\n  }\n}\n\nexport default withTheme(MonacoEditor);\n","import { lineAndColumnToIndex } from 'app/utils/monaco-index-converter';\nimport { TextOperation } from 'ot';\n\nexport default function convertChangeEventToOperation(\n  changeEvent,\n  liveOperationCode\n) {\n  let otOperation;\n\n  let composedCode = liveOperationCode;\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const change of [...changeEvent.changes]) {\n    const newOt = new TextOperation();\n    const cursorStartOffset = lineAndColumnToIndex(\n      composedCode.split(/\\n/),\n      change.range.startLineNumber,\n      change.range.startColumn\n    );\n\n    const retain = cursorStartOffset - newOt.targetLength;\n\n    if (retain !== 0) {\n      newOt.retain(retain);\n    }\n\n    if (change.rangeLength > 0) {\n      newOt.delete(change.rangeLength);\n    }\n\n    if (change.text) {\n      newOt.insert(change.text);\n    }\n\n    const remaining = composedCode.length - newOt.baseLength;\n    if (remaining > 0) {\n      newOt.retain(remaining);\n    }\n\n    otOperation = otOperation ? otOperation.compose(newOt) : newOt;\n\n    composedCode = otOperation.apply(liveOperationCode);\n  }\n\n  return {\n    operation: otOperation,\n    newCode: composedCode,\n  };\n}\n"],"sourceRoot":""}