{"version":3,"sources":["webpack:///C:/repos/codesandbox-client/node_modules/pseudomap/map.js","webpack:///C:/repos/codesandbox-client/node_modules/pseudomap/pseudomap.js","webpack:///C:/repos/codesandbox-client/node_modules/yallist/iterator.js","webpack:///C:/repos/codesandbox-client/node_modules/yallist/yallist.js","webpack:///./node_modules/source-map/lib/array-set.js","webpack:///./node_modules/source-map/lib/base64-vlq.js","webpack:///./node_modules/source-map/lib/base64.js","webpack:///./node_modules/source-map/lib/binary-search.js","webpack:///./node_modules/source-map/lib/mapping-list.js","webpack:///./node_modules/source-map/lib/quick-sort.js","webpack:///./node_modules/source-map/lib/source-map-consumer.js","webpack:///./node_modules/source-map/lib/source-map-generator.js","webpack:///./node_modules/source-map/lib/source-node.js","webpack:///./node_modules/source-map/lib/util.js","webpack:///./node_modules/source-map/source-map.js"],"names":["process","env","npm_lifecycle_script","TEST_PSEUDOMAP","Map","module","exports","hasOwnProperty","Object","prototype","PseudoMap","set","this","TypeError","clear","forEach","value","key","Array","isArray","kv","same","a","b","Entry","k","v","i","_index","find","data","s","call","fn","thisp","keys","_data","has","get","res","size","delete","create","defineProperty","enumerable","configurable","writable","n","values","entries","Error","Yallist","Symbol","iterator","walker","head","next","list","self","tail","length","item","push","arguments","l","Node","unshift","prev","removeNode","node","unshiftNode","pushNode","pop","shift","forEachReverse","getReverse","map","mapReverse","reduce","initial","acc","reduceReverse","toArray","arr","toArrayReverse","slice","from","to","ret","sliceReverse","reverse","p","er","util","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","len","add","getOwnPropertyNames","aStr","sStr","toSetString","isDuplicate","idx","indexOf","at","aIdx","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aIndex","aOutParam","continuation","strLen","result","charCodeAt","charAt","shifted","fromVLQSigned","rest","intToCharMap","split","number","charCode","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","search","aNeedle","aHaystack","aCompare","aBias","index","recursiveSearch","aLow","aHigh","mid","Math","floor","cmp","MappingList","_sorted","_last","generatedLine","generatedColumn","unsortedForEach","aCallback","aThisArg","aMapping","mappingA","mappingB","lineA","lineB","columnA","columnB","compareByGeneratedPositionsInflated","generatedPositionAfter","sort","swap","ary","x","y","temp","doQuickSort","comparator","r","low","high","round","random","pivot","j","q","quickSort","binarySearch","base64VLQ","SourceMapConsumer","aSourceMap","sourceMap","JSON","parse","replace","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","getArg","sources","names","sourceRoot","sourcesContent","mappings","file","_version","String","normalize","source","isAbsolute","relative","_names","_sources","_mappings","Mapping","originalLine","originalColumn","name","lastOffset","line","column","_sections","url","offset","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","c","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","join","allGeneratedPositionsFor","aArgs","needle","_findMapping","compareByOriginalPositions","undefined","lastColumn","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","str","segment","end","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","some","sc","sourceContentFor","aSource","nullOnMissing","urlParse","fileUriAbsPath","scheme","path","generatedPositionFor","constructor","sectionIndex","section","bias","every","content","generatedPosition","sectionMappings","adjustedMapping","SourceMapGenerator","_skipValidation","_sourcesContents","aSourceMapConsumer","generator","newMapping","generated","original","addMapping","sourceFile","setSourceContent","_validateMapping","aSourceFile","aSourceContent","applySourceMap","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aName","stringify","_serializeMappings","nameIdx","sourceIdx","previousGeneratedLine","aSources","toJSON","toString","REGEX_NEWLINE","isSourceNode","SourceNode","aLine","aColumn","aChunks","children","sourceContents","fromStringWithSourceMap","aGeneratedCode","aRelativePath","remainingLines","shiftNextLine","lastGeneratedLine","lastMapping","code","nextLine","substr","addMappingWithCode","aChunk","chunk","prepend","walk","aFn","aSep","newChildren","replaceRight","aPattern","aReplacement","lastChild","walkSourceContents","fromSetString","toStringWithSourceMap","sourceMappingActive","lastOriginalSource","lastOriginalLine","lastOriginalColumn","lastOriginalName","sourceContent","aDefaultValue","urlRegexp","dataUrlRegexp","aUrl","match","auth","host","port","urlGenerate","aParsedUrl","aPath","part","parts","up","splice","aRoot","aPathUrl","aRootUrl","joined","level","lastIndexOf","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","onlyCompareOriginal","onlyCompareGenerated"],"mappings":"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","file":"static/js/vendors~vue-loader~vue-selector.155751ef4.chunk.js","sourcesContent":["if (process.env.npm_package_name === 'pseudomap' &&\n    process.env.npm_lifecycle_script === 'test')\n  process.env.TEST_PSEUDOMAP = 'true'\n\nif (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {\n  module.exports = Map\n} else {\n  module.exports = require('./pseudomap')\n}\n","var hasOwnProperty = Object.prototype.hasOwnProperty\n\nmodule.exports = PseudoMap\n\nfunction PseudoMap (set) {\n  if (!(this instanceof PseudoMap)) // whyyyyyyy\n    throw new TypeError(\"Constructor PseudoMap requires 'new'\")\n\n  this.clear()\n\n  if (set) {\n    if ((set instanceof PseudoMap) ||\n        (typeof Map === 'function' && set instanceof Map))\n      set.forEach(function (value, key) {\n        this.set(key, value)\n      }, this)\n    else if (Array.isArray(set))\n      set.forEach(function (kv) {\n        this.set(kv[0], kv[1])\n      }, this)\n    else\n      throw new TypeError('invalid argument')\n  }\n}\n\nPseudoMap.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  Object.keys(this._data).forEach(function (k) {\n    if (k !== 'size')\n      fn.call(thisp, this._data[k].value, this._data[k].key)\n  }, this)\n}\n\nPseudoMap.prototype.has = function (k) {\n  return !!find(this._data, k)\n}\n\nPseudoMap.prototype.get = function (k) {\n  var res = find(this._data, k)\n  return res && res.value\n}\n\nPseudoMap.prototype.set = function (k, v) {\n  set(this._data, k, v)\n}\n\nPseudoMap.prototype.delete = function (k) {\n  var res = find(this._data, k)\n  if (res) {\n    delete this._data[res._index]\n    this._data.size--\n  }\n}\n\nPseudoMap.prototype.clear = function () {\n  var data = Object.create(null)\n  data.size = 0\n\n  Object.defineProperty(this, '_data', {\n    value: data,\n    enumerable: false,\n    configurable: true,\n    writable: false\n  })\n}\n\nObject.defineProperty(PseudoMap.prototype, 'size', {\n  get: function () {\n    return this._data.size\n  },\n  set: function (n) {},\n  enumerable: true,\n  configurable: true\n})\n\nPseudoMap.prototype.values =\nPseudoMap.prototype.keys =\nPseudoMap.prototype.entries = function () {\n  throw new Error('iterators are not implemented in this version')\n}\n\n// Either identical, or both NaN\nfunction same (a, b) {\n  return a === b || a !== a && b !== b\n}\n\nfunction Entry (k, v, i) {\n  this.key = k\n  this.value = v\n  this._index = i\n}\n\nfunction find (data, k) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k))\n      return data[key]\n  }\n}\n\nfunction set (data, k, v) {\n  for (var i = 0, s = '_' + k, key = s;\n       hasOwnProperty.call(data, key);\n       key = s + i++) {\n    if (same(data[key].key, k)) {\n      data[key].value = v\n      return\n    }\n  }\n  data.size++\n  data[key] = new Entry(k, v, key)\n}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are removed from this array, by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var shiftNextLine = function() {\n      var lineContents = remainingLines.shift();\n      // The last line of a file might not have a newline.\n      var newLine = remainingLines.shift() || \"\";\n      return lineContents + newLine;\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[0];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[0] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[0];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[0] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLines.length > 0) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n"],"sourceRoot":""}