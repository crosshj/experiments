{"version":3,"sources":["webpack:///./node_modules/@theia/output/src/browser/output-context-menu.ts","webpack:///./node_modules/@theia/output/src/browser/output-contribution.ts","webpack:///./node_modules/@theia/output/src/browser/output-resource.ts","webpack:///./node_modules/@theia/output/src/browser/output-widget.tsx","webpack:///./node_modules/@theia/output/src/common/output-channel.ts","webpack:///./node_modules/@theia/output/src/common/output-preferences.ts","webpack:///./node_modules/@theia/output/src/common/output-uri.ts","webpack:///./node_modules/@theia/output/src/browser/style/output.css?8dde","webpack:///./node_modules/@theia/output/src/browser/style/output.css","webpack:///./node_modules/p-queue/index.js"],"names":[],"mappings":"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T,iBAAS,KAAT,iBAAS,QAsBzB;;;;;;;;;;;;;ACvCD,cAAc,mBAAO,CAAC,6IAAmD;;AAEzE,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,kGAA+C;;AAEpE;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;ACnBf,2BAA2B,mBAAO,CAAC,4FAA2C;AAC9E;;;AAGA;AACA,cAAc,QAAS,82BAA82B,mBAAmB,GAAG,yBAAyB,0CAA0C,GAAG,2BAA2B,mDAAmD,GAAG;;AAEljC;;;;;;;;;;;;;ACPa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,uFAAuF,iBAAiB,MAAM,wBAAwB;AACtI;;AAEA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"28.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\nimport { injectable } from 'inversify';\nimport { MenuPath } from '@theia/core/lib/common';\nimport { MonacoContextMenuService } from '@theia/monaco/lib/browser/monaco-context-menu';\n\nexport namespace OutputContextMenu {\n    export const MENU_PATH: MenuPath = ['output_context_menu'];\n    export const TEXT_EDIT_GROUP = [...MENU_PATH, '0_text_edit_group'];\n    export const COMMAND_GROUP = [...MENU_PATH, '1_command_group'];\n    export const WIDGET_GROUP = [...MENU_PATH, '2_widget_group'];\n}\n\n@injectable()\nexport class OutputContextMenuService extends MonacoContextMenuService {\n\n    protected menuPath(): MenuPath {\n        return OutputContextMenu.MENU_PATH;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Widget } from '@theia/core/lib/browser/widgets/widget';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { CommonCommands, quickCommand, OpenHandler, OpenerOptions } from '@theia/core/lib/browser';\nimport { Command, CommandRegistry, MenuModelRegistry } from '@theia/core/lib/common';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OutputWidget } from './output-widget';\nimport { OutputContextMenu } from './output-context-menu';\nimport { OutputUri } from '../common/output-uri';\n\nexport namespace OutputCommands {\n\n    const OUTPUT_CATEGORY = 'Output';\n\n    /* #region VS Code `OutputChannel` API */\n    // Based on: https://github.com/theia-ide/vscode/blob/standalone/0.19.x/src/vs/vscode.d.ts#L4692-L4745\n\n    export const APPEND: Command = {\n        id: 'output:append'\n    };\n\n    export const APPEND_LINE: Command = {\n        id: 'output:appendLine'\n    };\n\n    export const CLEAR: Command = {\n        id: 'output:clear'\n    };\n\n    export const SHOW: Command = {\n        id: 'output:show'\n    };\n\n    export const HIDE: Command = {\n        id: 'output:hide'\n    };\n\n    export const DISPOSE: Command = {\n        id: 'output:dispose'\n    };\n\n    /* #endregion VS Code `OutputChannel` API */\n\n    export const CLEAR__WIDGET: Command = {\n        id: 'output:widget:clear',\n        category: OUTPUT_CATEGORY,\n        iconClass: 'clear-all'\n    };\n\n    export const LOCK__WIDGET: Command = {\n        id: 'output:widget:lock',\n        category: OUTPUT_CATEGORY,\n        iconClass: 'fa fa-unlock'\n    };\n\n    export const UNLOCK__WIDGET: Command = {\n        id: 'output:widget:unlock',\n        category: OUTPUT_CATEGORY,\n        iconClass: 'fa fa-lock'\n    };\n\n    export const CLEAR__QUICK_PICK: Command = {\n        id: 'output:pick-clear',\n        label: 'Clear Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const SHOW__QUICK_PICK: Command = {\n        id: 'output:pick-show',\n        label: 'Show Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const HIDE__QUICK_PICK: Command = {\n        id: 'output:pick-hide',\n        label: 'Hide Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n    export const DISPOSE__QUICK_PICK: Command = {\n        id: 'output:pick-dispose',\n        label: 'Close Output Channel...',\n        category: OUTPUT_CATEGORY\n    };\n\n}\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> implements OpenHandler {\n\n    readonly id: string = `${OutputWidget.ID}-opener`;\n\n    constructor() {\n        super({\n            widgetId: OutputWidget.ID,\n            widgetName: 'Output',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'CtrlCmd+Shift+U'\n        });\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(OutputCommands.CLEAR__WIDGET, {\n            isEnabled: widget => this.withWidget(widget),\n            isVisible: widget => this.withWidget(widget),\n            execute: () => this.widget.then(widget => widget.clear())\n        });\n        registry.registerCommand(OutputCommands.LOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => !output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => !output.isLocked),\n            execute: () => this.widget.then(widget => widget.lock())\n        });\n        registry.registerCommand(OutputCommands.UNLOCK__WIDGET, {\n            isEnabled: widget => this.withWidget(widget, output => output.isLocked),\n            isVisible: widget => this.withWidget(widget, output => output.isLocked),\n            execute: () => this.widget.then(widget => widget.unlock())\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(OutputContextMenu.TEXT_EDIT_GROUP, {\n            commandId: CommonCommands.COPY.id\n        });\n        registry.registerMenuAction(OutputContextMenu.COMMAND_GROUP, {\n            commandId: quickCommand.id,\n            label: 'Find Command...'\n        });\n        registry.registerMenuAction(OutputContextMenu.WIDGET_GROUP, {\n            commandId: OutputCommands.CLEAR__WIDGET.id,\n            label: 'Clear Output'\n        });\n    }\n\n    canHandle(uri: URI): MaybePromise<number> {\n        return OutputUri.is(uri) ? 200 : 0;\n    }\n\n    async open(uri: URI, options?: OpenerOptions): Promise<OutputWidget> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const widget = await this.openView(options);\n        widget.setInput(OutputUri.channelName(uri));\n        return widget;\n    }\n\n    protected withWidget(\n        widget: Widget | undefined,\n        predicate: (output: OutputWidget) => boolean = () => true\n    ): boolean | false {\n\n        return widget instanceof OutputWidget ? predicate(widget) : false;\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\nimport { Event, Resource, ResourceReadOptions, DisposableCollection, Emitter } from '@theia/core/lib/common';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { IReference } from '@theia/monaco/lib/browser/monaco-text-model-service';\n\nexport class OutputResource implements Resource {\n\n    protected _textModel: monaco.editor.ITextModel | undefined;\n    protected onDidChangeContentsEmitter = new Emitter<void>();\n    protected toDispose = new DisposableCollection(\n        this.onDidChangeContentsEmitter\n    );\n\n    constructor(readonly uri: URI, readonly editorModelRef: Deferred<IReference<MonacoEditorModel>>) {\n        this.editorModelRef.promise.then(modelRef => {\n            if (this.toDispose.disposed) {\n                modelRef.dispose();\n                return;\n            }\n            const textModel = modelRef.object.textEditorModel;\n            this._textModel = textModel;\n            this.toDispose.push(modelRef);\n            this.toDispose.push(this._textModel!.onDidChangeContent(() => this.onDidChangeContentsEmitter.fire()));\n        });\n    }\n\n    get textModel(): monaco.editor.ITextModel | undefined {\n        return this._textModel;\n    }\n\n    get onDidChangeContents(): Event<void> {\n        return this.onDidChangeContentsEmitter.event;\n    }\n\n    async readContents(options?: ResourceReadOptions): Promise<string> {\n        if (this._textModel) {\n            const modelRef = await this.editorModelRef.promise;\n            return modelRef.object.textEditorModel.getValue();\n        }\n        return '';\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/output.css';\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { toArray } from '@phosphor/algorithm';\nimport { IDragEvent } from '@phosphor/dragdrop';\nimport { EditorWidget } from '@theia/editor/lib/browser';\nimport { MonacoEditor } from '@theia/monaco/lib/browser/monaco-editor';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { MonacoEditorProvider } from '@theia/monaco/lib/browser/monaco-editor-provider';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { Message, BaseWidget, DockPanel, Widget, MessageLoop, StatefulWidget } from '@theia/core/lib/browser';\nimport { OutputUri } from '../common/output-uri';\nimport { OutputChannelManager, OutputChannel } from '../common/output-channel';\nimport { Emitter, Event, deepClone } from '@theia/core';\n\n@injectable()\nexport class OutputWidget extends BaseWidget implements StatefulWidget {\n\n    static readonly ID = 'outputView';\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    @inject(MonacoEditorProvider)\n    protected readonly editorProvider: MonacoEditorProvider;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    protected _state: OutputWidget.State = { locked: false };\n    protected readonly editorContainer: DockPanel;\n    protected readonly toDisposeOnSelectedChannelChanged = new DisposableCollection();\n    protected readonly onStateChangedEmitter = new Emitter<OutputWidget.State>();\n\n    constructor() {\n        super();\n        this.id = OutputWidget.ID;\n        this.title.label = 'Output';\n        this.title.caption = 'Output';\n        this.title.iconClass = 'fa fa-flag';\n        this.title.closable = true;\n        this.addClass('theia-output');\n        this.node.tabIndex = 0;\n        this.editorContainer = new NoopDragOverDockPanel({ spacing: 0, mode: 'single-document' });\n        this.editorContainer.addClass('editor-container');\n        this.editorContainer.node.tabIndex = -1;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.pushAll([\n            this.outputChannelManager.onSelectedChannelChanged(this.refreshEditorWidget.bind(this)),\n            this.toDisposeOnSelectedChannelChanged,\n            this.onStateChangedEmitter,\n            this.onStateChanged(() => this.update())\n        ]);\n        this.refreshEditorWidget();\n    }\n\n    storeState(): object {\n        return this.state;\n    }\n\n    restoreState(oldState: object & Partial<OutputWidget.State>): void {\n        const copy = deepClone(this.state);\n        if (oldState.locked) {\n            copy.locked = oldState.locked;\n        }\n        this.state = copy;\n    }\n\n    protected get state(): OutputWidget.State {\n        return this._state;\n    }\n\n    protected set state(state: OutputWidget.State) {\n        this._state = state;\n        this.onStateChangedEmitter.fire(this._state);\n    }\n\n    protected async refreshEditorWidget(): Promise<void> {\n        const { selectedChannel } = this;\n        const editor = this.editor;\n        if (selectedChannel && editor) {\n            // If the input is the current one, do nothing.\n            const model = editor.getControl().getModel();\n            if (model && model.uri.toString() === selectedChannel.uri.toString()) {\n                return;\n            }\n        }\n        this.toDisposeOnSelectedChannelChanged.dispose();\n        if (selectedChannel) {\n            const widget = await this.createEditorWidget();\n            if (widget) {\n                this.editorContainer.addWidget(widget);\n                this.toDisposeOnSelectedChannelChanged.pushAll([\n                    Disposable.create(() => widget.close()),\n                    selectedChannel.onContentChange(() => this.revealLastLine())\n                ]);\n                MessageLoop.sendMessage(widget, Widget.Msg.ActivateRequest);\n                this.revealLastLine();\n            }\n        }\n    }\n\n    protected onAfterAttach(message: Message): void {\n        super.onAfterAttach(message);\n        Widget.attach(this.editorContainer, this.node);\n        this.toDisposeOnDetach.push(Disposable.create(() => Widget.detach(this.editorContainer)));\n    }\n\n    protected onActivateRequest(message: Message): void {\n        super.onActivateRequest(message);\n        if (this.selectedChannel) {\n            for (const widget of toArray(this.editorContainer.widgets())) {\n                MessageLoop.sendMessage(widget, Widget.Msg.ActivateRequest);\n            }\n        } else {\n            this.node.focus();\n        }\n    }\n\n    protected onResize(message: Widget.ResizeMessage): void {\n        super.onResize(message);\n        MessageLoop.sendMessage(this.editorContainer, Widget.ResizeMessage.UnknownSize);\n        for (const widget of toArray(this.editorContainer.widgets())) {\n            MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\n        }\n    }\n\n    get onStateChanged(): Event<OutputWidget.State> {\n        return this.onStateChangedEmitter.event;\n    }\n\n    clear(): void {\n        if (this.selectedChannel) {\n            this.selectedChannel.clear();\n        }\n    }\n\n    selectAll(): void {\n        const editor = this.editor;\n        if (editor) {\n            const model = editor.getControl().getModel();\n            if (model) {\n                const endLine = model.getLineCount();\n                const endCharacter = model.getLineMaxColumn(endLine);\n                editor.getControl().setSelection(new monaco.Range(1, 1, endLine, endCharacter));\n            }\n        }\n    }\n\n    lock(): void {\n        this.state = { ...deepClone(this.state), locked: true };\n    }\n\n    unlock(): void {\n        this.state = { ...deepClone(this.state), locked: false };\n    }\n\n    get isLocked(): boolean {\n        return !!this.state.locked;\n    }\n\n    setInput(channelName: string): void {\n        this.outputChannelManager.getChannel(channelName).setVisibility(true);\n    }\n\n    protected revealLastLine(): void {\n        if (this.isLocked) {\n            return;\n        }\n        const editor = this.editor;\n        if (editor) {\n            const model = editor.getControl().getModel();\n            if (model) {\n                const lineNumber = model.getLineCount();\n                const column = model.getLineMaxColumn(lineNumber);\n                editor.getControl().revealPosition({ lineNumber, column }, monaco.editor.ScrollType.Smooth);\n            }\n        }\n    }\n\n    private get selectedChannel(): OutputChannel | undefined {\n        return this.outputChannelManager.selectedChannel;\n    }\n\n    private async createEditorWidget(): Promise<EditorWidget | undefined> {\n        if (!this.selectedChannel) {\n            return undefined;\n        }\n        const { name } = this.selectedChannel;\n        const editor = await this.editorProvider.get(OutputUri.create(name));\n        return new EditorWidget(editor, this.selectionService);\n    }\n\n    private get editor(): MonacoEditor | undefined {\n        for (const widget of toArray(this.editorContainer.children())) {\n            if (widget instanceof EditorWidget) {\n                if (widget.editor instanceof MonacoEditor) {\n                    return widget.editor;\n                }\n            }\n        }\n        return undefined;\n    }\n\n}\n\nexport namespace OutputWidget {\n    export interface State {\n        locked?: boolean;\n    }\n}\n\n/**\n * @deprecated Use `OutputWidget.ID` instead.\n */\nexport const OUTPUT_WIDGET_KIND = OutputWidget.ID;\n\n/**\n * Customized `DockPanel` that does not allow dropping widgets into it.\n * Intercepts `'p-dragover'` events, and sets the desired drop action to `'none'`.\n */\nclass NoopDragOverDockPanel extends DockPanel {\n\n    constructor(options?: DockPanel.IOptions) {\n        super(options);\n        NoopDragOverDockPanel.prototype['_evtDragOver'] = (event: IDragEvent) => {\n            event.preventDefault();\n            event.stopPropagation();\n            event.dropAction = 'none';\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as PQueue from 'p-queue';\nimport { injectable, inject } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { Resource, ResourceResolver } from '@theia/core/lib/common/resource';\nimport { CommandRegistry, CommandContribution } from '@theia/core/lib/common/command';\nimport { OpenerService, open, QuickPickService } from '@theia/core/lib/browser';\nimport { Emitter, Event, Disposable, DisposableCollection } from '@theia/core';\nimport { QuickPickItem } from '@theia/core/lib/common/quick-pick-service';\nimport { MonacoEditorModel } from '@theia/monaco/lib/browser/monaco-editor-model';\nimport { MonacoTextModelService, IReference } from '@theia/monaco/lib/browser/monaco-text-model-service';\nimport { OutputUri } from './output-uri';\nimport { OutputCommands } from '../browser/output-contribution';\nimport { OutputResource } from '../browser/output-resource';\nimport { OutputPreferences } from './output-preferences';\nimport { OutputConfigSchema } from './output-preferences';\n\n@injectable()\nexport class OutputChannelManager implements CommandContribution, Disposable, ResourceResolver {\n\n    @inject(OpenerService)\n    protected readonly openerService: OpenerService;\n\n    @inject(QuickPickService)\n    protected readonly quickPickService: QuickPickService;\n\n    @inject(MonacoTextModelService)\n    protected readonly textModelService: MonacoTextModelService;\n\n    @inject(OutputPreferences)\n    protected readonly preferences: OutputPreferences;\n\n    protected readonly channels = new Map<string, OutputChannel>();\n    protected readonly resources = new Map<string, OutputResource>();\n    protected _selectedChannel: OutputChannel | undefined;\n\n    protected readonly channelAddedEmitter = new Emitter<{ name: string }>();\n    protected readonly channelDeletedEmitter = new Emitter<{ name: string }>();\n    protected readonly channelWasShownEmitter = new Emitter<{ name: string }>();\n    protected readonly channelWasHiddenEmitter = new Emitter<{ name: string }>();\n    protected readonly selectedChannelChangedEmitter = new Emitter<{ name: string } | undefined>();\n\n    readonly onChannelAdded = this.channelAddedEmitter.event;\n    readonly onChannelDeleted = this.channelDeletedEmitter.event;\n    readonly onChannelWasShown = this.channelWasShownEmitter.event;\n    readonly onChannelWasHidden = this.channelWasHiddenEmitter.event;\n    readonly onSelectedChannelChanged = this.selectedChannelChangedEmitter.event;\n\n    protected readonly toDispose = new DisposableCollection();\n    protected readonly toDisposeOnChannelDeletion = new Map<string, Disposable>();\n\n    registerCommands(registry: CommandRegistry): void {\n        registry.registerCommand(OutputCommands.APPEND, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.getChannel(name).append(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.APPEND_LINE, {\n            execute: ({ name, text }: { name: string, text: string }) => {\n                if (name && text) {\n                    this.getChannel(name).appendLine(text);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.CLEAR, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.getChannel(name).clear();\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.DISPOSE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.deleteChannel(name);\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.SHOW, {\n            execute: ({ name, options }: { name: string, options?: { preserveFocus?: boolean } }) => {\n                if (name) {\n                    // Not just show on the UI but make sure the visible flag was flipped.\n                    this.getChannel(name).show();\n                    const preserveFocus = options && !!options.preserveFocus;\n                    const activate = !preserveFocus;\n                    const reveal = preserveFocus;\n                    open(this.openerService, OutputUri.create(name), { activate, reveal });\n                }\n            }\n        });\n        registry.registerCommand(OutputCommands.HIDE, {\n            execute: ({ name }: { name: string }) => {\n                if (name) {\n                    this.getChannel(name).hide();\n                }\n            }\n        });\n\n        registry.registerCommand(OutputCommands.CLEAR__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Clear output channel.',\n                    channels: this.getChannels().slice()\n                });\n                if (channel) {\n                    channel.clear();\n                }\n            },\n            isEnabled: () => !!this.getChannels().length,\n            isVisible: () => !!this.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.SHOW__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Show output channel.',\n                    channels: this.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.SHOW.id, { name, options: { preserveFocus: true } });\n                }\n            },\n            isEnabled: () => !!this.getChannels().length,\n            isVisible: () => !!this.getChannels().length\n        });\n        registry.registerCommand(OutputCommands.HIDE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Hide output channel.',\n                    channels: this.getVisibleChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.HIDE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.getVisibleChannels().length,\n            isVisible: () => !!this.getVisibleChannels().length\n        });\n        registry.registerCommand(OutputCommands.DISPOSE__QUICK_PICK, {\n            execute: async () => {\n                const channel = await this.pick({\n                    placeholder: 'Close output channel.',\n                    channels: this.getChannels().slice()\n                });\n                if (channel) {\n                    const { name } = channel;\n                    registry.executeCommand(OutputCommands.DISPOSE.id, { name });\n                }\n            },\n            isEnabled: () => !!this.getChannels().length,\n            isVisible: () => !!this.getChannels().length\n        });\n    }\n\n    protected async pick({ channels, placeholder }: { channels: OutputChannel[], placeholder: string }): Promise<OutputChannel | undefined> {\n        const items: QuickPickItem<OutputChannel>[] = [];\n        for (let i = 0; i < channels.length; i++) {\n            const channel = channels[i];\n            if (i === 0) {\n                items.push({ label: channel.isVisible ? 'Output Channels' : 'Hidden Channels', type: 'separator' });\n            } else if (!channel.isVisible && channels[i - 1].isVisible) {\n                items.push({ label: 'Hidden Channels', type: 'separator' });\n            }\n            items.push({ label: channel.name, value: channel });\n        }\n        return this.quickPickService.show(items, { placeholder });\n    }\n\n    getChannel(name: string): OutputChannel {\n        const existing = this.channels.get(name);\n        if (existing) {\n            return existing;\n        }\n\n        // We have to register the resource first, because `textModelService#createModelReference` will require it\n        // right after creating the monaco.editor.ITextModel.\n        // All `append` and `appendLine` will be deferred until the underlying text-model instantiation.\n        let resource = this.resources.get(name);\n        if (!resource) {\n            const uri = OutputUri.create(name);\n            const editorModelRef = new Deferred<IReference<MonacoEditorModel>>();\n            resource = this.createResource({ uri, editorModelRef });\n            this.resources.set(name, resource);\n            this.textModelService.createModelReference(uri).then(ref => editorModelRef.resolve(ref));\n        }\n\n        const channel = new OutputChannel(resource, this.preferences);\n        this.channels.set(name, channel);\n        this.toDisposeOnChannelDeletion.set(name, this.registerListeners(channel));\n        this.channelAddedEmitter.fire(channel);\n        if (!this.selectedChannel) {\n            this.selectedChannel = channel;\n        }\n        return channel;\n    }\n\n    protected registerListeners(channel: OutputChannel): Disposable {\n        const { name } = channel;\n        return new DisposableCollection(\n            channel,\n            channel.onVisibilityChange(({ isVisible }) => {\n                if (isVisible) {\n                    this.selectedChannel = channel;\n                    this.channelWasShownEmitter.fire({ name });\n                } else {\n                    if (channel === this.selectedChannel) {\n                        this.selectedChannel = this.getVisibleChannels()[0];\n                    }\n                    this.channelWasHiddenEmitter.fire({ name });\n                }\n            }),\n            channel.onDisposed(() => this.deleteChannel(name)),\n            Disposable.create(() => {\n                const resource = this.resources.get(name);\n                if (resource) {\n                    resource.dispose();\n                    this.resources.delete(name);\n                } else {\n                    console.warn(`Could not dispose. No resource was for output channel: '${name}'.`);\n                }\n            }),\n            Disposable.create(() => {\n                const toDispose = this.channels.get(name);\n                if (!toDispose) {\n                    console.warn(`Could not dispose. No channel exist with name: '${name}'.`);\n                    return;\n                }\n                this.channels.delete(name);\n                toDispose.dispose();\n                this.channelDeletedEmitter.fire({ name });\n                if (this.selectedChannel && this.selectedChannel.name === name) {\n                    this.selectedChannel = this.getVisibleChannels()[0];\n                }\n            })\n        );\n    }\n\n    deleteChannel(name: string): void {\n        const toDispose = this.toDisposeOnChannelDeletion.get(name);\n        if (toDispose) {\n            toDispose.dispose();\n        }\n    }\n\n    getChannels(): OutputChannel[] {\n        return Array.from(this.channels.values()).sort(this.channelComparator);\n    }\n\n    getVisibleChannels(): OutputChannel[] {\n        return this.getChannels().filter(channel => channel.isVisible);\n    }\n\n    protected get channelComparator(): (left: OutputChannel, right: OutputChannel) => number {\n        return (left, right) => {\n            if (left.isVisible !== right.isVisible) {\n                return left.isVisible ? -1 : 1;\n            }\n            return left.name.toLocaleLowerCase().localeCompare(right.name.toLocaleLowerCase());\n        };\n    }\n\n    dispose(): void {\n        this.toDispose.dispose();\n    }\n\n    get selectedChannel(): OutputChannel | undefined {\n        return this._selectedChannel;\n    }\n\n    set selectedChannel(channel: OutputChannel | undefined) {\n        this._selectedChannel = channel;\n        if (this._selectedChannel) {\n            this.selectedChannelChangedEmitter.fire({ name: this._selectedChannel.name });\n        } else {\n            this.selectedChannelChangedEmitter.fire(undefined);\n        }\n    }\n\n    /**\n     * Non-API: do not call directly.\n     */\n    async resolve(uri: URI): Promise<Resource> {\n        if (!OutputUri.is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        const resource = this.resources.get(OutputUri.channelName(uri));\n        if (!resource) {\n            throw new Error(`No output resource was registered with URI: ${uri.toString()}`);\n        }\n        return resource;\n    }\n\n    protected createResource({ uri, editorModelRef }: { uri: URI, editorModelRef: Deferred<IReference<MonacoEditorModel>> }): OutputResource {\n        return new OutputResource(uri, editorModelRef);\n    }\n\n}\n\nexport enum OutputChannelSeverity {\n    Error = 1,\n    Warning = 2,\n    Info = 3\n}\n\nexport class OutputChannel implements Disposable {\n\n    private readonly contentChangeEmitter = new Emitter<void>();\n    private readonly visibilityChangeEmitter = new Emitter<{ isVisible: boolean }>();\n    private readonly disposedEmitter = new Emitter<void>();\n    private readonly toDispose = new DisposableCollection(\n        this.contentChangeEmitter,\n        this.visibilityChangeEmitter,\n        this.disposedEmitter\n    );\n\n    private disposed = false;\n    private visible = true;\n    private _maxLineNumber: number;\n    private decorationIds = new Set<string>();\n    private textModifyQueue = new PQueue({ autoStart: true, concurrency: 1 });\n\n    readonly onVisibilityChange: Event<{ isVisible: boolean }> = this.visibilityChangeEmitter.event;\n    readonly onContentChange: Event<void> = this.contentChangeEmitter.event;\n    readonly onDisposed: Event<void> = this.disposedEmitter.event;\n\n    constructor(protected readonly resource: OutputResource, protected readonly preferences: OutputPreferences) {\n        this._maxLineNumber = this.preferences['output.maxChannelHistory'];\n        this.toDispose.push(resource);\n        this.toDispose.push(Disposable.create(() => this.decorationIds.clear()));\n        this.toDispose.push(this.preferences.onPreferenceChanged(({ preferenceName, newValue }) => {\n            if (preferenceName === 'output.maxChannelHistory') {\n                const maxLineNumber = newValue ? newValue : OutputConfigSchema.properties['output.maxChannelHistory'].default;\n                if (this.maxLineNumber !== maxLineNumber) {\n                    this.maxLineNumber = maxLineNumber;\n                }\n            }\n        }));\n    }\n\n    get name(): string {\n        return OutputUri.channelName(this.uri);\n    }\n\n    get uri(): URI {\n        return this.resource.uri;\n    }\n\n    hide(): void {\n        this.setVisibility(false);\n    }\n\n    show(): void {\n        this.setVisibility(true);\n    }\n\n    /**\n     * @deprecated use `show` and `hide` instead.\n     *\n     * TODO: decide on deprecation. I would be OK with a `setVisible(boolean)` signature, but not \"visibility\". So it would be a breaking anyway.\n     * Also, `hide`/`show` is in sync with VS Code API. Thoughts?\n     */\n    setVisibility(visible: boolean): void {\n        this.visible = visible;\n        this.visibilityChangeEmitter.fire({ isVisible: this.isVisible });\n    }\n\n    /**\n     * Note: if `false` it does not meant it is disposed or not available, it is only hidden from the UI.\n     */\n    get isVisible(): boolean {\n        return this.visible;\n    }\n\n    clear(): void {\n        this.textModifyQueue.add(async () => {\n            const textModel = (await this.resource.editorModelRef.promise).object.textEditorModel;\n            textModel.deltaDecorations(Array.from(this.decorationIds), []);\n            this.decorationIds.clear();\n            textModel.setValue('');\n            this.contentChangeEmitter.fire();\n        });\n    }\n\n    dispose(): void {\n        if (this.disposed) {\n            return;\n        }\n        this.disposed = true;\n        this.toDispose.dispose();\n        this.disposedEmitter.fire();\n    }\n\n    append(content: string, severity: OutputChannelSeverity = OutputChannelSeverity.Info): void {\n        this.textModifyQueue.add(() => this.doAppend({ content, severity }));\n    }\n\n    appendLine(content: string, severity: OutputChannelSeverity = OutputChannelSeverity.Info): void {\n        this.textModifyQueue.add(() => this.doAppend({ content, severity, appendEol: true }));\n    }\n\n    protected async doAppend({ content, severity, appendEol }: { content: string, severity: OutputChannelSeverity, appendEol?: boolean }): Promise<void> {\n        const textModel = (await this.resource.editorModelRef.promise).object.textEditorModel;\n        const lastLine = textModel.getLineCount();\n        const lastLineMaxColumn = textModel.getLineMaxColumn(lastLine);\n        const position = new monaco.Position(lastLine, lastLineMaxColumn);\n        const range = new monaco.Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const edits = [{\n            range,\n            text: !!appendEol ? `${content}${textModel.getEOL()}` : content,\n            forceMoveMarkers: true\n        }];\n        // We do not use `pushEditOperations` as we do not need undo/redo support. VS Code uses `applyEdits` too.\n        // https://github.com/microsoft/vscode/blob/dc348340fd1a6c583cb63a1e7e6b4fd657e01e01/src/vs/workbench/services/output/common/outputChannelModel.ts#L108-L115\n        textModel.applyEdits(edits);\n        if (severity !== OutputChannelSeverity.Info) {\n            const inlineClassName = severity === OutputChannelSeverity.Error ? 'theia-output-error' : 'theia-output-warning';\n            let endLineNumber = textModel.getLineCount();\n            // If last line is empty (the first non-whitespace is 0), apply decorator to previous line's last non-whitespace instead\n            // Note: if the user appends `inlineWarning `, the new decorator's range includes the trailing whitespace.\n            if (!textModel.getLineFirstNonWhitespaceColumn(endLineNumber)) {\n                endLineNumber--;\n            }\n            const endColumn = textModel.getLineLastNonWhitespaceColumn(endLineNumber);\n            const newDecorations = [{\n                range: new monaco.Range(range.startLineNumber, range.startColumn, endLineNumber, endColumn), options: {\n                    inlineClassName\n                }\n            }];\n            for (const decorationId of textModel.deltaDecorations([], newDecorations)) {\n                this.decorationIds.add(decorationId);\n            }\n        }\n        this.ensureMaxChannelHistory(textModel);\n        this.contentChangeEmitter.fire();\n    }\n\n    protected ensureMaxChannelHistory(textModel: monaco.editor.ITextModel): void {\n        this.contentChangeEmitter.fire();\n        const linesToRemove = textModel.getLineCount() - this.maxLineNumber - 1; // -1 as the last line is usually empty -> `appendLine`.\n        if (linesToRemove > 0) {\n            const endColumn = textModel.getLineMaxColumn(linesToRemove);\n            // `endLineNumber` is `linesToRemove` + 1 as monaco is one based.\n            const range = new monaco.Range(1, 1, linesToRemove, endColumn + 1);\n            // eslint-disable-next-line no-null/no-null\n            const text = null;\n            const decorationsToRemove = textModel.getLinesDecorations(range.startLineNumber, range.endLineNumber)\n                .filter(({ id }) => this.decorationIds.has(id)).map(({ id }) => id); // Do we need to filter here? Who else can put decorations to the output model?\n            if (decorationsToRemove.length) {\n                for (const newId of textModel.deltaDecorations(decorationsToRemove, [])) {\n                    this.decorationIds.add(newId);\n                }\n                for (const toRemoveId of decorationsToRemove) {\n                    this.decorationIds.delete(toRemoveId);\n                }\n            }\n            textModel.applyEdits([\n                {\n                    range: new monaco.Range(1, 1, linesToRemove + 1, textModel.getLineFirstNonWhitespaceColumn(linesToRemove + 1)),\n                    text,\n                    forceMoveMarkers: true\n                }\n            ]);\n        }\n    }\n\n    protected get maxLineNumber(): number {\n        return this._maxLineNumber;\n    }\n\n    protected set maxLineNumber(maxLineNumber: number) {\n        this._maxLineNumber = maxLineNumber;\n        this.append(''); // will trigger an `ensureMaxChannelHistory` call and will refresh the content.\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema\n} from '@theia/core/lib/browser/preferences';\n\nexport const OutputConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'output.maxChannelHistory': {\n            'type': 'number',\n            'description': 'The maximum number of entries in an output channel.',\n            'default': 1000\n        }\n    }\n};\n\nexport interface OutputConfiguration {\n    'output.maxChannelHistory': number\n}\n\nexport const OutputPreferences = Symbol('OutputPreferences');\nexport type OutputPreferences = PreferenceProxy<OutputConfiguration>;\n\nexport function createOutputPreferences(preferences: PreferenceService): OutputPreferences {\n    return createPreferenceProxy(preferences, OutputConfigSchema);\n}\n\nexport function bindOutputPreferences(bind: interfaces.Bind): void {\n    bind(OutputPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createOutputPreferences(preferences);\n    });\n\n    bind(PreferenceContribution).toConstantValue({ schema: OutputConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from '@theia/core/lib/common/uri';\n\nexport namespace OutputUri {\n\n    export const SCHEME = 'output';\n\n    export function is(uri: string | URI): boolean {\n        if (uri instanceof URI) {\n            return uri.scheme === SCHEME;\n        }\n        return is(new URI(uri));\n    }\n\n    export function create(name: string): URI {\n        return new URI(name).withScheme(SCHEME);\n    }\n\n    export function channelName(uri: string | URI): string {\n        if (!is(uri)) {\n            throw new Error(`Expected '${OutputUri.SCHEME}' URI scheme. Got: ${uri} instead.`);\n        }\n        return (uri instanceof URI ? uri : new URI(uri)).toString(true).slice(`${OutputUri.SCHEME}:/`.length);\n    }\n\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./output.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./output.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./output.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-output .editor-container {\\n    height: 100%;\\n}\\n\\n.theia-output-error {\\n    color: var(--theia-errorForeground);\\n}\\n\\n.theia-output-warning {\\n    color: var(--theia-editorWarning-foreground);\\n}\\n\", \"\"]);\n\n// exports\n","'use strict';\n\n// Port of lower_bound from http://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comp) {\n\tlet first = 0;\n\tlet count = array.length;\n\n\twhile (count > 0) {\n\t\tconst step = (count / 2) | 0;\n\t\tlet it = first + step;\n\n\t\tif (comp(array[it], value) <= 0) {\n\t\t\tfirst = ++it;\n\t\t\tcount -= step + 1;\n\t\t} else {\n\t\t\tcount = step;\n\t\t}\n\t}\n\n\treturn first;\n}\n\nclass PriorityQueue {\n\tconstructor() {\n\t\tthis._queue = [];\n\t}\n\n\tenqueue(run, opts) {\n\t\topts = Object.assign({\n\t\t\tpriority: 0\n\t\t}, opts);\n\n\t\tconst element = {priority: opts.priority, run};\n\n\t\tif (this.size && this._queue[this.size - 1].priority >= opts.priority) {\n\t\t\tthis._queue.push(element);\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = lowerBound(this._queue, element, (a, b) => b.priority - a.priority);\n\t\tthis._queue.splice(index, 0, element);\n\t}\n\n\tdequeue() {\n\t\treturn this._queue.shift().run;\n\t}\n\n\tget size() {\n\t\treturn this._queue.length;\n\t}\n}\n\nclass PQueue {\n\tconstructor(opts) {\n\t\topts = Object.assign({\n\t\t\tconcurrency: Infinity,\n\t\t\tautoStart: true,\n\t\t\tqueueClass: PriorityQueue\n\t\t}, opts);\n\n\t\tif (!(typeof opts.concurrency === 'number' && opts.concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${opts.concurrency}\\` (${typeof opts.concurrency})`);\n\t\t}\n\n\t\tthis.queue = new opts.queueClass(); // eslint-disable-line new-cap\n\t\tthis._queueClass = opts.queueClass;\n\t\tthis._pendingCount = 0;\n\t\tthis._concurrency = opts.concurrency;\n\t\tthis._isPaused = opts.autoStart === false;\n\t\tthis._resolveEmpty = () => {};\n\t\tthis._resolveIdle = () => {};\n\t}\n\n\t_next() {\n\t\tthis._pendingCount--;\n\n\t\tif (this.queue.size > 0) {\n\t\t\tif (!this._isPaused) {\n\t\t\t\tthis.queue.dequeue()();\n\t\t\t}\n\t\t} else {\n\t\t\tthis._resolveEmpty();\n\t\t\tthis._resolveEmpty = () => {};\n\n\t\t\tif (this._pendingCount === 0) {\n\t\t\t\tthis._resolveIdle();\n\t\t\t\tthis._resolveIdle = () => {};\n\t\t\t}\n\t\t}\n\t}\n\n\tadd(fn, opts) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst run = () => {\n\t\t\t\tthis._pendingCount++;\n\n\t\t\t\ttry {\n\t\t\t\t\tPromise.resolve(fn()).then(\n\t\t\t\t\t\tval => {\n\t\t\t\t\t\t\tresolve(val);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t},\n\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\tthis._next();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (!this._isPaused && this._pendingCount < this._concurrency) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tthis.queue.enqueue(run, opts);\n\t\t\t}\n\t\t});\n\t}\n\n\taddAll(fns, opts) {\n\t\treturn Promise.all(fns.map(fn => this.add(fn, opts)));\n\t}\n\n\tstart() {\n\t\tif (!this._isPaused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isPaused = false;\n\t\twhile (this.queue.size > 0 && this._pendingCount < this._concurrency) {\n\t\t\tthis.queue.dequeue()();\n\t\t}\n\t}\n\n\tpause() {\n\t\tthis._isPaused = true;\n\t}\n\n\tclear() {\n\t\tthis.queue = new this._queueClass(); // eslint-disable-line new-cap\n\t}\n\n\tonEmpty() {\n\t\t// Instantly resolve if the queue is empty\n\t\tif (this.queue.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveEmpty;\n\t\t\tthis._resolveEmpty = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tonIdle() {\n\t\t// Instantly resolve if none pending\n\t\tif (this._pendingCount === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveIdle;\n\t\t\tthis._resolveIdle = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tget size() {\n\t\treturn this.queue.size;\n\t}\n\n\tget pending() {\n\t\treturn this._pendingCount;\n\t}\n\n\tget isPaused() {\n\t\treturn this._isPaused;\n\t}\n}\n\nmodule.exports = PQueue;\n"],"sourceRoot":""}